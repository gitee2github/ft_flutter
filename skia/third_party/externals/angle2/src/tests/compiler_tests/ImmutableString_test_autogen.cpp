// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// ImmutableString_test_autogen.cpp:
//   Tests for matching script-generated hashes with runtime computed hashes.

#include "compiler/translator/ImmutableString.h"
#include "gtest/gtest.h"

namespace sh
{

TEST(ImmutableStringTest, ScriptGeneratedHashesMatch)
{
    ASSERT_EQ(0x00000238u, ImmutableString("frexp").mangledNameHash());
    ASSERT_EQ(0x0000018cu, ImmutableString("ldexp").mangledNameHash());
    ASSERT_EQ(0x000002d9u, ImmutableString("packUnorm4x8").mangledNameHash());
    ASSERT_EQ(0x0000022du, ImmutableString("packSnorm4x8").mangledNameHash());
    ASSERT_EQ(0x00000081u, ImmutableString("unpackUnorm4x8").mangledNameHash());
    ASSERT_EQ(0x00000369u, ImmutableString("unpackSnorm4x8").mangledNameHash());
    ASSERT_EQ(0x000003feu, ImmutableString("bitfieldExtract").mangledNameHash());
    ASSERT_EQ(0x00000002u, ImmutableString("bitfieldInsert").mangledNameHash());
    ASSERT_EQ(0x00000152u, ImmutableString("bitfieldReverse").mangledNameHash());
    ASSERT_EQ(0x000003cbu, ImmutableString("bitCount").mangledNameHash());
    ASSERT_EQ(0x00000043u, ImmutableString("findLSB").mangledNameHash());
    ASSERT_EQ(0x00000266u, ImmutableString("findMSB").mangledNameHash());
    ASSERT_EQ(0x00000048u, ImmutableString("uaddCarry").mangledNameHash());
    ASSERT_EQ(0x000002feu, ImmutableString("usubBorrow").mangledNameHash());
    ASSERT_EQ(0x000001ffu, ImmutableString("umulExtended").mangledNameHash());
    ASSERT_EQ(0x000000afu, ImmutableString("imulExtended").mangledNameHash());
    ASSERT_EQ(0x0000017eu, ImmutableString("textureSize").mangledNameHash());
    ASSERT_EQ(0x00000180u, ImmutableString("texelFetch").mangledNameHash());
    ASSERT_EQ(0x000001abu, ImmutableString("textureGather").mangledNameHash());
    ASSERT_EQ(0x00000004u, ImmutableString("textureGatherOffset").mangledNameHash());
    ASSERT_EQ(0x000003fcu, ImmutableString("atomicCounter").mangledNameHash());
    ASSERT_EQ(0x00000108u, ImmutableString("atomicCounterIncrement").mangledNameHash());
    ASSERT_EQ(0x0000027fu, ImmutableString("atomicCounterDecrement").mangledNameHash());
    ASSERT_EQ(0x00000400u, ImmutableString("atomicAdd").mangledNameHash());
    ASSERT_EQ(0x000002a4u, ImmutableString("atomicMin").mangledNameHash());
    ASSERT_EQ(0x000001f5u, ImmutableString("atomicMax").mangledNameHash());
    ASSERT_EQ(0x0000030eu, ImmutableString("atomicAnd").mangledNameHash());
    ASSERT_EQ(0x00000428u, ImmutableString("atomicOr").mangledNameHash());
    ASSERT_EQ(0x000001dbu, ImmutableString("atomicXor").mangledNameHash());
    ASSERT_EQ(0x000003b3u, ImmutableString("atomicExchange").mangledNameHash());
    ASSERT_EQ(0x000000ebu, ImmutableString("atomicCompSwap").mangledNameHash());
    ASSERT_EQ(0x000001bcu, ImmutableString("imageSize").mangledNameHash());
    ASSERT_EQ(0x00000378u, ImmutableString("imageLoad").mangledNameHash());
    ASSERT_EQ(0x000002b1u, ImmutableString("imageStore").mangledNameHash());
    ASSERT_EQ(0x000003eeu, ImmutableString("memoryBarrier").mangledNameHash());
    ASSERT_EQ(0x0000024du, ImmutableString("memoryBarrierAtomicCounter").mangledNameHash());
    ASSERT_EQ(0x000001d4u, ImmutableString("memoryBarrierBuffer").mangledNameHash());
    ASSERT_EQ(0x000001b6u, ImmutableString("memoryBarrierImage").mangledNameHash());
    ASSERT_EQ(0x00000148u, ImmutableString("barrier").mangledNameHash());
    ASSERT_EQ(0x00000416u, ImmutableString("memoryBarrierShared").mangledNameHash());
    ASSERT_EQ(0x000001f8u, ImmutableString("groupMemoryBarrier").mangledNameHash());
    ASSERT_EQ(0x00000355u, ImmutableString("EmitVertex").mangledNameHash());
    ASSERT_EQ(0x000000ecu, ImmutableString("EndPrimitive").mangledNameHash());
    ASSERT_EQ(0x0000006fu, ImmutableString("sinh").mangledNameHash());
    ASSERT_EQ(0x00000045u, ImmutableString("cosh").mangledNameHash());
    ASSERT_EQ(0x000002e3u, ImmutableString("tanh").mangledNameHash());
    ASSERT_EQ(0x000002c8u, ImmutableString("asinh").mangledNameHash());
    ASSERT_EQ(0x0000000du, ImmutableString("acosh").mangledNameHash());
    ASSERT_EQ(0x000000d5u, ImmutableString("atanh").mangledNameHash());
    ASSERT_EQ(0x00000059u, ImmutableString("abs").mangledNameHash());
    ASSERT_EQ(0x000001b9u, ImmutableString("sign").mangledNameHash());
    ASSERT_EQ(0x00000071u, ImmutableString("trunc").mangledNameHash());
    ASSERT_EQ(0x0000003bu, ImmutableString("round").mangledNameHash());
    ASSERT_EQ(0x00000246u, ImmutableString("roundEven").mangledNameHash());
    ASSERT_EQ(0x000001e3u, ImmutableString("min").mangledNameHash());
    ASSERT_EQ(0x000000e4u, ImmutableString("max").mangledNameHash());
    ASSERT_EQ(0x0000013fu, ImmutableString("clamp").mangledNameHash());
    ASSERT_EQ(0x000001ebu, ImmutableString("mix").mangledNameHash());
    ASSERT_EQ(0x00000136u, ImmutableString("modf").mangledNameHash());
    ASSERT_EQ(0x00000273u, ImmutableString("isnan").mangledNameHash());
    ASSERT_EQ(0x000003acu, ImmutableString("isinf").mangledNameHash());
    ASSERT_EQ(0x000002fdu, ImmutableString("floatBitsToInt").mangledNameHash());
    ASSERT_EQ(0x0000018eu, ImmutableString("floatBitsToUint").mangledNameHash());
    ASSERT_EQ(0x000002f1u, ImmutableString("intBitsToFloat").mangledNameHash());
    ASSERT_EQ(0x000000f0u, ImmutableString("uintBitsToFloat").mangledNameHash());
    ASSERT_EQ(0x00000330u, ImmutableString("packSnorm2x16").mangledNameHash());
    ASSERT_EQ(0x00000080u, ImmutableString("packUnorm2x16").mangledNameHash());
    ASSERT_EQ(0x000000fbu, ImmutableString("packHalf2x16").mangledNameHash());
    ASSERT_EQ(0x00000167u, ImmutableString("unpackSnorm2x16").mangledNameHash());
    ASSERT_EQ(0x000001f6u, ImmutableString("unpackUnorm2x16").mangledNameHash());
    ASSERT_EQ(0x0000003eu, ImmutableString("unpackHalf2x16").mangledNameHash());
    ASSERT_EQ(0x00000082u, ImmutableString("matrixCompMult").mangledNameHash());
    ASSERT_EQ(0x000000efu, ImmutableString("outerProduct").mangledNameHash());
    ASSERT_EQ(0x00000287u, ImmutableString("transpose").mangledNameHash());
    ASSERT_EQ(0x0000037bu, ImmutableString("determinant").mangledNameHash());
    ASSERT_EQ(0x00000011u, ImmutableString("inverse").mangledNameHash());
    ASSERT_EQ(0x00000037u, ImmutableString("lessThan").mangledNameHash());
    ASSERT_EQ(0x00000150u, ImmutableString("lessThanEqual").mangledNameHash());
    ASSERT_EQ(0x000000aau, ImmutableString("greaterThan").mangledNameHash());
    ASSERT_EQ(0x000002d0u, ImmutableString("greaterThanEqual").mangledNameHash());
    ASSERT_EQ(0x0000029bu, ImmutableString("equal").mangledNameHash());
    ASSERT_EQ(0x0000042cu, ImmutableString("notEqual").mangledNameHash());
    ASSERT_EQ(0x00000236u, ImmutableString("texture").mangledNameHash());
    ASSERT_EQ(0x00000338u, ImmutableString("textureProj").mangledNameHash());
    ASSERT_EQ(0x00000155u, ImmutableString("textureLod").mangledNameHash());
    ASSERT_EQ(0x00000134u, ImmutableString("textureProjLod").mangledNameHash());
    ASSERT_EQ(0x00000092u, ImmutableString("textureGrad").mangledNameHash());
    ASSERT_EQ(0x00000035u, ImmutableString("textureProjGrad").mangledNameHash());
    ASSERT_EQ(0x0000013eu, ImmutableString("textureOffset").mangledNameHash());
    ASSERT_EQ(0x000002acu, ImmutableString("textureProjOffset").mangledNameHash());
    ASSERT_EQ(0x000002aeu, ImmutableString("textureLodOffset").mangledNameHash());
    ASSERT_EQ(0x000003c6u, ImmutableString("textureProjLodOffset").mangledNameHash());
    ASSERT_EQ(0x0000025bu, ImmutableString("texelFetchOffset").mangledNameHash());
    ASSERT_EQ(0x0000041fu, ImmutableString("textureGradOffset").mangledNameHash());
    ASSERT_EQ(0x00000017u, ImmutableString("textureProjGradOffset").mangledNameHash());
    ASSERT_EQ(0x00000100u, ImmutableString("rgb_2_yuv").mangledNameHash());
    ASSERT_EQ(0x00000249u, ImmutableString("yuv_2_rgb").mangledNameHash());
    ASSERT_EQ(0x00000367u, ImmutableString("dFdx").mangledNameHash());
    ASSERT_EQ(0x00000388u, ImmutableString("dFdy").mangledNameHash());
    ASSERT_EQ(0x00000104u, ImmutableString("fwidth").mangledNameHash());
    ASSERT_EQ(0x000000bbu, ImmutableString("texture2D").mangledNameHash());
    ASSERT_EQ(0x00000109u, ImmutableString("texture2DProj").mangledNameHash());
    ASSERT_EQ(0x000000f6u, ImmutableString("textureCube").mangledNameHash());
    ASSERT_EQ(0x00000142u, ImmutableString("texture2DRect").mangledNameHash());
    ASSERT_EQ(0x0000002du, ImmutableString("texture2DRectProj").mangledNameHash());
    ASSERT_EQ(0x00000054u, ImmutableString("texture2DGradEXT").mangledNameHash());
    ASSERT_EQ(0x000002e0u, ImmutableString("texture2DProjGradEXT").mangledNameHash());
    ASSERT_EQ(0x00000010u, ImmutableString("textureCubeGradEXT").mangledNameHash());
    ASSERT_EQ(0x0000029cu, ImmutableString("texture2DLodEXT").mangledNameHash());
    ASSERT_EQ(0x0000027cu, ImmutableString("texture2DProjLodEXT").mangledNameHash());
    ASSERT_EQ(0x000003beu, ImmutableString("textureCubeLodEXT").mangledNameHash());
    ASSERT_EQ(0x000001feu, ImmutableString("texture3D").mangledNameHash());
    ASSERT_EQ(0x000001ccu, ImmutableString("texture3DProj").mangledNameHash());
    ASSERT_EQ(0x0000022bu, ImmutableString("texture3DLod").mangledNameHash());
    ASSERT_EQ(0x000001e8u, ImmutableString("texture3DProjLod").mangledNameHash());
    ASSERT_EQ(0x00000438u, ImmutableString("texture2DLod").mangledNameHash());
    ASSERT_EQ(0x000003bbu, ImmutableString("texture2DProjLod").mangledNameHash());
    ASSERT_EQ(0x0000002cu, ImmutableString("textureCubeLod").mangledNameHash());
    ASSERT_EQ(0x00000130u, ImmutableString("radians").mangledNameHash());
    ASSERT_EQ(0x00000117u, ImmutableString("degrees").mangledNameHash());
    ASSERT_EQ(0x000000ddu, ImmutableString("sin").mangledNameHash());
    ASSERT_EQ(0x00000295u, ImmutableString("cos").mangledNameHash());
    ASSERT_EQ(0x000000c8u, ImmutableString("tan").mangledNameHash());
    ASSERT_EQ(0x0000004fu, ImmutableString("asin").mangledNameHash());
    ASSERT_EQ(0x000003adu, ImmutableString("acos").mangledNameHash());
    ASSERT_EQ(0x000000e2u, ImmutableString("atan").mangledNameHash());
    ASSERT_EQ(0x000002a9u, ImmutableString("pow").mangledNameHash());
    ASSERT_EQ(0x00000214u, ImmutableString("exp").mangledNameHash());
    ASSERT_EQ(0x000003cau, ImmutableString("log").mangledNameHash());
    ASSERT_EQ(0x00000197u, ImmutableString("exp2").mangledNameHash());
    ASSERT_EQ(0x00000162u, ImmutableString("log2").mangledNameHash());
    ASSERT_EQ(0x00000308u, ImmutableString("sqrt").mangledNameHash());
    ASSERT_EQ(0x000003e7u, ImmutableString("inversesqrt").mangledNameHash());
    ASSERT_EQ(0x00000412u, ImmutableString("floor").mangledNameHash());
    ASSERT_EQ(0x0000024fu, ImmutableString("ceil").mangledNameHash());
    ASSERT_EQ(0x000002beu, ImmutableString("fract").mangledNameHash());
    ASSERT_EQ(0x0000035cu, ImmutableString("mod").mangledNameHash());
    ASSERT_EQ(0x0000039au, ImmutableString("step").mangledNameHash());
    ASSERT_EQ(0x00000131u, ImmutableString("smoothstep").mangledNameHash());
    ASSERT_EQ(0x0000017bu, ImmutableString("length").mangledNameHash());
    ASSERT_EQ(0x000001bdu, ImmutableString("distance").mangledNameHash());
    ASSERT_EQ(0x0000021au, ImmutableString("dot").mangledNameHash());
    ASSERT_EQ(0x0000011bu, ImmutableString("cross").mangledNameHash());
    ASSERT_EQ(0x000000cdu, ImmutableString("normalize").mangledNameHash());
    ASSERT_EQ(0x00000156u, ImmutableString("faceforward").mangledNameHash());
    ASSERT_EQ(0x000000e6u, ImmutableString("reflect").mangledNameHash());
    ASSERT_EQ(0x000003ecu, ImmutableString("refract").mangledNameHash());
    ASSERT_EQ(0x000001d9u, ImmutableString("any").mangledNameHash());
    ASSERT_EQ(0x00000001u, ImmutableString("all").mangledNameHash());
    ASSERT_EQ(0x00000413u, ImmutableString("not").mangledNameHash());
    ASSERT_EQ(0x000000aeu, ImmutableString("frexp(00B00C").mangledNameHash());
    ASSERT_EQ(0x00000258u, ImmutableString("frexp(10B10C").mangledNameHash());
    ASSERT_EQ(0x000001b2u, ImmutableString("frexp(20B20C").mangledNameHash());
    ASSERT_EQ(0x00000229u, ImmutableString("frexp(30B30C").mangledNameHash());
    ASSERT_EQ(0x0000001cu, ImmutableString("ldexp(00B00C").mangledNameHash());
    ASSERT_EQ(0x00000391u, ImmutableString("ldexp(10B10C").mangledNameHash());
    ASSERT_EQ(0x000003d3u, ImmutableString("ldexp(20B20C").mangledNameHash());
    ASSERT_EQ(0x000002eau, ImmutableString("ldexp(30B30C").mangledNameHash());
    ASSERT_EQ(0x00000005u, ImmutableString("packUnorm4x8(30B").mangledNameHash());
    ASSERT_EQ(0x00000365u, ImmutableString("packSnorm4x8(30B").mangledNameHash());
    ASSERT_EQ(0x0000032fu, ImmutableString("unpackUnorm4x8(00D").mangledNameHash());
    ASSERT_EQ(0x00000164u, ImmutableString("unpackSnorm4x8(00D").mangledNameHash());
    ASSERT_EQ(0x00000169u, ImmutableString("bitfieldExtract(00C00C00C").mangledNameHash());
    ASSERT_EQ(0x000003bdu, ImmutableString("bitfieldExtract(10C00C00C").mangledNameHash());
    ASSERT_EQ(0x0000011du, ImmutableString("bitfieldExtract(20C00C00C").mangledNameHash());
    ASSERT_EQ(0x0000010fu, ImmutableString("bitfieldExtract(30C00C00C").mangledNameHash());
    ASSERT_EQ(0x000003bcu, ImmutableString("bitfieldExtract(00D00C00C").mangledNameHash());
    ASSERT_EQ(0x0000015cu, ImmutableString("bitfieldExtract(10D00C00C").mangledNameHash());
    ASSERT_EQ(0x000002b3u, ImmutableString("bitfieldExtract(20D00C00C").mangledNameHash());
    ASSERT_EQ(0x0000018bu, ImmutableString("bitfieldExtract(30D00C00C").mangledNameHash());
    ASSERT_EQ(0x000003d9u, ImmutableString("bitfieldInsert(00C00C00C00C").mangledNameHash());
    ASSERT_EQ(0x000003fau, ImmutableString("bitfieldInsert(10C10C00C00C").mangledNameHash());
    ASSERT_EQ(0x0000026fu, ImmutableString("bitfieldInsert(20C20C00C00C").mangledNameHash());
    ASSERT_EQ(0x00000304u, ImmutableString("bitfieldInsert(30C30C00C00C").mangledNameHash());
    ASSERT_EQ(0x00000217u, ImmutableString("bitfieldInsert(00D00D00C00C").mangledNameHash());
    ASSERT_EQ(0x00000324u, ImmutableString("bitfieldInsert(10D10D00C00C").mangledNameHash());
    ASSERT_EQ(0x00000317u, ImmutableString("bitfieldInsert(20D20D00C00C").mangledNameHash());
    ASSERT_EQ(0x000003deu, ImmutableString("bitfieldInsert(30D30D00C00C").mangledNameHash());
    ASSERT_EQ(0x00000194u, ImmutableString("bitfieldReverse(00C").mangledNameHash());
    ASSERT_EQ(0x000002f9u, ImmutableString("bitfieldReverse(10C").mangledNameHash());
    ASSERT_EQ(0x00000069u, ImmutableString("bitfieldReverse(20C").mangledNameHash());
    ASSERT_EQ(0x000001aau, ImmutableString("bitfieldReverse(30C").mangledNameHash());
    ASSERT_EQ(0x00000191u, ImmutableString("bitfieldReverse(00D").mangledNameHash());
    ASSERT_EQ(0x000002f7u, ImmutableString("bitfieldReverse(10D").mangledNameHash());
    ASSERT_EQ(0x00000067u, ImmutableString("bitfieldReverse(20D").mangledNameHash());
    ASSERT_EQ(0x000001a9u, ImmutableString("bitfieldReverse(30D").mangledNameHash());
    ASSERT_EQ(0x0000002bu, ImmutableString("bitCount(00C").mangledNameHash());
    ASSERT_EQ(0x0000031au, ImmutableString("bitCount(10C").mangledNameHash());
    ASSERT_EQ(0x000001e5u, ImmutableString("bitCount(20C").mangledNameHash());
    ASSERT_EQ(0x00000094u, ImmutableString("bitCount(30C").mangledNameHash());
    ASSERT_EQ(0x0000002eu, ImmutableString("bitCount(00D").mangledNameHash());
    ASSERT_EQ(0x0000031fu, ImmutableString("bitCount(10D").mangledNameHash());
    ASSERT_EQ(0x000001e6u, ImmutableString("bitCount(20D").mangledNameHash());
    ASSERT_EQ(0x00000096u, ImmutableString("bitCount(30D").mangledNameHash());
    ASSERT_EQ(0x0000034du, ImmutableString("findLSB(00C").mangledNameHash());
    ASSERT_EQ(0x00000202u, ImmutableString("findLSB(10C").mangledNameHash());
    ASSERT_EQ(0x00000364u, ImmutableString("findLSB(20C").mangledNameHash());
    ASSERT_EQ(0x00000396u, ImmutableString("findLSB(30C").mangledNameHash());
    ASSERT_EQ(0x00000350u, ImmutableString("findLSB(00D").mangledNameHash());
    ASSERT_EQ(0x00000205u, ImmutableString("findLSB(10D").mangledNameHash());
    ASSERT_EQ(0x000000abu, ImmutableString("findLSB(20D").mangledNameHash());
    ASSERT_EQ(0x0000033cu, ImmutableString("findLSB(30D").mangledNameHash());
    ASSERT_EQ(0x0000040eu, ImmutableString("findMSB(00C").mangledNameHash());
    ASSERT_EQ(0x00000111u, ImmutableString("findMSB(10C").mangledNameHash());
    ASSERT_EQ(0x00000018u, ImmutableString("findMSB(20C").mangledNameHash());
    ASSERT_EQ(0x000002c1u, ImmutableString("findMSB(30C").mangledNameHash());
    ASSERT_EQ(0x00000327u, ImmutableString("findMSB(00D").mangledNameHash());
    ASSERT_EQ(0x00000116u, ImmutableString("findMSB(10D").mangledNameHash());
    ASSERT_EQ(0x00000159u, ImmutableString("findMSB(20D").mangledNameHash());
    ASSERT_EQ(0x000002c3u, ImmutableString("findMSB(30D").mangledNameHash());
    ASSERT_EQ(0x0000017du, ImmutableString("uaddCarry(00D00D00D").mangledNameHash());
    ASSERT_EQ(0x00000417u, ImmutableString("uaddCarry(10D10D10D").mangledNameHash());
    ASSERT_EQ(0x000000cbu, ImmutableString("uaddCarry(20D20D20D").mangledNameHash());
    ASSERT_EQ(0x00000019u, ImmutableString("uaddCarry(30D30D30D").mangledNameHash());
    ASSERT_EQ(0x000003c5u, ImmutableString("usubBorrow(00D00D00D").mangledNameHash());
    ASSERT_EQ(0x00000107u, ImmutableString("usubBorrow(10D10D10D").mangledNameHash());
    ASSERT_EQ(0x00000414u, ImmutableString("usubBorrow(20D20D20D").mangledNameHash());
    ASSERT_EQ(0x0000039cu, ImmutableString("usubBorrow(30D30D30D").mangledNameHash());
    ASSERT_EQ(0x0000034cu, ImmutableString("umulExtended(00D00D00D00D").mangledNameHash());
    ASSERT_EQ(0x00000072u, ImmutableString("umulExtended(10D10D10D10D").mangledNameHash());
    ASSERT_EQ(0x00000185u, ImmutableString("umulExtended(20D20D20D20D").mangledNameHash());
    ASSERT_EQ(0x0000021du, ImmutableString("umulExtended(30D30D30D30D").mangledNameHash());
    ASSERT_EQ(0x0000023cu, ImmutableString("imulExtended(00C00C00C00C").mangledNameHash());
    ASSERT_EQ(0x0000022au, ImmutableString("imulExtended(10C10C10C10C").mangledNameHash());
    ASSERT_EQ(0x00000252u, ImmutableString("imulExtended(20C20C20C20C").mangledNameHash());
    ASSERT_EQ(0x0000030cu, ImmutableString("imulExtended(30C30C30C30C").mangledNameHash());
    ASSERT_EQ(0x000002e2u, ImmutableString("textureSize(00O").mangledNameHash());
    ASSERT_EQ(0x000002a2u, ImmutableString("textureSize(00U").mangledNameHash());
    ASSERT_EQ(0x00000286u, ImmutableString("textureSize(00a").mangledNameHash());
    ASSERT_EQ(0x0000007eu, ImmutableString("textureSize(00P").mangledNameHash());
    ASSERT_EQ(0x000002a3u, ImmutableString("textureSize(00V").mangledNameHash());
    ASSERT_EQ(0x00000288u, ImmutableString("textureSize(00b").mangledNameHash());
    ASSERT_EQ(0x0000027du, ImmutableString("texelFetch(00O10C00C").mangledNameHash());
    ASSERT_EQ(0x000000c1u, ImmutableString("texelFetch(00U10C00C").mangledNameHash());
    ASSERT_EQ(0x00000176u, ImmutableString("texelFetch(00a10C00C").mangledNameHash());
    ASSERT_EQ(0x00000434u, ImmutableString("texelFetch(00P20C00C").mangledNameHash());
    ASSERT_EQ(0x00000426u, ImmutableString("texelFetch(00V20C00C").mangledNameHash());
    ASSERT_EQ(0x00000334u, ImmutableString("texelFetch(00b20C00C").mangledNameHash());
    ASSERT_EQ(0x0000020bu, ImmutableString("textureGather(00H10B").mangledNameHash());
    ASSERT_EQ(0x000003fdu, ImmutableString("textureGather(00Q10B").mangledNameHash());
    ASSERT_EQ(0x000001f9u, ImmutableString("textureGather(00W10B").mangledNameHash());
    ASSERT_EQ(0x0000005bu, ImmutableString("textureGather(00H10B00C").mangledNameHash());
    ASSERT_EQ(0x000001d6u, ImmutableString("textureGather(00Q10B00C").mangledNameHash());
    ASSERT_EQ(0x00000052u, ImmutableString("textureGather(00W10B00C").mangledNameHash());
    ASSERT_EQ(0x000000f5u, ImmutableString("textureGather(00K20B").mangledNameHash());
    ASSERT_EQ(0x0000042eu, ImmutableString("textureGather(00T20B").mangledNameHash());
    ASSERT_EQ(0x000002e5u, ImmutableString("textureGather(00Z20B").mangledNameHash());
    ASSERT_EQ(0x00000275u, ImmutableString("textureGather(00K20B00C").mangledNameHash());
    ASSERT_EQ(0x00000377u, ImmutableString("textureGather(00T20B00C").mangledNameHash());
    ASSERT_EQ(0x000002b5u, ImmutableString("textureGather(00Z20B00C").mangledNameHash());
    ASSERT_EQ(0x0000023fu, ImmutableString("textureGather(00J20B").mangledNameHash());
    ASSERT_EQ(0x0000015au, ImmutableString("textureGather(00S20B").mangledNameHash());
    ASSERT_EQ(0x00000049u, ImmutableString("textureGather(00Y20B").mangledNameHash());
    ASSERT_EQ(0x00000044u, ImmutableString("textureGather(00J20B00C").mangledNameHash());
    ASSERT_EQ(0x00000398u, ImmutableString("textureGather(00S20B00C").mangledNameHash());
    ASSERT_EQ(0x000000e1u, ImmutableString("textureGather(00Y20B00C").mangledNameHash());
    ASSERT_EQ(0x00000121u, ImmutableString("textureGather(00c10B").mangledNameHash());
    ASSERT_EQ(0x0000036eu, ImmutableString("textureGather(00c10B00B").mangledNameHash());
    ASSERT_EQ(0x0000005cu, ImmutableString("textureGather(00e20B").mangledNameHash());
    ASSERT_EQ(0x00000186u, ImmutableString("textureGather(00e20B00B").mangledNameHash());
    ASSERT_EQ(0x0000015du, ImmutableString("textureGather(00d20B").mangledNameHash());
    ASSERT_EQ(0x0000009cu, ImmutableString("textureGather(00d20B00B").mangledNameHash());
    ASSERT_EQ(0x0000003du, ImmutableString("textureGatherOffset(00H10B10C").mangledNameHash());
    ASSERT_EQ(0x00000222u, ImmutableString("textureGatherOffset(00Q10B10C").mangledNameHash());
    ASSERT_EQ(0x00000282u, ImmutableString("textureGatherOffset(00W10B10C").mangledNameHash());
    ASSERT_EQ(0x00000418u, ImmutableString("textureGatherOffset(00H10B10C00C").mangledNameHash());
    ASSERT_EQ(0x0000014du, ImmutableString("textureGatherOffset(00Q10B10C00C").mangledNameHash());
    ASSERT_EQ(0x000000b9u, ImmutableString("textureGatherOffset(00W10B10C00C").mangledNameHash());
    ASSERT_EQ(0x000000b7u, ImmutableString("textureGatherOffset(00K20B10C").mangledNameHash());
    ASSERT_EQ(0x000002edu, ImmutableString("textureGatherOffset(00T20B10C").mangledNameHash());
    ASSERT_EQ(0x00000437u, ImmutableString("textureGatherOffset(00Z20B10C").mangledNameHash());
    ASSERT_EQ(0x000001b3u, ImmutableString("textureGatherOffset(00K20B10C00C").mangledNameHash());
    ASSERT_EQ(0x00000124u, ImmutableString("textureGatherOffset(00T20B10C00C").mangledNameHash());
    ASSERT_EQ(0x000003a6u, ImmutableString("textureGatherOffset(00Z20B10C00C").mangledNameHash());
    ASSERT_EQ(0x0000026du, ImmutableString("textureGatherOffset(00c10B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000047u, ImmutableString("textureGatherOffset(00e20B00B10C").mangledNameHash());
    ASSERT_EQ(0x000002bcu, ImmutableString("atomicCounter(00F").mangledNameHash());
    ASSERT_EQ(0x000003d1u, ImmutableString("atomicCounterIncrement(00F").mangledNameHash());
    ASSERT_EQ(0x000000b5u, ImmutableString("atomicCounterDecrement(00F").mangledNameHash());
    ASSERT_EQ(0x0000004eu, ImmutableString("atomicAdd(00D00D").mangledNameHash());
    ASSERT_EQ(0x0000024bu, ImmutableString("atomicAdd(00C00C").mangledNameHash());
    ASSERT_EQ(0x0000015eu, ImmutableString("atomicMin(00D00D").mangledNameHash());
    ASSERT_EQ(0x00000105u, ImmutableString("atomicMin(00C00C").mangledNameHash());
    ASSERT_EQ(0x000000edu, ImmutableString("atomicMax(00D00D").mangledNameHash());
    ASSERT_EQ(0x0000029eu, ImmutableString("atomicMax(00C00C").mangledNameHash());
    ASSERT_EQ(0x00000090u, ImmutableString("atomicAnd(00D00D").mangledNameHash());
    ASSERT_EQ(0x000001c3u, ImmutableString("atomicAnd(00C00C").mangledNameHash());
    ASSERT_EQ(0x0000032eu, ImmutableString("atomicOr(00D00D").mangledNameHash());
    ASSERT_EQ(0x0000000fu, ImmutableString("atomicOr(00C00C").mangledNameHash());
    ASSERT_EQ(0x000002b6u, ImmutableString("atomicXor(00D00D").mangledNameHash());
    ASSERT_EQ(0x00000068u, ImmutableString("atomicXor(00C00C").mangledNameHash());
    ASSERT_EQ(0x00000251u, ImmutableString("atomicExchange(00D00D").mangledNameHash());
    ASSERT_EQ(0x00000305u, ImmutableString("atomicExchange(00C00C").mangledNameHash());
    ASSERT_EQ(0x000002c0u, ImmutableString("atomicCompSwap(00D00D00D").mangledNameHash());
    ASSERT_EQ(0x00000390u, ImmutableString("atomicCompSwap(00C00C00C").mangledNameHash());
    ASSERT_EQ(0x000001e9u, ImmutableString("imageSize(00f").mangledNameHash());
    ASSERT_EQ(0x00000285u, ImmutableString("imageSize(00g").mangledNameHash());
    ASSERT_EQ(0x000001a8u, ImmutableString("imageSize(00h").mangledNameHash());
    ASSERT_EQ(0x000001dcu, ImmutableString("imageSize(00i").mangledNameHash());
    ASSERT_EQ(0x000001dfu, ImmutableString("imageSize(00j").mangledNameHash());
    ASSERT_EQ(0x000000a0u, ImmutableString("imageSize(00k").mangledNameHash());
    ASSERT_EQ(0x000001e1u, ImmutableString("imageSize(00l").mangledNameHash());
    ASSERT_EQ(0x000001e0u, ImmutableString("imageSize(00m").mangledNameHash());
    ASSERT_EQ(0x00000213u, ImmutableString("imageSize(00n").mangledNameHash());
    ASSERT_EQ(0x00000200u, ImmutableString("imageSize(00o").mangledNameHash());
    ASSERT_EQ(0x00000165u, ImmutableString("imageSize(00p").mangledNameHash());
    ASSERT_EQ(0x000001f0u, ImmutableString("imageSize(00q").mangledNameHash());
    ASSERT_EQ(0x000002bdu, ImmutableString("imageLoad(00f10C").mangledNameHash());
    ASSERT_EQ(0x0000025du, ImmutableString("imageLoad(00g10C").mangledNameHash());
    ASSERT_EQ(0x00000219u, ImmutableString("imageLoad(00h10C").mangledNameHash());
    ASSERT_EQ(0x00000038u, ImmutableString("imageLoad(00i20C").mangledNameHash());
    ASSERT_EQ(0x00000089u, ImmutableString("imageLoad(00j20C").mangledNameHash());
    ASSERT_EQ(0x000003a9u, ImmutableString("imageLoad(00k20C").mangledNameHash());
    ASSERT_EQ(0x000002d8u, ImmutableString("imageLoad(00l20C").mangledNameHash());
    ASSERT_EQ(0x00000281u, ImmutableString("imageLoad(00m20C").mangledNameHash());
    ASSERT_EQ(0x0000019eu, ImmutableString("imageLoad(00n20C").mangledNameHash());
    ASSERT_EQ(0x00000439u, ImmutableString("imageLoad(00o20C").mangledNameHash());
    ASSERT_EQ(0x000003e5u, ImmutableString("imageLoad(00p20C").mangledNameHash());
    ASSERT_EQ(0x0000039bu, ImmutableString("imageLoad(00q20C").mangledNameHash());
    ASSERT_EQ(0x00000103u, ImmutableString("imageStore(00f10C30B").mangledNameHash());
    ASSERT_EQ(0x00000198u, ImmutableString("imageStore(00g10C30C").mangledNameHash());
    ASSERT_EQ(0x000003dau, ImmutableString("imageStore(00h10C30D").mangledNameHash());
    ASSERT_EQ(0x000000f4u, ImmutableString("imageStore(00i20C30B").mangledNameHash());
    ASSERT_EQ(0x000003ffu, ImmutableString("imageStore(00j20C30C").mangledNameHash());
    ASSERT_EQ(0x0000016cu, ImmutableString("imageStore(00k20C30D").mangledNameHash());
    ASSERT_EQ(0x0000038cu, ImmutableString("imageStore(00l20C30B").mangledNameHash());
    ASSERT_EQ(0x00000084u, ImmutableString("imageStore(00m20C30C").mangledNameHash());
    ASSERT_EQ(0x0000004au, ImmutableString("imageStore(00n20C30D").mangledNameHash());
    ASSERT_EQ(0x000003ceu, ImmutableString("imageStore(00o20C30B").mangledNameHash());
    ASSERT_EQ(0x00000329u, ImmutableString("imageStore(00p20C30C").mangledNameHash());
    ASSERT_EQ(0x00000375u, ImmutableString("imageStore(00q20C30D").mangledNameHash());
    ASSERT_EQ(0x000001d2u, ImmutableString("memoryBarrier(").mangledNameHash());
    ASSERT_EQ(0x0000007du, ImmutableString("memoryBarrierAtomicCounter(").mangledNameHash());
    ASSERT_EQ(0x000001eau, ImmutableString("memoryBarrierBuffer(").mangledNameHash());
    ASSERT_EQ(0x000003e6u, ImmutableString("memoryBarrierImage(").mangledNameHash());
    ASSERT_EQ(0x000000a7u, ImmutableString("gl_MaxImageUnits").mangledNameHash());
    ASSERT_EQ(0x00000102u, ImmutableString("gl_MaxVertexImageUniforms").mangledNameHash());
    ASSERT_EQ(0x000000beu, ImmutableString("gl_MaxFragmentImageUniforms").mangledNameHash());
    ASSERT_EQ(0x000000dcu, ImmutableString("gl_MaxComputeImageUniforms").mangledNameHash());
    ASSERT_EQ(0x000001f2u, ImmutableString("gl_MaxCombinedImageUniforms").mangledNameHash());
    ASSERT_EQ(0x000000c7u,
              ImmutableString("gl_MaxCombinedShaderOutputResources").mangledNameHash());
    ASSERT_EQ(0x0000035bu, ImmutableString("gl_MaxComputeWorkGroupCount").mangledNameHash());
    ASSERT_EQ(0x0000041du, ImmutableString("gl_MaxComputeWorkGroupSize").mangledNameHash());
    ASSERT_EQ(0x00000343u, ImmutableString("gl_MaxComputeUniformComponents").mangledNameHash());
    ASSERT_EQ(0x00000135u, ImmutableString("gl_MaxComputeTextureImageUnits").mangledNameHash());
    ASSERT_EQ(0x0000040fu, ImmutableString("gl_MaxComputeAtomicCounters").mangledNameHash());
    ASSERT_EQ(0x0000012au, ImmutableString("gl_MaxComputeAtomicCounterBuffers").mangledNameHash());
    ASSERT_EQ(0x000002c9u, ImmutableString("gl_MaxVertexAtomicCounters").mangledNameHash());
    ASSERT_EQ(0x0000030bu, ImmutableString("gl_MaxFragmentAtomicCounters").mangledNameHash());
    ASSERT_EQ(0x0000013du, ImmutableString("gl_MaxCombinedAtomicCounters").mangledNameHash());
    ASSERT_EQ(0x000003f6u, ImmutableString("gl_MaxAtomicCounterBindings").mangledNameHash());
    ASSERT_EQ(0x00000074u, ImmutableString("gl_MaxVertexAtomicCounterBuffers").mangledNameHash());
    ASSERT_EQ(0x00000224u, ImmutableString("gl_MaxFragmentAtomicCounterBuffers").mangledNameHash());
    ASSERT_EQ(0x000002a6u, ImmutableString("gl_MaxCombinedAtomicCounterBuffers").mangledNameHash());
    ASSERT_EQ(0x00000315u, ImmutableString("gl_MaxAtomicCounterBufferSize").mangledNameHash());
    ASSERT_EQ(0x0000025fu, ImmutableString("gl_MaxGeometryInputComponents").mangledNameHash());
    ASSERT_EQ(0x00000206u, ImmutableString("gl_MaxGeometryOutputComponents").mangledNameHash());
    ASSERT_EQ(0x000002dfu, ImmutableString("gl_MaxGeometryImageUniforms").mangledNameHash());
    ASSERT_EQ(0x00000051u, ImmutableString("gl_MaxGeometryTextureImageUnits").mangledNameHash());
    ASSERT_EQ(0x00000032u, ImmutableString("gl_MaxGeometryOutputVertices").mangledNameHash());
    ASSERT_EQ(0x00000328u,
              ImmutableString("gl_MaxGeometryTotalOutputComponents").mangledNameHash());
    ASSERT_EQ(0x0000014fu, ImmutableString("gl_MaxGeometryUniformComponents").mangledNameHash());
    ASSERT_EQ(0x00000427u, ImmutableString("gl_MaxGeometryAtomicCounters").mangledNameHash());
    ASSERT_EQ(0x00000269u, ImmutableString("gl_MaxGeometryAtomicCounterBuffers").mangledNameHash());
    ASSERT_EQ(0x00000039u, ImmutableString("gl_in").mangledNameHash());
    ASSERT_EQ(0x0000014eu, ImmutableString("barrier(").mangledNameHash());
    ASSERT_EQ(0x000003b2u, ImmutableString("memoryBarrierShared(").mangledNameHash());
    ASSERT_EQ(0x0000006eu, ImmutableString("groupMemoryBarrier(").mangledNameHash());
    ASSERT_EQ(0x00000225u, ImmutableString("gl_NumWorkGroups").mangledNameHash());
    ASSERT_EQ(0x00000257u, ImmutableString("gl_WorkGroupSize").mangledNameHash());
    ASSERT_EQ(0x00000243u, ImmutableString("gl_WorkGroupID").mangledNameHash());
    ASSERT_EQ(0x000001aeu, ImmutableString("gl_LocalInvocationID").mangledNameHash());
    ASSERT_EQ(0x000001f3u, ImmutableString("gl_GlobalInvocationID").mangledNameHash());
    ASSERT_EQ(0x00000354u, ImmutableString("gl_LocalInvocationIndex").mangledNameHash());
    ASSERT_EQ(0x0000023bu, ImmutableString("EmitVertex(").mangledNameHash());
    ASSERT_EQ(0x0000017cu, ImmutableString("EndPrimitive(").mangledNameHash());
    ASSERT_EQ(0x0000035eu, ImmutableString("gl_PrimitiveIDIn").mangledNameHash());
    ASSERT_EQ(0x00000178u, ImmutableString("gl_InvocationID").mangledNameHash());
    ASSERT_EQ(0x00000007u, ImmutableString("gl_PrimitiveID").mangledNameHash());
    ASSERT_EQ(0x00000015u, ImmutableString("gl_Layer").mangledNameHash());
    ASSERT_EQ(0x00000270u, ImmutableString("gl_PerVertex").mangledNameHash());
    ASSERT_EQ(0x00000397u, ImmutableString("gl_Position").mangledNameHash());
    ASSERT_EQ(0x00000312u, ImmutableString("sinh(00B").mangledNameHash());
    ASSERT_EQ(0x0000039du, ImmutableString("sinh(10B").mangledNameHash());
    ASSERT_EQ(0x000001c4u, ImmutableString("sinh(20B").mangledNameHash());
    ASSERT_EQ(0x00000114u, ImmutableString("sinh(30B").mangledNameHash());
    ASSERT_EQ(0x00000190u, ImmutableString("cosh(00B").mangledNameHash());
    ASSERT_EQ(0x0000037du, ImmutableString("cosh(10B").mangledNameHash());
    ASSERT_EQ(0x000003b4u, ImmutableString("cosh(20B").mangledNameHash());
    ASSERT_EQ(0x000002e7u, ImmutableString("cosh(30B").mangledNameHash());
    ASSERT_EQ(0x00000058u, ImmutableString("tanh(00B").mangledNameHash());
    ASSERT_EQ(0x000001a2u, ImmutableString("tanh(10B").mangledNameHash());
    ASSERT_EQ(0x00000300u, ImmutableString("tanh(20B").mangledNameHash());
    ASSERT_EQ(0x00000014u, ImmutableString("tanh(30B").mangledNameHash());
    ASSERT_EQ(0x000002e1u, ImmutableString("asinh(00B").mangledNameHash());
    ASSERT_EQ(0x00000431u, ImmutableString("asinh(10B").mangledNameHash());
    ASSERT_EQ(0x00000119u, ImmutableString("asinh(20B").mangledNameHash());
    ASSERT_EQ(0x00000280u, ImmutableString("asinh(30B").mangledNameHash());
    ASSERT_EQ(0x00000248u, ImmutableString("acosh(00B").mangledNameHash());
    ASSERT_EQ(0x000000c6u, ImmutableString("acosh(10B").mangledNameHash());
    ASSERT_EQ(0x00000027u, ImmutableString("acosh(20B").mangledNameHash());
    ASSERT_EQ(0x0000032au, ImmutableString("acosh(30B").mangledNameHash());
    ASSERT_EQ(0x00000172u, ImmutableString("atanh(00B").mangledNameHash());
    ASSERT_EQ(0x00000028u, ImmutableString("atanh(10B").mangledNameHash());
    ASSERT_EQ(0x00000349u, ImmutableString("atanh(20B").mangledNameHash());
    ASSERT_EQ(0x000001e2u, ImmutableString("atanh(30B").mangledNameHash());
    ASSERT_EQ(0x00000306u, ImmutableString("abs(00C").mangledNameHash());
    ASSERT_EQ(0x000001a0u, ImmutableString("abs(10C").mangledNameHash());
    ASSERT_EQ(0x00000060u, ImmutableString("abs(20C").mangledNameHash());
    ASSERT_EQ(0x00000361u, ImmutableString("abs(30C").mangledNameHash());
    ASSERT_EQ(0x00000320u, ImmutableString("sign(00C").mangledNameHash());
    ASSERT_EQ(0x0000037eu, ImmutableString("sign(10C").mangledNameHash());
    ASSERT_EQ(0x00000099u, ImmutableString("sign(20C").mangledNameHash());
    ASSERT_EQ(0x000001d1u, ImmutableString("sign(30C").mangledNameHash());
    ASSERT_EQ(0x00000112u, ImmutableString("trunc(00B").mangledNameHash());
    ASSERT_EQ(0x0000040du, ImmutableString("trunc(10B").mangledNameHash());
    ASSERT_EQ(0x000003c3u, ImmutableString("trunc(20B").mangledNameHash());
    ASSERT_EQ(0x0000026au, ImmutableString("trunc(30B").mangledNameHash());
    ASSERT_EQ(0x000000f2u, ImmutableString("round(00B").mangledNameHash());
    ASSERT_EQ(0x000003eau, ImmutableString("round(10B").mangledNameHash());
    ASSERT_EQ(0x000002a0u, ImmutableString("round(20B").mangledNameHash());
    ASSERT_EQ(0x00000132u, ImmutableString("round(30B").mangledNameHash());
    ASSERT_EQ(0x00000347u, ImmutableString("roundEven(00B").mangledNameHash());
    ASSERT_EQ(0x000001deu, ImmutableString("roundEven(10B").mangledNameHash());
    ASSERT_EQ(0x0000016fu, ImmutableString("roundEven(20B").mangledNameHash());
    ASSERT_EQ(0x00000026u, ImmutableString("roundEven(30B").mangledNameHash());
    ASSERT_EQ(0x0000005fu, ImmutableString("min(00C00C").mangledNameHash());
    ASSERT_EQ(0x000003f2u, ImmutableString("min(10C10C").mangledNameHash());
    ASSERT_EQ(0x000001fdu, ImmutableString("min(20C20C").mangledNameHash());
    ASSERT_EQ(0x000002cfu, ImmutableString("min(30C30C").mangledNameHash());
    ASSERT_EQ(0x00000208u, ImmutableString("min(10C00C").mangledNameHash());
    ASSERT_EQ(0x00000339u, ImmutableString("min(20C00C").mangledNameHash());
    ASSERT_EQ(0x00000230u, ImmutableString("min(30C00C").mangledNameHash());
    ASSERT_EQ(0x000003bfu, ImmutableString("min(00D00D").mangledNameHash());
    ASSERT_EQ(0x00000056u, ImmutableString("min(10D10D").mangledNameHash());
    ASSERT_EQ(0x000002f0u, ImmutableString("min(20D20D").mangledNameHash());
    ASSERT_EQ(0x000002bfu, ImmutableString("min(30D30D").mangledNameHash());
    ASSERT_EQ(0x00000346u, ImmutableString("min(10D00D").mangledNameHash());
    ASSERT_EQ(0x00000046u, ImmutableString("min(20D00D").mangledNameHash());
    ASSERT_EQ(0x0000041au, ImmutableString("min(30D00D").mangledNameHash());
    ASSERT_EQ(0x000003c8u, ImmutableString("max(00C00C").mangledNameHash());
    ASSERT_EQ(0x00000358u, ImmutableString("max(10C10C").mangledNameHash());
    ASSERT_EQ(0x00000401u, ImmutableString("max(20C20C").mangledNameHash());
    ASSERT_EQ(0x0000032cu, ImmutableString("max(30C30C").mangledNameHash());
    ASSERT_EQ(0x00000062u, ImmutableString("max(10C00C").mangledNameHash());
    ASSERT_EQ(0x000002d7u, ImmutableString("max(20C00C").mangledNameHash());
    ASSERT_EQ(0x000001c1u, ImmutableString("max(30C00C").mangledNameHash());
    ASSERT_EQ(0x00000181u, ImmutableString("max(00D00D").mangledNameHash());
    ASSERT_EQ(0x0000028du, ImmutableString("max(10D10D").mangledNameHash());
    ASSERT_EQ(0x0000028bu, ImmutableString("max(20D20D").mangledNameHash());
    ASSERT_EQ(0x00000383u, ImmutableString("max(30D30D").mangledNameHash());
    ASSERT_EQ(0x0000012fu, ImmutableString("max(10D00D").mangledNameHash());
    ASSERT_EQ(0x000000dfu, ImmutableString("max(20D00D").mangledNameHash());
    ASSERT_EQ(0x0000006du, ImmutableString("max(30D00D").mangledNameHash());
    ASSERT_EQ(0x00000256u, ImmutableString("clamp(00C00C00C").mangledNameHash());
    ASSERT_EQ(0x000000c4u, ImmutableString("clamp(10C00C00C").mangledNameHash());
    ASSERT_EQ(0x0000008bu, ImmutableString("clamp(20C00C00C").mangledNameHash());
    ASSERT_EQ(0x00000264u, ImmutableString("clamp(30C00C00C").mangledNameHash());
    ASSERT_EQ(0x000001c8u, ImmutableString("clamp(10C10C10C").mangledNameHash());
    ASSERT_EQ(0x000000d3u, ImmutableString("clamp(20C20C20C").mangledNameHash());
    ASSERT_EQ(0x0000008cu, ImmutableString("clamp(30C30C30C").mangledNameHash());
    ASSERT_EQ(0x00000392u, ImmutableString("clamp(00D00D00D").mangledNameHash());
    ASSERT_EQ(0x000000adu, ImmutableString("clamp(10D00D00D").mangledNameHash());
    ASSERT_EQ(0x0000034au, ImmutableString("clamp(20D00D00D").mangledNameHash());
    ASSERT_EQ(0x00000415u, ImmutableString("clamp(30D00D00D").mangledNameHash());
    ASSERT_EQ(0x000000b3u, ImmutableString("clamp(10D10D10D").mangledNameHash());
    ASSERT_EQ(0x00000254u, ImmutableString("clamp(20D20D20D").mangledNameHash());
    ASSERT_EQ(0x00000368u, ImmutableString("clamp(30D30D30D").mangledNameHash());
    ASSERT_EQ(0x000002a8u, ImmutableString("mix(00B00B00E").mangledNameHash());
    ASSERT_EQ(0x00000207u, ImmutableString("mix(10B10B10E").mangledNameHash());
    ASSERT_EQ(0x000002c6u, ImmutableString("mix(20B20B20E").mangledNameHash());
    ASSERT_EQ(0x00000371u, ImmutableString("mix(30B30B30E").mangledNameHash());
    ASSERT_EQ(0x00000009u, ImmutableString("modf(00B00B").mangledNameHash());
    ASSERT_EQ(0x00000087u, ImmutableString("modf(10B10B").mangledNameHash());
    ASSERT_EQ(0x000002b8u, ImmutableString("modf(20B20B").mangledNameHash());
    ASSERT_EQ(0x0000016bu, ImmutableString("modf(30B30B").mangledNameHash());
    ASSERT_EQ(0x000002a7u, ImmutableString("isnan(00B").mangledNameHash());
    ASSERT_EQ(0x00000403u, ImmutableString("isnan(10B").mangledNameHash());
    ASSERT_EQ(0x0000016du, ImmutableString("isnan(20B").mangledNameHash());
    ASSERT_EQ(0x0000001du, ImmutableString("isnan(30B").mangledNameHash());
    ASSERT_EQ(0x000001ecu, ImmutableString("isinf(00B").mangledNameHash());
    ASSERT_EQ(0x0000034bu, ImmutableString("isinf(10B").mangledNameHash());
    ASSERT_EQ(0x000003dbu, ImmutableString("isinf(20B").mangledNameHash());
    ASSERT_EQ(0x0000015bu, ImmutableString("isinf(30B").mangledNameHash());
    ASSERT_EQ(0x0000041bu, ImmutableString("floatBitsToInt(00B").mangledNameHash());
    ASSERT_EQ(0x000002ccu, ImmutableString("floatBitsToInt(10B").mangledNameHash());
    ASSERT_EQ(0x000000d7u, ImmutableString("floatBitsToInt(20B").mangledNameHash());
    ASSERT_EQ(0x00000175u, ImmutableString("floatBitsToInt(30B").mangledNameHash());
    ASSERT_EQ(0x00000425u, ImmutableString("floatBitsToUint(00B").mangledNameHash());
    ASSERT_EQ(0x00000106u, ImmutableString("floatBitsToUint(10B").mangledNameHash());
    ASSERT_EQ(0x00000163u, ImmutableString("floatBitsToUint(20B").mangledNameHash());
    ASSERT_EQ(0x000002ddu, ImmutableString("floatBitsToUint(30B").mangledNameHash());
    ASSERT_EQ(0x0000034eu, ImmutableString("intBitsToFloat(00C").mangledNameHash());
    ASSERT_EQ(0x000001f7u, ImmutableString("intBitsToFloat(10C").mangledNameHash());
    ASSERT_EQ(0x000001b1u, ImmutableString("intBitsToFloat(20C").mangledNameHash());
    ASSERT_EQ(0x00000070u, ImmutableString("intBitsToFloat(30C").mangledNameHash());
    ASSERT_EQ(0x0000004bu, ImmutableString("uintBitsToFloat(00D").mangledNameHash());
    ASSERT_EQ(0x0000018fu, ImmutableString("uintBitsToFloat(10D").mangledNameHash());
    ASSERT_EQ(0x0000032du, ImmutableString("uintBitsToFloat(20D").mangledNameHash());
    ASSERT_EQ(0x00000030u, ImmutableString("uintBitsToFloat(30D").mangledNameHash());
    ASSERT_EQ(0x000002dbu, ImmutableString("packSnorm2x16(10B").mangledNameHash());
    ASSERT_EQ(0x00000336u, ImmutableString("packUnorm2x16(10B").mangledNameHash());
    ASSERT_EQ(0x0000034fu, ImmutableString("packHalf2x16(10B").mangledNameHash());
    ASSERT_EQ(0x00000262u, ImmutableString("unpackSnorm2x16(00D").mangledNameHash());
    ASSERT_EQ(0x00000098u, ImmutableString("unpackUnorm2x16(00D").mangledNameHash());
    ASSERT_EQ(0x0000012bu, ImmutableString("unpackHalf2x16(00D").mangledNameHash());
    ASSERT_EQ(0x000002a1u, ImmutableString("matrixCompMult(90B90B").mangledNameHash());
    ASSERT_EQ(0x0000025eu, ImmutableString("matrixCompMult(60B60B").mangledNameHash());
    ASSERT_EQ(0x00000064u, ImmutableString("matrixCompMult(D0BD0B").mangledNameHash());
    ASSERT_EQ(0x00000193u, ImmutableString("matrixCompMult(70B70B").mangledNameHash());
    ASSERT_EQ(0x0000026bu, ImmutableString("matrixCompMult(E0BE0B").mangledNameHash());
    ASSERT_EQ(0x000002fau, ImmutableString("matrixCompMult(B0BB0B").mangledNameHash());
    ASSERT_EQ(0x000003c0u, ImmutableString("outerProduct(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000015fu, ImmutableString("outerProduct(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000319u, ImmutableString("outerProduct(30B30B").mangledNameHash());
    ASSERT_EQ(0x000001cau, ImmutableString("outerProduct(20B10B").mangledNameHash());
    ASSERT_EQ(0x00000123u, ImmutableString("outerProduct(10B20B").mangledNameHash());
    ASSERT_EQ(0x0000009bu, ImmutableString("outerProduct(30B10B").mangledNameHash());
    ASSERT_EQ(0x00000283u, ImmutableString("outerProduct(10B30B").mangledNameHash());
    ASSERT_EQ(0x000001c7u, ImmutableString("outerProduct(30B20B").mangledNameHash());
    ASSERT_EQ(0x00000023u, ImmutableString("outerProduct(20B30B").mangledNameHash());
    ASSERT_EQ(0x0000020cu, ImmutableString("transpose(50B").mangledNameHash());
    ASSERT_EQ(0x000003dcu, ImmutableString("transpose(A0B").mangledNameHash());
    ASSERT_EQ(0x000000b6u, ImmutableString("transpose(F0B").mangledNameHash());
    ASSERT_EQ(0x00000326u, ImmutableString("transpose(60B").mangledNameHash());
    ASSERT_EQ(0x000003a8u, ImmutableString("transpose(90B").mangledNameHash());
    ASSERT_EQ(0x00000033u, ImmutableString("transpose(70B").mangledNameHash());
    ASSERT_EQ(0x0000020fu, ImmutableString("transpose(D0B").mangledNameHash());
    ASSERT_EQ(0x00000386u, ImmutableString("transpose(B0B").mangledNameHash());
    ASSERT_EQ(0x00000079u, ImmutableString("transpose(E0B").mangledNameHash());
    ASSERT_EQ(0x00000088u, ImmutableString("determinant(50B").mangledNameHash());
    ASSERT_EQ(0x00000012u, ImmutableString("determinant(A0B").mangledNameHash());
    ASSERT_EQ(0x00000370u, ImmutableString("determinant(F0B").mangledNameHash());
    ASSERT_EQ(0x00000127u, ImmutableString("inverse(50B").mangledNameHash());
    ASSERT_EQ(0x00000221u, ImmutableString("inverse(A0B").mangledNameHash());
    ASSERT_EQ(0x00000245u, ImmutableString("inverse(F0B").mangledNameHash());
    ASSERT_EQ(0x00000151u, ImmutableString("lessThan(10D10D").mangledNameHash());
    ASSERT_EQ(0x000000d1u, ImmutableString("lessThan(20D20D").mangledNameHash());
    ASSERT_EQ(0x00000263u, ImmutableString("lessThan(30D30D").mangledNameHash());
    ASSERT_EQ(0x000003c1u, ImmutableString("lessThanEqual(10D10D").mangledNameHash());
    ASSERT_EQ(0x00000379u, ImmutableString("lessThanEqual(20D20D").mangledNameHash());
    ASSERT_EQ(0x000002deu, ImmutableString("lessThanEqual(30D30D").mangledNameHash());
    ASSERT_EQ(0x000000ffu, ImmutableString("greaterThan(10D10D").mangledNameHash());
    ASSERT_EQ(0x0000010bu, ImmutableString("greaterThan(20D20D").mangledNameHash());
    ASSERT_EQ(0x000000fdu, ImmutableString("greaterThan(30D30D").mangledNameHash());
    ASSERT_EQ(0x00000195u, ImmutableString("greaterThanEqual(10D10D").mangledNameHash());
    ASSERT_EQ(0x00000021u, ImmutableString("greaterThanEqual(20D20D").mangledNameHash());
    ASSERT_EQ(0x000003d6u, ImmutableString("greaterThanEqual(30D30D").mangledNameHash());
    ASSERT_EQ(0x0000006au, ImmutableString("equal(10D10D").mangledNameHash());
    ASSERT_EQ(0x0000033eu, ImmutableString("equal(20D20D").mangledNameHash());
    ASSERT_EQ(0x000002d5u, ImmutableString("equal(30D30D").mangledNameHash());
    ASSERT_EQ(0x00000333u, ImmutableString("notEqual(10D10D").mangledNameHash());
    ASSERT_EQ(0x0000000bu, ImmutableString("notEqual(20D20D").mangledNameHash());
    ASSERT_EQ(0x000000fau, ImmutableString("notEqual(30D30D").mangledNameHash());
    ASSERT_EQ(0x0000014cu, ImmutableString("texture(00N10B").mangledNameHash());
    ASSERT_EQ(0x000003cdu, ImmutableString("textureProj(00N20B").mangledNameHash());
    ASSERT_EQ(0x000002d2u, ImmutableString("textureProj(00N30B").mangledNameHash());
    ASSERT_EQ(0x00000433u, ImmutableString("texture(00H10B").mangledNameHash());
    ASSERT_EQ(0x00000125u, ImmutableString("texture(00Q10B").mangledNameHash());
    ASSERT_EQ(0x00000137u, ImmutableString("texture(00W10B").mangledNameHash());
    ASSERT_EQ(0x000000d2u, ImmutableString("texture(00I20B").mangledNameHash());
    ASSERT_EQ(0x000003f8u, ImmutableString("texture(00R20B").mangledNameHash());
    ASSERT_EQ(0x00000309u, ImmutableString("texture(00X20B").mangledNameHash());
    ASSERT_EQ(0x00000143u, ImmutableString("texture(00J20B").mangledNameHash());
    ASSERT_EQ(0x0000028cu, ImmutableString("texture(00S20B").mangledNameHash());
    ASSERT_EQ(0x000000acu, ImmutableString("texture(00Y20B").mangledNameHash());
    ASSERT_EQ(0x00000399u, ImmutableString("texture(00K20B").mangledNameHash());
    ASSERT_EQ(0x000000a4u, ImmutableString("texture(00T20B").mangledNameHash());
    ASSERT_EQ(0x00000055u, ImmutableString("texture(00Z20B").mangledNameHash());
    ASSERT_EQ(0x000000d4u, ImmutableString("textureProj(00H20B").mangledNameHash());
    ASSERT_EQ(0x000001b7u, ImmutableString("textureProj(00Q20B").mangledNameHash());
    ASSERT_EQ(0x0000013au, ImmutableString("textureProj(00W20B").mangledNameHash());
    ASSERT_EQ(0x00000279u, ImmutableString("textureProj(00H30B").mangledNameHash());
    ASSERT_EQ(0x00000174u, ImmutableString("textureProj(00Q30B").mangledNameHash());
    ASSERT_EQ(0x0000001au, ImmutableString("textureProj(00W30B").mangledNameHash());
    ASSERT_EQ(0x00000036u, ImmutableString("textureProj(00I30B").mangledNameHash());
    ASSERT_EQ(0x000001b4u, ImmutableString("textureProj(00R30B").mangledNameHash());
    ASSERT_EQ(0x00000410u, ImmutableString("textureProj(00X30B").mangledNameHash());
    ASSERT_EQ(0x000001ddu, ImmutableString("textureLod(00H10B00B").mangledNameHash());
    ASSERT_EQ(0x00000299u, ImmutableString("textureLod(00Q10B00B").mangledNameHash());
    ASSERT_EQ(0x000002e9u, ImmutableString("textureLod(00W10B00B").mangledNameHash());
    ASSERT_EQ(0x0000000cu, ImmutableString("textureLod(00I20B00B").mangledNameHash());
    ASSERT_EQ(0x0000008du, ImmutableString("textureLod(00R20B00B").mangledNameHash());
    ASSERT_EQ(0x000002f4u, ImmutableString("textureLod(00X20B00B").mangledNameHash());
    ASSERT_EQ(0x000000d8u, ImmutableString("textureLod(00J20B00B").mangledNameHash());
    ASSERT_EQ(0x0000037au, ImmutableString("textureLod(00S20B00B").mangledNameHash());
    ASSERT_EQ(0x00000041u, ImmutableString("textureLod(00Y20B00B").mangledNameHash());
    ASSERT_EQ(0x000003d5u, ImmutableString("textureLod(00K20B00B").mangledNameHash());
    ASSERT_EQ(0x00000120u, ImmutableString("textureLod(00T20B00B").mangledNameHash());
    ASSERT_EQ(0x00000323u, ImmutableString("textureLod(00Z20B00B").mangledNameHash());
    ASSERT_EQ(0x00000211u, ImmutableString("texture(00c20B").mangledNameHash());
    ASSERT_EQ(0x00000173u, ImmutableString("texture(00d30B").mangledNameHash());
    ASSERT_EQ(0x000003e0u, ImmutableString("texture(00e30B").mangledNameHash());
    ASSERT_EQ(0x000003c2u, ImmutableString("textureProj(00c30B").mangledNameHash());
    ASSERT_EQ(0x00000272u, ImmutableString("textureLod(00c20B00B").mangledNameHash());
    ASSERT_EQ(0x0000041eu, ImmutableString("textureSize(00H00C").mangledNameHash());
    ASSERT_EQ(0x0000036cu, ImmutableString("textureSize(00Q00C").mangledNameHash());
    ASSERT_EQ(0x00000091u, ImmutableString("textureSize(00W00C").mangledNameHash());
    ASSERT_EQ(0x000000e0u, ImmutableString("textureSize(00I00C").mangledNameHash());
    ASSERT_EQ(0x000000bfu, ImmutableString("textureSize(00R00C").mangledNameHash());
    ASSERT_EQ(0x00000409u, ImmutableString("textureSize(00X00C").mangledNameHash());
    ASSERT_EQ(0x000001d3u, ImmutableString("textureSize(00J00C").mangledNameHash());
    ASSERT_EQ(0x000000b0u, ImmutableString("textureSize(00S00C").mangledNameHash());
    ASSERT_EQ(0x00000226u, ImmutableString("textureSize(00Y00C").mangledNameHash());
    ASSERT_EQ(0x00000034u, ImmutableString("textureSize(00K00C").mangledNameHash());
    ASSERT_EQ(0x000003e4u, ImmutableString("textureSize(00T00C").mangledNameHash());
    ASSERT_EQ(0x00000292u, ImmutableString("textureSize(00Z00C").mangledNameHash());
    ASSERT_EQ(0x000001f4u, ImmutableString("textureSize(00c00C").mangledNameHash());
    ASSERT_EQ(0x00000179u, ImmutableString("textureSize(00d00C").mangledNameHash());
    ASSERT_EQ(0x0000021bu, ImmutableString("textureSize(00e00C").mangledNameHash());
    ASSERT_EQ(0x000000eau, ImmutableString("textureProjLod(00H20B00B").mangledNameHash());
    ASSERT_EQ(0x0000011eu, ImmutableString("textureProjLod(00Q20B00B").mangledNameHash());
    ASSERT_EQ(0x000002cbu, ImmutableString("textureProjLod(00W20B00B").mangledNameHash());
    ASSERT_EQ(0x000000f9u, ImmutableString("textureProjLod(00H30B00B").mangledNameHash());
    ASSERT_EQ(0x000000a8u, ImmutableString("textureProjLod(00Q30B00B").mangledNameHash());
    ASSERT_EQ(0x000002c2u, ImmutableString("textureProjLod(00W30B00B").mangledNameHash());
    ASSERT_EQ(0x000003b1u, ImmutableString("textureProjLod(00I30B00B").mangledNameHash());
    ASSERT_EQ(0x00000247u, ImmutableString("textureProjLod(00R30B00B").mangledNameHash());
    ASSERT_EQ(0x000002e4u, ImmutableString("textureProjLod(00X30B00B").mangledNameHash());
    ASSERT_EQ(0x000003ebu, ImmutableString("textureProjLod(00c30B00B").mangledNameHash());
    ASSERT_EQ(0x000001f1u, ImmutableString("texelFetch(00H10C00C").mangledNameHash());
    ASSERT_EQ(0x0000023eu, ImmutableString("texelFetch(00Q10C00C").mangledNameHash());
    ASSERT_EQ(0x000002f8u, ImmutableString("texelFetch(00W10C00C").mangledNameHash());
    ASSERT_EQ(0x000000b8u, ImmutableString("texelFetch(00I20C00C").mangledNameHash());
    ASSERT_EQ(0x00000140u, ImmutableString("texelFetch(00R20C00C").mangledNameHash());
    ASSERT_EQ(0x0000020eu, ImmutableString("texelFetch(00X20C00C").mangledNameHash());
    ASSERT_EQ(0x0000040au, ImmutableString("texelFetch(00K20C00C").mangledNameHash());
    ASSERT_EQ(0x00000294u, ImmutableString("texelFetch(00T20C00C").mangledNameHash());
    ASSERT_EQ(0x000003aeu, ImmutableString("texelFetch(00Z20C00C").mangledNameHash());
    ASSERT_EQ(0x000001c5u, ImmutableString("textureGrad(00H10B10B10B").mangledNameHash());
    ASSERT_EQ(0x000002a5u, ImmutableString("textureGrad(00Q10B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000014bu, ImmutableString("textureGrad(00W10B10B10B").mangledNameHash());
    ASSERT_EQ(0x000000d6u, ImmutableString("textureGrad(00I20B20B20B").mangledNameHash());
    ASSERT_EQ(0x00000385u, ImmutableString("textureGrad(00R20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000003e9u, ImmutableString("textureGrad(00X20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000002d3u, ImmutableString("textureGrad(00J20B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000012eu, ImmutableString("textureGrad(00S20B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000013bu, ImmutableString("textureGrad(00Y20B20B20B").mangledNameHash());
    ASSERT_EQ(0x00000352u, ImmutableString("textureGrad(00c20B10B10B").mangledNameHash());
    ASSERT_EQ(0x00000086u, ImmutableString("textureGrad(00d30B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000005au, ImmutableString("textureGrad(00K20B10B10B").mangledNameHash());
    ASSERT_EQ(0x000003e1u, ImmutableString("textureGrad(00T20B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000009du, ImmutableString("textureGrad(00Z20B10B10B").mangledNameHash());
    ASSERT_EQ(0x00000101u, ImmutableString("textureGrad(00e30B10B10B").mangledNameHash());
    ASSERT_EQ(0x000002dcu, ImmutableString("textureProjGrad(00H20B10B10B").mangledNameHash());
    ASSERT_EQ(0x00000003u, ImmutableString("textureProjGrad(00Q20B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000021cu, ImmutableString("textureProjGrad(00W20B10B10B").mangledNameHash());
    ASSERT_EQ(0x000001fbu, ImmutableString("textureProjGrad(00H30B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000010cu, ImmutableString("textureProjGrad(00Q30B10B10B").mangledNameHash());
    ASSERT_EQ(0x000001afu, ImmutableString("textureProjGrad(00W30B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000014au, ImmutableString("textureProjGrad(00I30B20B20B").mangledNameHash());
    ASSERT_EQ(0x000001c2u, ImmutableString("textureProjGrad(00R30B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000016au, ImmutableString("textureProjGrad(00X30B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000022cu, ImmutableString("textureProjGrad(00c30B10B10B").mangledNameHash());
    ASSERT_EQ(0x000003a4u, ImmutableString("textureOffset(00H10B10C").mangledNameHash());
    ASSERT_EQ(0x00000255u, ImmutableString("textureOffset(00Q10B10C").mangledNameHash());
    ASSERT_EQ(0x00000199u, ImmutableString("textureOffset(00W10B10C").mangledNameHash());
    ASSERT_EQ(0x00000215u, ImmutableString("textureOffset(00I20B20C").mangledNameHash());
    ASSERT_EQ(0x0000028eu, ImmutableString("textureOffset(00R20B20C").mangledNameHash());
    ASSERT_EQ(0x00000318u, ImmutableString("textureOffset(00X20B20C").mangledNameHash());
    ASSERT_EQ(0x00000284u, ImmutableString("textureOffset(00c20B10C").mangledNameHash());
    ASSERT_EQ(0x00000025u, ImmutableString("textureOffset(00K20B10C").mangledNameHash());
    ASSERT_EQ(0x0000021eu, ImmutableString("textureOffset(00T20B10C").mangledNameHash());
    ASSERT_EQ(0x00000024u, ImmutableString("textureOffset(00Z20B10C").mangledNameHash());
    ASSERT_EQ(0x0000006cu, ImmutableString("textureProjOffset(00H20B10C").mangledNameHash());
    ASSERT_EQ(0x00000196u, ImmutableString("textureProjOffset(00Q20B10C").mangledNameHash());
    ASSERT_EQ(0x00000031u, ImmutableString("textureProjOffset(00W20B10C").mangledNameHash());
    ASSERT_EQ(0x00000240u, ImmutableString("textureProjOffset(00H30B10C").mangledNameHash());
    ASSERT_EQ(0x000003a7u, ImmutableString("textureProjOffset(00Q30B10C").mangledNameHash());
    ASSERT_EQ(0x00000278u, ImmutableString("textureProjOffset(00W30B10C").mangledNameHash());
    ASSERT_EQ(0x000003c7u, ImmutableString("textureProjOffset(00I30B20C").mangledNameHash());
    ASSERT_EQ(0x000002adu, ImmutableString("textureProjOffset(00R30B20C").mangledNameHash());
    ASSERT_EQ(0x000002b7u, ImmutableString("textureProjOffset(00X30B20C").mangledNameHash());
    ASSERT_EQ(0x000003d4u, ImmutableString("textureProjOffset(00c30B10C").mangledNameHash());
    ASSERT_EQ(0x000001adu, ImmutableString("textureLodOffset(00H10B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000210u, ImmutableString("textureLodOffset(00Q10B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000160u, ImmutableString("textureLodOffset(00W10B00B10C").mangledNameHash());
    ASSERT_EQ(0x000003f9u, ImmutableString("textureLodOffset(00I20B00B20C").mangledNameHash());
    ASSERT_EQ(0x0000006bu, ImmutableString("textureLodOffset(00R20B00B20C").mangledNameHash());
    ASSERT_EQ(0x00000237u, ImmutableString("textureLodOffset(00X20B00B20C").mangledNameHash());
    ASSERT_EQ(0x00000394u, ImmutableString("textureLodOffset(00c20B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000313u, ImmutableString("textureLodOffset(00K20B00B10C").mangledNameHash());
    ASSERT_EQ(0x000000deu, ImmutableString("textureLodOffset(00T20B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000335u, ImmutableString("textureLodOffset(00Z20B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000187u, ImmutableString("textureProjLodOffset(00H20B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000177u, ImmutableString("textureProjLodOffset(00Q20B00B10C").mangledNameHash());
    ASSERT_EQ(0x000002d1u, ImmutableString("textureProjLodOffset(00W20B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000430u, ImmutableString("textureProjLodOffset(00H30B00B10C").mangledNameHash());
    ASSERT_EQ(0x0000042fu, ImmutableString("textureProjLodOffset(00Q30B00B10C").mangledNameHash());
    ASSERT_EQ(0x000001cfu, ImmutableString("textureProjLodOffset(00W30B00B10C").mangledNameHash());
    ASSERT_EQ(0x00000267u, ImmutableString("textureProjLodOffset(00I30B00B20C").mangledNameHash());
    ASSERT_EQ(0x0000038fu, ImmutableString("textureProjLodOffset(00R30B00B20C").mangledNameHash());
    ASSERT_EQ(0x000000dau, ImmutableString("textureProjLodOffset(00X30B00B20C").mangledNameHash());
    ASSERT_EQ(0x00000314u, ImmutableString("textureProjLodOffset(00c30B00B10C").mangledNameHash());
    ASSERT_EQ(0x000001a7u, ImmutableString("texelFetchOffset(00H10C00C10C").mangledNameHash());
    ASSERT_EQ(0x00000325u, ImmutableString("texelFetchOffset(00Q10C00C10C").mangledNameHash());
    ASSERT_EQ(0x000003f1u, ImmutableString("texelFetchOffset(00W10C00C10C").mangledNameHash());
    ASSERT_EQ(0x0000007cu, ImmutableString("texelFetchOffset(00I20C00C20C").mangledNameHash());
    ASSERT_EQ(0x0000028fu, ImmutableString("texelFetchOffset(00R20C00C20C").mangledNameHash());
    ASSERT_EQ(0x00000083u, ImmutableString("texelFetchOffset(00X20C00C20C").mangledNameHash());
    ASSERT_EQ(0x00000373u, ImmutableString("texelFetchOffset(00K20C00C10C").mangledNameHash());
    ASSERT_EQ(0x000002afu, ImmutableString("texelFetchOffset(00T20C00C10C").mangledNameHash());
    ASSERT_EQ(0x00000075u, ImmutableString("texelFetchOffset(00Z20C00C10C").mangledNameHash());
    ASSERT_EQ(0x00000133u, ImmutableString("textureGradOffset(00H10B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000261u, ImmutableString("textureGradOffset(00Q10B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x0000029fu, ImmutableString("textureGradOffset(00W10B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000209u, ImmutableString("textureGradOffset(00I20B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x00000340u, ImmutableString("textureGradOffset(00R20B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x00000040u, ImmutableString("textureGradOffset(00X20B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x000002f5u, ImmutableString("textureGradOffset(00c20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000003edu, ImmutableString("textureGradOffset(00K20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000435u, ImmutableString("textureGradOffset(00T20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000000e3u, ImmutableString("textureGradOffset(00Z20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000277u, ImmutableString("textureGradOffset(00e30B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000001c9u,
              ImmutableString("textureProjGradOffset(00H20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000002b9u,
              ImmutableString("textureProjGradOffset(00Q20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x0000025cu,
              ImmutableString("textureProjGradOffset(00W20B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000345u,
              ImmutableString("textureProjGradOffset(00H30B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x00000302u,
              ImmutableString("textureProjGradOffset(00Q30B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000003f7u,
              ImmutableString("textureProjGradOffset(00W30B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x0000019au,
              ImmutableString("textureProjGradOffset(00I30B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x00000253u,
              ImmutableString("textureProjGradOffset(00R30B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x0000007fu,
              ImmutableString("textureProjGradOffset(00X30B20B20B20C").mangledNameHash());
    ASSERT_EQ(0x00000422u,
              ImmutableString("textureProjGradOffset(00c30B10B10B10C").mangledNameHash());
    ASSERT_EQ(0x000000e9u, ImmutableString("texture(00L10B").mangledNameHash());
    ASSERT_EQ(0x000001eeu, ImmutableString("textureProj(00L20B").mangledNameHash());
    ASSERT_EQ(0x000000a1u, ImmutableString("textureProj(00L30B").mangledNameHash());
    ASSERT_EQ(0x00000344u, ImmutableString("textureSize(00L00C").mangledNameHash());
    ASSERT_EQ(0x00000184u, ImmutableString("texelFetch(00L10C00C").mangledNameHash());
    ASSERT_EQ(0x000003a1u, ImmutableString("texture(00M10B").mangledNameHash());
    ASSERT_EQ(0x00000153u, ImmutableString("textureProj(00M20B").mangledNameHash());
    ASSERT_EQ(0x00000381u, ImmutableString("textureProj(00M30B").mangledNameHash());
    ASSERT_EQ(0x00000097u, ImmutableString("rgb_2_yuv(20B00G").mangledNameHash());
    ASSERT_EQ(0x00000157u, ImmutableString("yuv_2_rgb(20B00G").mangledNameHash());
    ASSERT_EQ(0x0000038bu, ImmutableString("textureSize(00M00C").mangledNameHash());
    ASSERT_EQ(0x000003abu, ImmutableString("texelFetch(00M10C00C").mangledNameHash());
    ASSERT_EQ(0x000000f1u, ImmutableString("gl_MaxVertexOutputVectors").mangledNameHash());
    ASSERT_EQ(0x000003f4u, ImmutableString("gl_MaxFragmentInputVectors").mangledNameHash());
    ASSERT_EQ(0x000001c0u, ImmutableString("gl_MinProgramTexelOffset").mangledNameHash());
    ASSERT_EQ(0x000000bdu, ImmutableString("gl_MaxProgramTexelOffset").mangledNameHash());
    ASSERT_EQ(0x000003d2u, ImmutableString("textureOffset(00H10B10C00B").mangledNameHash());
    ASSERT_EQ(0x000000a3u, ImmutableString("textureOffset(00Q10B10C00B").mangledNameHash());
    ASSERT_EQ(0x000001cdu, ImmutableString("textureOffset(00W10B10C00B").mangledNameHash());
    ASSERT_EQ(0x00000212u, ImmutableString("textureOffset(00I20B20C00B").mangledNameHash());
    ASSERT_EQ(0x0000021fu, ImmutableString("textureOffset(00R20B20C00B").mangledNameHash());
    ASSERT_EQ(0x000000c9u, ImmutableString("textureOffset(00X20B20C00B").mangledNameHash());
    ASSERT_EQ(0x00000331u, ImmutableString("textureOffset(00c20B10C00B").mangledNameHash());
    ASSERT_EQ(0x0000000eu, ImmutableString("textureOffset(00K20B10C00B").mangledNameHash());
    ASSERT_EQ(0x000003b9u, ImmutableString("textureOffset(00T20B10C00B").mangledNameHash());
    ASSERT_EQ(0x000000c2u, ImmutableString("textureOffset(00Z20B10C00B").mangledNameHash());
    ASSERT_EQ(0x000000ceu, ImmutableString("textureProjOffset(00H20B10C00B").mangledNameHash());
    ASSERT_EQ(0x000003e2u, ImmutableString("textureProjOffset(00Q20B10C00B").mangledNameHash());
    ASSERT_EQ(0x0000007bu, ImmutableString("textureProjOffset(00W20B10C00B").mangledNameHash());
    ASSERT_EQ(0x00000223u, ImmutableString("textureProjOffset(00H30B10C00B").mangledNameHash());
    ASSERT_EQ(0x000003d0u, ImmutableString("textureProjOffset(00Q30B10C00B").mangledNameHash());
    ASSERT_EQ(0x00000050u, ImmutableString("textureProjOffset(00W30B10C00B").mangledNameHash());
    ASSERT_EQ(0x0000012cu, ImmutableString("textureProjOffset(00I30B20C00B").mangledNameHash());
    ASSERT_EQ(0x00000404u, ImmutableString("textureProjOffset(00R30B20C00B").mangledNameHash());
    ASSERT_EQ(0x00000228u, ImmutableString("textureProjOffset(00X30B20C00B").mangledNameHash());
    ASSERT_EQ(0x0000033au, ImmutableString("textureProjOffset(00c30B10C00B").mangledNameHash());
    ASSERT_EQ(0x000002bbu, ImmutableString("texture(00H10B00B").mangledNameHash());
    ASSERT_EQ(0x0000013cu, ImmutableString("texture(00Q10B00B").mangledNameHash());
    ASSERT_EQ(0x000002e8u, ImmutableString("texture(00W10B00B").mangledNameHash());
    ASSERT_EQ(0x000002e6u, ImmutableString("texture(00I20B00B").mangledNameHash());
    ASSERT_EQ(0x0000008eu, ImmutableString("texture(00R20B00B").mangledNameHash());
    ASSERT_EQ(0x00000233u, ImmutableString("texture(00X20B00B").mangledNameHash());
    ASSERT_EQ(0x000001fau, ImmutableString("texture(00J20B00B").mangledNameHash());
    ASSERT_EQ(0x000003a3u, ImmutableString("texture(00S20B00B").mangledNameHash());
    ASSERT_EQ(0x000001d8u, ImmutableString("texture(00Y20B00B").mangledNameHash());
    ASSERT_EQ(0x00000357u, ImmutableString("texture(00K20B00B").mangledNameHash());
    ASSERT_EQ(0x000000e8u, ImmutableString("texture(00T20B00B").mangledNameHash());
    ASSERT_EQ(0x00000113u, ImmutableString("texture(00Z20B00B").mangledNameHash());
    ASSERT_EQ(0x00000242u, ImmutableString("textureProj(00H20B00B").mangledNameHash());
    ASSERT_EQ(0x00000423u, ImmutableString("textureProj(00Q20B00B").mangledNameHash());
    ASSERT_EQ(0x00000232u, ImmutableString("textureProj(00W20B00B").mangledNameHash());
    ASSERT_EQ(0x0000010eu, ImmutableString("textureProj(00H30B00B").mangledNameHash());
    ASSERT_EQ(0x0000010du, ImmutableString("textureProj(00Q30B00B").mangledNameHash());
    ASSERT_EQ(0x0000011cu, ImmutableString("textureProj(00W30B00B").mangledNameHash());
    ASSERT_EQ(0x000000c5u, ImmutableString("textureProj(00I30B00B").mangledNameHash());
    ASSERT_EQ(0x00000076u, ImmutableString("textureProj(00R30B00B").mangledNameHash());
    ASSERT_EQ(0x00000271u, ImmutableString("textureProj(00X30B00B").mangledNameHash());
    ASSERT_EQ(0x00000231u, ImmutableString("texture(00c20B00B").mangledNameHash());
    ASSERT_EQ(0x000003bau, ImmutableString("texture(00d30B00B").mangledNameHash());
    ASSERT_EQ(0x000002dau, ImmutableString("textureProj(00c30B00B").mangledNameHash());
    ASSERT_EQ(0x00000408u, ImmutableString("texture(00L10B00B").mangledNameHash());
    ASSERT_EQ(0x0000005eu, ImmutableString("textureProj(00L20B00B").mangledNameHash());
    ASSERT_EQ(0x00000402u, ImmutableString("textureProj(00L30B00B").mangledNameHash());
    ASSERT_EQ(0x00000420u, ImmutableString("texture(00M10B00B").mangledNameHash());
    ASSERT_EQ(0x00000424u, ImmutableString("textureProj(00M20B00B").mangledNameHash());
    ASSERT_EQ(0x000000ccu, ImmutableString("textureProj(00M30B00B").mangledNameHash());
    ASSERT_EQ(0x00000301u, ImmutableString("dFdx(00B").mangledNameHash());
    ASSERT_EQ(0x000001a6u, ImmutableString("dFdx(10B").mangledNameHash());
    ASSERT_EQ(0x00000147u, ImmutableString("dFdx(20B").mangledNameHash());
    ASSERT_EQ(0x00000016u, ImmutableString("dFdx(30B").mangledNameHash());
    ASSERT_EQ(0x00000419u, ImmutableString("dFdy(00B").mangledNameHash());
    ASSERT_EQ(0x00000171u, ImmutableString("dFdy(10B").mangledNameHash());
    ASSERT_EQ(0x0000032bu, ImmutableString("dFdy(20B").mangledNameHash());
    ASSERT_EQ(0x00000348u, ImmutableString("dFdy(30B").mangledNameHash());
    ASSERT_EQ(0x00000170u, ImmutableString("fwidth(00B").mangledNameHash());
    ASSERT_EQ(0x000000f7u, ImmutableString("fwidth(10B").mangledNameHash());
    ASSERT_EQ(0x00000387u, ImmutableString("fwidth(20B").mangledNameHash());
    ASSERT_EQ(0x000002c7u, ImmutableString("fwidth(30B").mangledNameHash());
    ASSERT_EQ(0x000000e7u, ImmutableString("gl_FragDepth").mangledNameHash());
    ASSERT_EQ(0x0000023au, ImmutableString("gl_InstanceID").mangledNameHash());
    ASSERT_EQ(0x00000380u, ImmutableString("gl_VertexID").mangledNameHash());
    ASSERT_EQ(0x00000436u, ImmutableString("gl_DrawID").mangledNameHash());
    ASSERT_EQ(0x0000031du, ImmutableString("gl_BaseVertex").mangledNameHash());
    ASSERT_EQ(0x00000008u, ImmutableString("gl_BaseInstance").mangledNameHash());
    ASSERT_EQ(0x000003b6u, ImmutableString("gl_ViewID_OVR").mangledNameHash());
    ASSERT_EQ(0x00000154u, ImmutableString("texture2D(00H10B").mangledNameHash());
    ASSERT_EQ(0x0000025au, ImmutableString("texture2DProj(00H20B").mangledNameHash());
    ASSERT_EQ(0x000000c3u, ImmutableString("texture2DProj(00H30B").mangledNameHash());
    ASSERT_EQ(0x0000030fu, ImmutableString("textureCube(00J20B").mangledNameHash());
    ASSERT_EQ(0x00000006u, ImmutableString("texture2D(00L10B").mangledNameHash());
    ASSERT_EQ(0x000001bbu, ImmutableString("texture2DProj(00L20B").mangledNameHash());
    ASSERT_EQ(0x00000065u, ImmutableString("texture2DProj(00L30B").mangledNameHash());
    ASSERT_EQ(0x0000024eu, ImmutableString("texture2DRect(00N10B").mangledNameHash());
    ASSERT_EQ(0x00000053u, ImmutableString("texture2DRectProj(00N20B").mangledNameHash());
    ASSERT_EQ(0x0000039fu, ImmutableString("texture2DRectProj(00N30B").mangledNameHash());
    ASSERT_EQ(0x000001e4u, ImmutableString("texture2DGradEXT(00H10B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000001eu, ImmutableString("texture2DProjGradEXT(00H20B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000037cu, ImmutableString("texture2DProjGradEXT(00H30B10B10B").mangledNameHash());
    ASSERT_EQ(0x000002f3u, ImmutableString("textureCubeGradEXT(00J20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000003c4u, ImmutableString("gl_MaxVaryingVectors").mangledNameHash());
    ASSERT_EQ(0x0000036bu, ImmutableString("gl_FragData").mangledNameHash());
    ASSERT_EQ(0x0000020du, ImmutableString("gl_SecondaryFragDataEXT").mangledNameHash());
    ASSERT_EQ(0x000001a4u, ImmutableString("gl_FragDepthEXT").mangledNameHash());
    ASSERT_EQ(0x0000022fu, ImmutableString("texture2D(00H10B00B").mangledNameHash());
    ASSERT_EQ(0x000003d7u, ImmutableString("texture2DProj(00H20B00B").mangledNameHash());
    ASSERT_EQ(0x0000036fu, ImmutableString("texture2DProj(00H30B00B").mangledNameHash());
    ASSERT_EQ(0x000000b4u, ImmutableString("textureCube(00J20B00B").mangledNameHash());
    ASSERT_EQ(0x00000234u, ImmutableString("texture2DLodEXT(00H10B00B").mangledNameHash());
    ASSERT_EQ(0x0000024cu, ImmutableString("texture2DProjLodEXT(00H20B00B").mangledNameHash());
    ASSERT_EQ(0x00000201u, ImmutableString("texture2DProjLodEXT(00H30B00B").mangledNameHash());
    ASSERT_EQ(0x00000311u, ImmutableString("textureCubeLodEXT(00J20B00B").mangledNameHash());
    ASSERT_EQ(0x000003f0u, ImmutableString("texture3D(00I20B").mangledNameHash());
    ASSERT_EQ(0x00000406u, ImmutableString("texture3D(00I20B00B").mangledNameHash());
    ASSERT_EQ(0x0000019cu, ImmutableString("texture3DProj(00I30B").mangledNameHash());
    ASSERT_EQ(0x0000000au, ImmutableString("texture3DProj(00I30B00B").mangledNameHash());
    ASSERT_EQ(0x00000389u, ImmutableString("texture3DLod(00I20B00B").mangledNameHash());
    ASSERT_EQ(0x000001bfu, ImmutableString("texture3DProjLod(00I30B00B").mangledNameHash());
    ASSERT_EQ(0x000003aau, ImmutableString("gl_FragColor").mangledNameHash());
    ASSERT_EQ(0x00000204u, ImmutableString("texture2DLod(00H10B00B").mangledNameHash());
    ASSERT_EQ(0x00000144u, ImmutableString("texture2DProjLod(00H20B00B").mangledNameHash());
    ASSERT_EQ(0x000001a5u, ImmutableString("texture2DProjLod(00H30B00B").mangledNameHash());
    ASSERT_EQ(0x00000359u, ImmutableString("textureCubeLod(00J20B00B").mangledNameHash());
    ASSERT_EQ(0x00000356u, ImmutableString("gl_SecondaryFragColorEXT").mangledNameHash());
    ASSERT_EQ(0x00000182u, ImmutableString("gl_LastFragData").mangledNameHash());
    ASSERT_EQ(0x0000001fu, ImmutableString("gl_LastFragColor").mangledNameHash());
    ASSERT_EQ(0x00000376u, ImmutableString("gl_LastFragColorARM").mangledNameHash());
    ASSERT_EQ(0x000002ecu, ImmutableString("radians(00B").mangledNameHash());
    ASSERT_EQ(0x0000036au, ImmutableString("radians(10B").mangledNameHash());
    ASSERT_EQ(0x0000012du, ImmutableString("radians(20B").mangledNameHash());
    ASSERT_EQ(0x0000042bu, ImmutableString("radians(30B").mangledNameHash());
    ASSERT_EQ(0x00000244u, ImmutableString("degrees(00B").mangledNameHash());
    ASSERT_EQ(0x00000395u, ImmutableString("degrees(10B").mangledNameHash());
    ASSERT_EQ(0x00000057u, ImmutableString("degrees(20B").mangledNameHash());
    ASSERT_EQ(0x000001a3u, ImmutableString("degrees(30B").mangledNameHash());
    ASSERT_EQ(0x000003c9u, ImmutableString("sin(00B").mangledNameHash());
    ASSERT_EQ(0x00000276u, ImmutableString("sin(10B").mangledNameHash());
    ASSERT_EQ(0x0000029du, ImmutableString("sin(20B").mangledNameHash());
    ASSERT_EQ(0x00000138u, ImmutableString("sin(30B").mangledNameHash());
    ASSERT_EQ(0x00000289u, ImmutableString("cos(00B").mangledNameHash());
    ASSERT_EQ(0x000003ddu, ImmutableString("cos(10B").mangledNameHash());
    ASSERT_EQ(0x00000429u, ImmutableString("cos(20B").mangledNameHash());
    ASSERT_EQ(0x0000033bu, ImmutableString("cos(30B").mangledNameHash());
    ASSERT_EQ(0x0000027au, ImmutableString("tan(00B").mangledNameHash());
    ASSERT_EQ(0x000003cfu, ImmutableString("tan(10B").mangledNameHash());
    ASSERT_EQ(0x0000042du, ImmutableString("tan(20B").mangledNameHash());
    ASSERT_EQ(0x0000011fu, ImmutableString("tan(30B").mangledNameHash());
    ASSERT_EQ(0x000002b0u, ImmutableString("asin(00B").mangledNameHash());
    ASSERT_EQ(0x0000040cu, ImmutableString("asin(10B").mangledNameHash());
    ASSERT_EQ(0x00000022u, ImmutableString("asin(20B").mangledNameHash());
    ASSERT_EQ(0x00000168u, ImmutableString("asin(30B").mangledNameHash());
    ASSERT_EQ(0x00000077u, ImmutableString("acos(00B").mangledNameHash());
    ASSERT_EQ(0x0000033du, ImmutableString("acos(10B").mangledNameHash());
    ASSERT_EQ(0x00000310u, ImmutableString("acos(20B").mangledNameHash());
    ASSERT_EQ(0x000001a1u, ImmutableString("acos(30B").mangledNameHash());
    ASSERT_EQ(0x00000265u, ImmutableString("atan(00B00B").mangledNameHash());
    ASSERT_EQ(0x0000003au, ImmutableString("atan(10B10B").mangledNameHash());
    ASSERT_EQ(0x00000227u, ImmutableString("atan(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000161u, ImmutableString("atan(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000250u, ImmutableString("atan(00B").mangledNameHash());
    ASSERT_EQ(0x00000085u, ImmutableString("atan(10B").mangledNameHash());
    ASSERT_EQ(0x000000a2u, ImmutableString("atan(20B").mangledNameHash());
    ASSERT_EQ(0x0000039eu, ImmutableString("atan(30B").mangledNameHash());
    ASSERT_EQ(0x000001d5u, ImmutableString("pow(00B00B").mangledNameHash());
    ASSERT_EQ(0x000000a9u, ImmutableString("pow(10B10B").mangledNameHash());
    ASSERT_EQ(0x00000372u, ImmutableString("pow(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000290u, ImmutableString("pow(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000382u, ImmutableString("exp(00B").mangledNameHash());
    ASSERT_EQ(0x00000093u, ImmutableString("exp(10B").mangledNameHash());
    ASSERT_EQ(0x000001b8u, ImmutableString("exp(20B").mangledNameHash());
    ASSERT_EQ(0x0000031cu, ImmutableString("exp(30B").mangledNameHash());
    ASSERT_EQ(0x00000322u, ImmutableString("log(00B").mangledNameHash());
    ASSERT_EQ(0x000001beu, ImmutableString("log(10B").mangledNameHash());
    ASSERT_EQ(0x00000166u, ImmutableString("log(20B").mangledNameHash());
    ASSERT_EQ(0x000000eeu, ImmutableString("log(30B").mangledNameHash());
    ASSERT_EQ(0x0000042au, ImmutableString("exp2(00B").mangledNameHash());
    ASSERT_EQ(0x00000122u, ImmutableString("exp2(10B").mangledNameHash());
    ASSERT_EQ(0x0000017au, ImmutableString("exp2(20B").mangledNameHash());
    ASSERT_EQ(0x000002d4u, ImmutableString("exp2(30B").mangledNameHash());
    ASSERT_EQ(0x0000019du, ImmutableString("log2(00B").mangledNameHash());
    ASSERT_EQ(0x000000a5u, ImmutableString("log2(10B").mangledNameHash());
    ASSERT_EQ(0x0000038eu, ImmutableString("log2(20B").mangledNameHash());
    ASSERT_EQ(0x00000216u, ImmutableString("log2(30B").mangledNameHash());
    ASSERT_EQ(0x0000023du, ImmutableString("sqrt(00B").mangledNameHash());
    ASSERT_EQ(0x000000d9u, ImmutableString("sqrt(10B").mangledNameHash());
    ASSERT_EQ(0x000003afu, ImmutableString("sqrt(20B").mangledNameHash());
    ASSERT_EQ(0x0000037fu, ImmutableString("sqrt(30B").mangledNameHash());
    ASSERT_EQ(0x00000063u, ImmutableString("inversesqrt(00B").mangledNameHash());
    ASSERT_EQ(0x0000035au, ImmutableString("inversesqrt(10B").mangledNameHash());
    ASSERT_EQ(0x000003ccu, ImmutableString("inversesqrt(20B").mangledNameHash());
    ASSERT_EQ(0x000001acu, ImmutableString("inversesqrt(30B").mangledNameHash());
    ASSERT_EQ(0x00000307u, ImmutableString("abs(00B").mangledNameHash());
    ASSERT_EQ(0x0000019fu, ImmutableString("abs(10B").mangledNameHash());
    ASSERT_EQ(0x00000061u, ImmutableString("abs(20B").mangledNameHash());
    ASSERT_EQ(0x00000360u, ImmutableString("abs(30B").mangledNameHash());
    ASSERT_EQ(0x00000321u, ImmutableString("sign(00B").mangledNameHash());
    ASSERT_EQ(0x0000041cu, ImmutableString("sign(10B").mangledNameHash());
    ASSERT_EQ(0x0000009au, ImmutableString("sign(20B").mangledNameHash());
    ASSERT_EQ(0x000001d0u, ImmutableString("sign(30B").mangledNameHash());
    ASSERT_EQ(0x00000432u, ImmutableString("floor(00B").mangledNameHash());
    ASSERT_EQ(0x00000274u, ImmutableString("floor(10B").mangledNameHash());
    ASSERT_EQ(0x00000296u, ImmutableString("floor(20B").mangledNameHash());
    ASSERT_EQ(0x00000139u, ImmutableString("floor(30B").mangledNameHash());
    ASSERT_EQ(0x000002b2u, ImmutableString("ceil(00B").mangledNameHash());
    ASSERT_EQ(0x000003a0u, ImmutableString("ceil(10B").mangledNameHash());
    ASSERT_EQ(0x000000b2u, ImmutableString("ceil(20B").mangledNameHash());
    ASSERT_EQ(0x000001fcu, ImmutableString("ceil(30B").mangledNameHash());
    ASSERT_EQ(0x000001b5u, ImmutableString("fract(00B").mangledNameHash());
    ASSERT_EQ(0x00000078u, ImmutableString("fract(10B").mangledNameHash());
    ASSERT_EQ(0x0000035fu, ImmutableString("fract(20B").mangledNameHash());
    ASSERT_EQ(0x00000218u, ImmutableString("fract(30B").mangledNameHash());
    ASSERT_EQ(0x000001d7u, ImmutableString("mod(00B00B").mangledNameHash());
    ASSERT_EQ(0x0000018au, ImmutableString("mod(10B00B").mangledNameHash());
    ASSERT_EQ(0x000000d0u, ImmutableString("mod(20B00B").mangledNameHash());
    ASSERT_EQ(0x000001efu, ImmutableString("mod(30B00B").mangledNameHash());
    ASSERT_EQ(0x00000332u, ImmutableString("mod(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000027bu, ImmutableString("mod(20B20B").mangledNameHash());
    ASSERT_EQ(0x000001ceu, ImmutableString("mod(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000239u, ImmutableString("min(00B00B").mangledNameHash());
    ASSERT_EQ(0x0000004du, ImmutableString("min(10B00B").mangledNameHash());
    ASSERT_EQ(0x000000cau, ImmutableString("min(20B00B").mangledNameHash());
    ASSERT_EQ(0x0000008au, ImmutableString("min(30B00B").mangledNameHash());
    ASSERT_EQ(0x000000a6u, ImmutableString("min(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000028au, ImmutableString("min(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000073u, ImmutableString("min(30B30B").mangledNameHash());
    ASSERT_EQ(0x0000016eu, ImmutableString("max(00B00B").mangledNameHash());
    ASSERT_EQ(0x000002cdu, ImmutableString("max(10B00B").mangledNameHash());
    ASSERT_EQ(0x0000003cu, ImmutableString("max(20B00B").mangledNameHash());
    ASSERT_EQ(0x000002efu, ImmutableString("max(30B00B").mangledNameHash());
    ASSERT_EQ(0x00000405u, ImmutableString("max(10B10B").mangledNameHash());
    ASSERT_EQ(0x00000316u, ImmutableString("max(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000192u, ImmutableString("max(30B30B").mangledNameHash());
    ASSERT_EQ(0x000001b0u, ImmutableString("clamp(00B00B00B").mangledNameHash());
    ASSERT_EQ(0x00000149u, ImmutableString("clamp(10B00B00B").mangledNameHash());
    ASSERT_EQ(0x000002ffu, ImmutableString("clamp(20B00B00B").mangledNameHash());
    ASSERT_EQ(0x00000126u, ImmutableString("clamp(30B00B00B").mangledNameHash());
    ASSERT_EQ(0x0000002au, ImmutableString("clamp(10B10B10B").mangledNameHash());
    ASSERT_EQ(0x000003b8u, ImmutableString("clamp(20B20B20B").mangledNameHash());
    ASSERT_EQ(0x0000003fu, ImmutableString("clamp(30B30B30B").mangledNameHash());
    ASSERT_EQ(0x00000298u, ImmutableString("mix(00B00B00B").mangledNameHash());
    ASSERT_EQ(0x00000366u, ImmutableString("mix(10B10B00B").mangledNameHash());
    ASSERT_EQ(0x00000029u, ImmutableString("mix(20B20B00B").mangledNameHash());
    ASSERT_EQ(0x00000393u, ImmutableString("mix(30B30B00B").mangledNameHash());
    ASSERT_EQ(0x0000020au, ImmutableString("mix(10B10B10B").mangledNameHash());
    ASSERT_EQ(0x000002cau, ImmutableString("mix(20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000003dfu, ImmutableString("mix(30B30B30B").mangledNameHash());
    ASSERT_EQ(0x000001e7u, ImmutableString("step(00B00B").mangledNameHash());
    ASSERT_EQ(0x000002f2u, ImmutableString("step(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000030au, ImmutableString("step(20B20B").mangledNameHash());
    ASSERT_EQ(0x000002f6u, ImmutableString("step(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000095u, ImmutableString("step(00B10B").mangledNameHash());
    ASSERT_EQ(0x0000002fu, ImmutableString("step(00B20B").mangledNameHash());
    ASSERT_EQ(0x0000031eu, ImmutableString("step(00B30B").mangledNameHash());
    ASSERT_EQ(0x000003b0u, ImmutableString("smoothstep(00B00B00B").mangledNameHash());
    ASSERT_EQ(0x00000291u, ImmutableString("smoothstep(10B10B10B").mangledNameHash());
    ASSERT_EQ(0x00000421u, ImmutableString("smoothstep(20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000003b7u, ImmutableString("smoothstep(30B30B30B").mangledNameHash());
    ASSERT_EQ(0x00000259u, ImmutableString("smoothstep(00B00B10B").mangledNameHash());
    ASSERT_EQ(0x000000f3u, ImmutableString("smoothstep(00B00B20B").mangledNameHash());
    ASSERT_EQ(0x0000038au, ImmutableString("smoothstep(00B00B30B").mangledNameHash());
    ASSERT_EQ(0x0000026cu, ImmutableString("length(00B").mangledNameHash());
    ASSERT_EQ(0x00000115u, ImmutableString("length(10B").mangledNameHash());
    ASSERT_EQ(0x00000411u, ImmutableString("length(20B").mangledNameHash());
    ASSERT_EQ(0x000002c5u, ImmutableString("length(30B").mangledNameHash());
    ASSERT_EQ(0x000002b4u, ImmutableString("distance(00B00B").mangledNameHash());
    ASSERT_EQ(0x00000188u, ImmutableString("distance(10B10B").mangledNameHash());
    ASSERT_EQ(0x000001edu, ImmutableString("distance(20B20B").mangledNameHash());
    ASSERT_EQ(0x0000010au, ImmutableString("distance(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000118u, ImmutableString("dot(00B00B").mangledNameHash());
    ASSERT_EQ(0x00000129u, ImmutableString("dot(10B10B").mangledNameHash());
    ASSERT_EQ(0x000003a5u, ImmutableString("dot(20B20B").mangledNameHash());
    ASSERT_EQ(0x0000011au, ImmutableString("dot(30B30B").mangledNameHash());
    ASSERT_EQ(0x000002fcu, ImmutableString("cross(20B20B").mangledNameHash());
    ASSERT_EQ(0x000000c0u, ImmutableString("normalize(00B").mangledNameHash());
    ASSERT_EQ(0x00000260u, ImmutableString("normalize(10B").mangledNameHash());
    ASSERT_EQ(0x00000241u, ImmutableString("normalize(20B").mangledNameHash());
    ASSERT_EQ(0x000003b5u, ImmutableString("normalize(30B").mangledNameHash());
    ASSERT_EQ(0x00000337u, ImmutableString("faceforward(00B00B00B").mangledNameHash());
    ASSERT_EQ(0x00000341u, ImmutableString("faceforward(10B10B10B").mangledNameHash());
    ASSERT_EQ(0x0000030du, ImmutableString("faceforward(20B20B20B").mangledNameHash());
    ASSERT_EQ(0x000002aau, ImmutableString("faceforward(30B30B30B").mangledNameHash());
    ASSERT_EQ(0x000000cfu, ImmutableString("reflect(00B00B").mangledNameHash());
    ASSERT_EQ(0x000000f8u, ImmutableString("reflect(10B10B").mangledNameHash());
    ASSERT_EQ(0x00000189u, ImmutableString("reflect(20B20B").mangledNameHash());
    ASSERT_EQ(0x000001c6u, ImmutableString("reflect(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000203u, ImmutableString("refract(00B00B00B").mangledNameHash());
    ASSERT_EQ(0x000000fcu, ImmutableString("refract(10B10B00B").mangledNameHash());
    ASSERT_EQ(0x000000feu, ImmutableString("refract(20B20B00B").mangledNameHash());
    ASSERT_EQ(0x00000293u, ImmutableString("refract(30B30B00B").mangledNameHash());
    ASSERT_EQ(0x000003f3u, ImmutableString("matrixCompMult(50B50B").mangledNameHash());
    ASSERT_EQ(0x000000dbu, ImmutableString("matrixCompMult(A0BA0B").mangledNameHash());
    ASSERT_EQ(0x00000303u, ImmutableString("matrixCompMult(F0BF0B").mangledNameHash());
    ASSERT_EQ(0x00000363u, ImmutableString("lessThan(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000008fu, ImmutableString("lessThan(20B20B").mangledNameHash());
    ASSERT_EQ(0x000002fbu, ImmutableString("lessThan(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000235u, ImmutableString("lessThan(10C10C").mangledNameHash());
    ASSERT_EQ(0x0000031bu, ImmutableString("lessThan(20C20C").mangledNameHash());
    ASSERT_EQ(0x0000009eu, ImmutableString("lessThan(30C30C").mangledNameHash());
    ASSERT_EQ(0x00000066u, ImmutableString("lessThanEqual(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000004cu, ImmutableString("lessThanEqual(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000020u, ImmutableString("lessThanEqual(30B30B").mangledNameHash());
    ASSERT_EQ(0x0000036du, ImmutableString("lessThanEqual(10C10C").mangledNameHash());
    ASSERT_EQ(0x0000019bu, ImmutableString("lessThanEqual(20C20C").mangledNameHash());
    ASSERT_EQ(0x000003e8u, ImmutableString("lessThanEqual(30C30C").mangledNameHash());
    ASSERT_EQ(0x0000040bu, ImmutableString("greaterThan(10B10B").mangledNameHash());
    ASSERT_EQ(0x000002eeu, ImmutableString("greaterThan(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000110u, ImmutableString("greaterThan(30B30B").mangledNameHash());
    ASSERT_EQ(0x000000b1u, ImmutableString("greaterThan(10C10C").mangledNameHash());
    ASSERT_EQ(0x00000042u, ImmutableString("greaterThan(20C20C").mangledNameHash());
    ASSERT_EQ(0x0000038du, ImmutableString("greaterThan(30C30C").mangledNameHash());
    ASSERT_EQ(0x000003a2u, ImmutableString("greaterThanEqual(10B10B").mangledNameHash());
    ASSERT_EQ(0x0000029au, ImmutableString("greaterThanEqual(20B20B").mangledNameHash());
    ASSERT_EQ(0x00000353u, ImmutableString("greaterThanEqual(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000013u, ImmutableString("greaterThanEqual(10C10C").mangledNameHash());
    ASSERT_EQ(0x00000128u, ImmutableString("greaterThanEqual(20C20C").mangledNameHash());
    ASSERT_EQ(0x0000007au, ImmutableString("greaterThanEqual(30C30C").mangledNameHash());
    ASSERT_EQ(0x000003fbu, ImmutableString("equal(10B10B").mangledNameHash());
    ASSERT_EQ(0x000001bau, ImmutableString("equal(20B20B").mangledNameHash());
    ASSERT_EQ(0x000003f5u, ImmutableString("equal(30B30B").mangledNameHash());
    ASSERT_EQ(0x00000362u, ImmutableString("equal(10C10C").mangledNameHash());
    ASSERT_EQ(0x000000bcu, ImmutableString("equal(20C20C").mangledNameHash());
    ASSERT_EQ(0x000001cbu, ImmutableString("equal(30C30C").mangledNameHash());
    ASSERT_EQ(0x000003e3u, ImmutableString("equal(10E10E").mangledNameHash());
    ASSERT_EQ(0x00000297u, ImmutableString("equal(20E20E").mangledNameHash());
    ASSERT_EQ(0x0000018du, ImmutableString("equal(30E30E").mangledNameHash());
    ASSERT_EQ(0x00000268u, ImmutableString("notEqual(10B10B").mangledNameHash());
    ASSERT_EQ(0x000003d8u, ImmutableString("notEqual(20B20B").mangledNameHash());
    ASSERT_EQ(0x000001dau, ImmutableString("notEqual(30B30B").mangledNameHash());
    ASSERT_EQ(0x000002ebu, ImmutableString("notEqual(10C10C").mangledNameHash());
    ASSERT_EQ(0x00000374u, ImmutableString("notEqual(20C20C").mangledNameHash());
    ASSERT_EQ(0x0000033fu, ImmutableString("notEqual(30C30C").mangledNameHash());
    ASSERT_EQ(0x000003efu, ImmutableString("notEqual(10E10E").mangledNameHash());
    ASSERT_EQ(0x00000220u, ImmutableString("notEqual(20E20E").mangledNameHash());
    ASSERT_EQ(0x0000005du, ImmutableString("notEqual(30E30E").mangledNameHash());
    ASSERT_EQ(0x000002ceu, ImmutableString("any(10E").mangledNameHash());
    ASSERT_EQ(0x0000026eu, ImmutableString("any(20E").mangledNameHash());
    ASSERT_EQ(0x0000027eu, ImmutableString("any(30E").mangledNameHash());
    ASSERT_EQ(0x000000e5u, ImmutableString("all(10E").mangledNameHash());
    ASSERT_EQ(0x000002d6u, ImmutableString("all(20E").mangledNameHash());
    ASSERT_EQ(0x0000022eu, ImmutableString("all(30E").mangledNameHash());
    ASSERT_EQ(0x0000001bu, ImmutableString("not(10E").mangledNameHash());
    ASSERT_EQ(0x00000158u, ImmutableString("not(20E").mangledNameHash());
    ASSERT_EQ(0x000002bau, ImmutableString("not(30E").mangledNameHash());
    ASSERT_EQ(0x000002abu, ImmutableString("gl_DepthRangeParameters").mangledNameHash());
    ASSERT_EQ(0x0000009fu, ImmutableString("gl_DepthRange").mangledNameHash());
    ASSERT_EQ(0x00000384u, ImmutableString("gl_MaxVertexAttribs").mangledNameHash());
    ASSERT_EQ(0x00000141u, ImmutableString("gl_MaxVertexUniformVectors").mangledNameHash());
    ASSERT_EQ(0x00000351u, ImmutableString("gl_MaxVertexTextureImageUnits").mangledNameHash());
    ASSERT_EQ(0x00000183u, ImmutableString("gl_MaxCombinedTextureImageUnits").mangledNameHash());
    ASSERT_EQ(0x00000342u, ImmutableString("gl_MaxTextureImageUnits").mangledNameHash());
    ASSERT_EQ(0x0000035du, ImmutableString("gl_MaxFragmentUniformVectors").mangledNameHash());
    ASSERT_EQ(0x0000024au, ImmutableString("gl_MaxDrawBuffers").mangledNameHash());
    ASSERT_EQ(0x0000017fu, ImmutableString("gl_MaxDualSourceDrawBuffersEXT").mangledNameHash());
    ASSERT_EQ(0x000000bau, ImmutableString("gl_FragCoord").mangledNameHash());
    ASSERT_EQ(0x00000146u, ImmutableString("gl_FrontFacing").mangledNameHash());
    ASSERT_EQ(0x00000145u, ImmutableString("gl_PointCoord").mangledNameHash());
    ASSERT_EQ(0x00000407u, ImmutableString("gl_PointSize").mangledNameHash());
}

}  // namespace sh
