// GENERATED FILE - DO NOT EDIT.
// Generated by gen_builtin_symbols.py using data from builtin_variables.json and
// builtin_function_declarations.txt.
//
// Copyright 2019 The ANGLE Project Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
//
// SymbolTable_autogen.cpp:
//   Compile-time initialized built-ins.

#include "compiler/translator/SymbolTable.h"

#include "angle_gl.h"
#include "compiler/translator/ImmutableString.h"
#include "compiler/translator/StaticType.h"
#include "compiler/translator/Symbol.h"
#include "compiler/translator/SymbolTable.h"
#include "compiler/translator/tree_util/BuiltIn_autogen.h"

namespace sh
{

// Since some of the BuiltInId declarations are used outside of constexpr expressions, we need to
// have these definitions without an initializer. C++17 should eventually remove the need for this.
constexpr const TSymbolUniqueId BuiltInId::radians_Float1;
constexpr const TSymbolUniqueId BuiltInId::radians_Float2;
constexpr const TSymbolUniqueId BuiltInId::radians_Float3;
constexpr const TSymbolUniqueId BuiltInId::radians_Float4;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float1;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float2;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float3;
constexpr const TSymbolUniqueId BuiltInId::degrees_Float4;
constexpr const TSymbolUniqueId BuiltInId::sin_Float1;
constexpr const TSymbolUniqueId BuiltInId::sin_Float2;
constexpr const TSymbolUniqueId BuiltInId::sin_Float3;
constexpr const TSymbolUniqueId BuiltInId::sin_Float4;
constexpr const TSymbolUniqueId BuiltInId::cos_Float1;
constexpr const TSymbolUniqueId BuiltInId::cos_Float2;
constexpr const TSymbolUniqueId BuiltInId::cos_Float3;
constexpr const TSymbolUniqueId BuiltInId::cos_Float4;
constexpr const TSymbolUniqueId BuiltInId::tan_Float1;
constexpr const TSymbolUniqueId BuiltInId::tan_Float2;
constexpr const TSymbolUniqueId BuiltInId::tan_Float3;
constexpr const TSymbolUniqueId BuiltInId::tan_Float4;
constexpr const TSymbolUniqueId BuiltInId::asin_Float1;
constexpr const TSymbolUniqueId BuiltInId::asin_Float2;
constexpr const TSymbolUniqueId BuiltInId::asin_Float3;
constexpr const TSymbolUniqueId BuiltInId::asin_Float4;
constexpr const TSymbolUniqueId BuiltInId::acos_Float1;
constexpr const TSymbolUniqueId BuiltInId::acos_Float2;
constexpr const TSymbolUniqueId BuiltInId::acos_Float3;
constexpr const TSymbolUniqueId BuiltInId::acos_Float4;
constexpr const TSymbolUniqueId BuiltInId::atan_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::atan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::atan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::atan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::atan_Float1;
constexpr const TSymbolUniqueId BuiltInId::atan_Float2;
constexpr const TSymbolUniqueId BuiltInId::atan_Float3;
constexpr const TSymbolUniqueId BuiltInId::atan_Float4;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float1;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float2;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float3;
constexpr const TSymbolUniqueId BuiltInId::sinh_Float4;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float1;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float2;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float3;
constexpr const TSymbolUniqueId BuiltInId::cosh_Float4;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float1;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float2;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float3;
constexpr const TSymbolUniqueId BuiltInId::tanh_Float4;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float1;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float2;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float3;
constexpr const TSymbolUniqueId BuiltInId::asinh_Float4;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float1;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float2;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float3;
constexpr const TSymbolUniqueId BuiltInId::acosh_Float4;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float1;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float2;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float3;
constexpr const TSymbolUniqueId BuiltInId::atanh_Float4;
constexpr const TSymbolUniqueId BuiltInId::pow_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::pow_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::pow_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::pow_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::exp_Float1;
constexpr const TSymbolUniqueId BuiltInId::exp_Float2;
constexpr const TSymbolUniqueId BuiltInId::exp_Float3;
constexpr const TSymbolUniqueId BuiltInId::exp_Float4;
constexpr const TSymbolUniqueId BuiltInId::log_Float1;
constexpr const TSymbolUniqueId BuiltInId::log_Float2;
constexpr const TSymbolUniqueId BuiltInId::log_Float3;
constexpr const TSymbolUniqueId BuiltInId::log_Float4;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float1;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float2;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float3;
constexpr const TSymbolUniqueId BuiltInId::exp2_Float4;
constexpr const TSymbolUniqueId BuiltInId::log2_Float1;
constexpr const TSymbolUniqueId BuiltInId::log2_Float2;
constexpr const TSymbolUniqueId BuiltInId::log2_Float3;
constexpr const TSymbolUniqueId BuiltInId::log2_Float4;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float1;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float2;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float3;
constexpr const TSymbolUniqueId BuiltInId::sqrt_Float4;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float1;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float2;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float3;
constexpr const TSymbolUniqueId BuiltInId::inversesqrt_Float4;
constexpr const TSymbolUniqueId BuiltInId::abs_Float1;
constexpr const TSymbolUniqueId BuiltInId::abs_Float2;
constexpr const TSymbolUniqueId BuiltInId::abs_Float3;
constexpr const TSymbolUniqueId BuiltInId::abs_Float4;
constexpr const TSymbolUniqueId BuiltInId::abs_Int1;
constexpr const TSymbolUniqueId BuiltInId::abs_Int2;
constexpr const TSymbolUniqueId BuiltInId::abs_Int3;
constexpr const TSymbolUniqueId BuiltInId::abs_Int4;
constexpr const TSymbolUniqueId BuiltInId::sign_Float1;
constexpr const TSymbolUniqueId BuiltInId::sign_Float2;
constexpr const TSymbolUniqueId BuiltInId::sign_Float3;
constexpr const TSymbolUniqueId BuiltInId::sign_Float4;
constexpr const TSymbolUniqueId BuiltInId::sign_Int1;
constexpr const TSymbolUniqueId BuiltInId::sign_Int2;
constexpr const TSymbolUniqueId BuiltInId::sign_Int3;
constexpr const TSymbolUniqueId BuiltInId::sign_Int4;
constexpr const TSymbolUniqueId BuiltInId::floor_Float1;
constexpr const TSymbolUniqueId BuiltInId::floor_Float2;
constexpr const TSymbolUniqueId BuiltInId::floor_Float3;
constexpr const TSymbolUniqueId BuiltInId::floor_Float4;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float1;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float2;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float3;
constexpr const TSymbolUniqueId BuiltInId::trunc_Float4;
constexpr const TSymbolUniqueId BuiltInId::round_Float1;
constexpr const TSymbolUniqueId BuiltInId::round_Float2;
constexpr const TSymbolUniqueId BuiltInId::round_Float3;
constexpr const TSymbolUniqueId BuiltInId::round_Float4;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float1;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float2;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float3;
constexpr const TSymbolUniqueId BuiltInId::roundEven_Float4;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float1;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float2;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float3;
constexpr const TSymbolUniqueId BuiltInId::ceil_Float4;
constexpr const TSymbolUniqueId BuiltInId::fract_Float1;
constexpr const TSymbolUniqueId BuiltInId::fract_Float2;
constexpr const TSymbolUniqueId BuiltInId::fract_Float3;
constexpr const TSymbolUniqueId BuiltInId::fract_Float4;
constexpr const TSymbolUniqueId BuiltInId::mod_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::mod_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::mod_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::mod_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::min_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::min_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::min_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::min_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::min_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::min_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::min_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::min_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_Int4_Int1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::min_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::min_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::min_UInt2_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt3_UInt1;
constexpr const TSymbolUniqueId BuiltInId::min_UInt4_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::max_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::max_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::max_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::max_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::max_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::max_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::max_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_Int4_Int1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::max_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::max_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::max_UInt2_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt3_UInt1;
constexpr const TSymbolUniqueId BuiltInId::max_UInt4_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float2_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float3_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float4_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::clamp_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int2_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int3_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::clamp_Int4_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt2_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt3_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt4_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::clamp_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::mix_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::mix_Float1_Float1_Bool1;
constexpr const TSymbolUniqueId BuiltInId::mix_Float2_Float2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::mix_Float3_Float3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::mix_Float4_Float4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::step_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::step_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::step_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float2;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float3;
constexpr const TSymbolUniqueId BuiltInId::step_Float1_Float4;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float2;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float3;
constexpr const TSymbolUniqueId BuiltInId::smoothstep_Float1_Float1_Float4;
constexpr const TSymbolUniqueId BuiltInId::modf_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::modf_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::modf_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::modf_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float1;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float2;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float3;
constexpr const TSymbolUniqueId BuiltInId::isnan_Float4;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float1;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float2;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float3;
constexpr const TSymbolUniqueId BuiltInId::isinf_Float4;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float1;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float2;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float3;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToInt_Float4;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float1;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float2;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float3;
constexpr const TSymbolUniqueId BuiltInId::floatBitsToUint_Float4;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int1;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int2;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int3;
constexpr const TSymbolUniqueId BuiltInId::intBitsToFloat_Int4;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt1;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt2;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt3;
constexpr const TSymbolUniqueId BuiltInId::uintBitsToFloat_UInt4;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float1_Int1;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::frexp_Float4_Int4;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float1_Int1;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::ldexp_Float4_Int4;
constexpr const TSymbolUniqueId BuiltInId::packSnorm2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::packUnorm2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::packHalf2x16_Float2;
constexpr const TSymbolUniqueId BuiltInId::unpackSnorm2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackUnorm2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackHalf2x16_UInt1;
constexpr const TSymbolUniqueId BuiltInId::packUnorm4x8_Float4;
constexpr const TSymbolUniqueId BuiltInId::packSnorm4x8_Float4;
constexpr const TSymbolUniqueId BuiltInId::unpackUnorm4x8_UInt1;
constexpr const TSymbolUniqueId BuiltInId::unpackSnorm4x8_UInt1;
constexpr const TSymbolUniqueId BuiltInId::length_Float1;
constexpr const TSymbolUniqueId BuiltInId::length_Float2;
constexpr const TSymbolUniqueId BuiltInId::length_Float3;
constexpr const TSymbolUniqueId BuiltInId::length_Float4;
constexpr const TSymbolUniqueId BuiltInId::distance_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::distance_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::distance_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::distance_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::dot_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::dot_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::dot_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::dot_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::cross_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float1;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float2;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float3;
constexpr const TSymbolUniqueId BuiltInId::normalize_Float4;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::faceforward_Float4_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::reflect_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::refract_Float1_Float1_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float2_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float3_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::refract_Float4_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x2_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x3_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x4_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x3_Float2x3;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x2_Float3x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float2x4_Float2x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x2_Float4x2;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float3x4_Float3x4;
constexpr const TSymbolUniqueId BuiltInId::matrixCompMult_Float4x3_Float4x3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float2;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float2_Float4;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float4_Float3;
constexpr const TSymbolUniqueId BuiltInId::outerProduct_Float3_Float4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x2;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float2x4;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float4x3;
constexpr const TSymbolUniqueId BuiltInId::transpose_Float3x4;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::determinant_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float2x2;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float3x3;
constexpr const TSymbolUniqueId BuiltInId::inverse_Float4x4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::lessThan_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::lessThanEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::greaterThan_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::greaterThanEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::equal_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::equal_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::equal_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::equal_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::equal_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::equal_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::equal_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::equal_Bool4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Float4_Float4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool2_Bool2;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool3_Bool3;
constexpr const TSymbolUniqueId BuiltInId::notEqual_Bool4_Bool4;
constexpr const TSymbolUniqueId BuiltInId::any_Bool2;
constexpr const TSymbolUniqueId BuiltInId::any_Bool3;
constexpr const TSymbolUniqueId BuiltInId::any_Bool4;
constexpr const TSymbolUniqueId BuiltInId::all_Bool2;
constexpr const TSymbolUniqueId BuiltInId::all_Bool3;
constexpr const TSymbolUniqueId BuiltInId::all_Bool4;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool2;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool3;
constexpr const TSymbolUniqueId BuiltInId::notFunc_Bool4;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldExtract_UInt4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int1_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int2_Int2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int3_Int3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_Int4_Int4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt1_UInt1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt2_UInt2_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt3_UInt3_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldInsert_UInt4_UInt4_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int2;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int3;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_Int4;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt1;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt2;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt3;
constexpr const TSymbolUniqueId BuiltInId::bitfieldReverse_UInt4;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int1;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int2;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int3;
constexpr const TSymbolUniqueId BuiltInId::bitCount_Int4;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt1;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt2;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt3;
constexpr const TSymbolUniqueId BuiltInId::bitCount_UInt4;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int1;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int2;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int3;
constexpr const TSymbolUniqueId BuiltInId::findLSB_Int4;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt1;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt2;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt3;
constexpr const TSymbolUniqueId BuiltInId::findLSB_UInt4;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int1;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int2;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int3;
constexpr const TSymbolUniqueId BuiltInId::findMSB_Int4;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt1;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt2;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt3;
constexpr const TSymbolUniqueId BuiltInId::findMSB_UInt4;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::uaddCarry_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::usubBorrow_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt1_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt2_UInt2_UInt2_UInt2;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt3_UInt3_UInt3_UInt3;
constexpr const TSymbolUniqueId BuiltInId::umulExtended_UInt4_UInt4_UInt4_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int1_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int2_Int2_Int2_Int2;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int3_Int3_Int3_Int3;
constexpr const TSymbolUniqueId BuiltInId::imulExtended_Int4_Int4_Int4_Int4;
constexpr const TSymbolUniqueId BuiltInId::texture2D_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureCube_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2D_SamplerExternalOES1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_SamplerExternalOES1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_SamplerExternalOES1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DRect_Sampler2DRect1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DRectProj_Sampler2DRect1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2DRectProj_Sampler2DRect1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DRect1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DRect1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DRect1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DGradEXT_Sampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjGradEXT_Sampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjGradEXT_Sampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureCubeGradEXT_SamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture2D_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProj_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCube_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdxExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdyExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float1;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float2;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float3;
constexpr const TSymbolUniqueId BuiltInId::fwidthExt_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture2DLodEXT_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLodEXT_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLodEXT_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCubeLodEXT_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3D_Sampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture3D_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DProj_Sampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture3DProj_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DLod_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture3DProjLod_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DLod_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLod_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture2DProjLod_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureCubeLod_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler3D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler3D1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_ISampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureLod_USampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCubeShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArrayShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DShadow1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureLod_Sampler2DShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler3D1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USamplerCube1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DArray1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerCubeShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DArrayShadow1_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_ISampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_USampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjLod_Sampler2DShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2D1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler3D1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler2D1_Float2_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler3D1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_SamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USamplerCube1_Float3_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DShadow1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_SamplerCubeShadow1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_ISampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_USampler2DArray1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGrad_Sampler2DArrayShadow1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler2D1_Float3_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler2D1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_ISampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_USampler3D1_Float4_Float3_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProjGrad_Sampler2DShadow1_Float4_Float2_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_Sampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_ISampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSizeExt_USampler2DMS1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_Sampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_ISampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_USampler2DMSArray1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler3D1_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler3D1_Float4_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler2D1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler3D1_Float3_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2DShadow1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_Sampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_ISampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureLodOffset_USampler2DArray1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler2D1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler2D1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_ISampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_USampler3D1_Float4_Float1_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureProjLodOffset_Sampler2DShadow1_Float4_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler2D1_Int2_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler3D1_Int3_Int1_Int3;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_Sampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_ISampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::texelFetchOffset_USampler2DArray1_Int3_Int1_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_Sampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_ISampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_USampler2D1_Float2_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_Sampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_ISampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId BuiltInId::textureGradOffset_USampler3D1_Float3_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DShadow1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_ISampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_USampler2DArray1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGradOffset_Sampler2DArrayShadow1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler2D1_Float3_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler2D1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_ISampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_USampler3D1_Float4_Float3_Float3_Int3;
constexpr const TSymbolUniqueId
    BuiltInId::textureProjGradOffset_Sampler2DShadow1_Float4_Float2_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2D1_Float2_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler3D1_Float3_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureOffset_USampler2DArray1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float3_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler2D1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_USampler3D1_Float4_Int3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternalOES1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float4;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerExternalOES1_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_SamplerExternalOES1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4;
constexpr const TSymbolUniqueId BuiltInId::rgb_2_yuv_Float3_YuvCscStandardEXT1;
constexpr const TSymbolUniqueId BuiltInId::yuv_2_rgb_Float3_YuvCscStandardEXT1;
constexpr const TSymbolUniqueId BuiltInId::textureSize_SamplerExternal2DY2YEXT1_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_SamplerExternal2DY2YEXT1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2D1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler3D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USamplerCube1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_ISampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_USampler2DArray1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler2D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_ISampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_USampler3D1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_Sampler2DShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerCubeShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_Sampler2DShadow1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternalOES1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternalOES1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4_Float1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_Sampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_ISampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetchExt_USampler2DMS1_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_Sampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_ISampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::texelFetch_USampler2DMSArray1_Int3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2D1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2D1_Float2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2DArray1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USampler2DArray1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USamplerCube1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_ISamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_USamplerCube1_Float3_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DShadow1_Float2;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DShadow1_Float2_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArrayShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_Sampler2DArrayShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCubeShadow1_Float3;
constexpr const TSymbolUniqueId BuiltInId::textureGather_SamplerCubeShadow1_Float3_Float1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2_Int1;
constexpr const TSymbolUniqueId BuiltInId::textureGatherOffset_Sampler2DShadow1_Float2_Float1_Int2;
constexpr const TSymbolUniqueId
    BuiltInId::textureGatherOffset_Sampler2DArrayShadow1_Float3_Float1_Int2;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdx_Float4;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float1;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float2;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float3;
constexpr const TSymbolUniqueId BuiltInId::dFdy_Float4;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float1;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float2;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float3;
constexpr const TSymbolUniqueId BuiltInId::fwidth_Float4;
constexpr const TSymbolUniqueId BuiltInId::atomicCounter_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicCounterIncrement_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicCounterDecrement_AtomicCounter1;
constexpr const TSymbolUniqueId BuiltInId::atomicAdd_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicAdd_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicMin_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicMin_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicMax_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicMax_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicAnd_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicAnd_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicOr_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicOr_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicXor_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicXor_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicExchange_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicExchange_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::atomicCompSwap_UInt1_UInt1_UInt1;
constexpr const TSymbolUniqueId BuiltInId::atomicCompSwap_Int1_Int1_Int1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage2D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage3D1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_Image2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImage2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImage2DArray1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_ImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_IImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageSize_UImageCube1;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage2D1_Int2;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage3D1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_Image2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImage2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImage2DArray1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_ImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_IImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageLoad_UImageCube1_Int3;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image2D1_Int2_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage2D1_Int2_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage2D1_Int2_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image3D1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage3D1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage3D1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_Image2DArray1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImage2DArray1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImage2DArray1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_ImageCube1_Int3_Float4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_IImageCube1_Int3_Int4;
constexpr const TSymbolUniqueId BuiltInId::imageStore_UImageCube1_Int3_UInt4;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrier;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierAtomicCounter;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierBuffer;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierImage;
constexpr const TSymbolUniqueId BuiltInId::barrier;
constexpr const TSymbolUniqueId BuiltInId::memoryBarrierShared;
constexpr const TSymbolUniqueId BuiltInId::groupMemoryBarrier;
constexpr const TSymbolUniqueId BuiltInId::EmitVertex;
constexpr const TSymbolUniqueId BuiltInId::EndPrimitive;
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRangeParameters;
constexpr const TSymbolUniqueId BuiltInId::gl_DepthRange;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAttribs;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentUniformVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVaryingVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDrawBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxDualSourceDrawBuffersEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexOutputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentInputVectors;
constexpr const TSymbolUniqueId BuiltInId::gl_MinProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxProgramTexelOffset;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedShaderOutputResources;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupCount;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeWorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxComputeAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBindings;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxVertexAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxFragmentAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxCombinedAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxAtomicCounterBufferSize;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryInputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryImageUniforms;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTextureImageUnits;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryOutputVertices;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryTotalOutputComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryUniformComponents;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounters;
constexpr const TSymbolUniqueId BuiltInId::gl_MaxGeometryAtomicCounterBuffers;
constexpr const TSymbolUniqueId BuiltInId::gl_FragCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FrontFacing;
constexpr const TSymbolUniqueId BuiltInId::gl_PointCoord;
constexpr const TSymbolUniqueId BuiltInId::gl_FragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_FragData;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepth;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragColorEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_SecondaryFragDataEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_FragDepthEXT;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragData;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColor;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragDataNV;
constexpr const TSymbolUniqueId BuiltInId::gl_LastFragColorARM;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveID;
constexpr const TSymbolUniqueId BuiltInId::gl_Layer;
constexpr const TSymbolUniqueId BuiltInId::gl_Position;
constexpr const TSymbolUniqueId BuiltInId::gl_PointSize;
constexpr const TSymbolUniqueId BuiltInId::gl_InstanceID;
constexpr const TSymbolUniqueId BuiltInId::gl_VertexID;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewportIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerVS;
constexpr const TSymbolUniqueId BuiltInId::gl_DrawID;
constexpr const TSymbolUniqueId BuiltInId::gl_DrawIDESSL1;
constexpr const TSymbolUniqueId BuiltInId::gl_BaseVertex;
constexpr const TSymbolUniqueId BuiltInId::gl_BaseInstance;
constexpr const TSymbolUniqueId BuiltInId::gl_NumWorkGroups;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupSize;
constexpr const TSymbolUniqueId BuiltInId::gl_WorkGroupID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_GlobalInvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_LocalInvocationIndex;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDIn;
constexpr const TSymbolUniqueId BuiltInId::gl_InvocationID;
constexpr const TSymbolUniqueId BuiltInId::gl_PrimitiveIDGS;
constexpr const TSymbolUniqueId BuiltInId::gl_LayerGS;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertex;
constexpr const TSymbolUniqueId BuiltInId::gl_in;
constexpr const TSymbolUniqueId BuiltInId::gl_PerVertexOutBlock;
constexpr const TSymbolUniqueId BuiltInId::gl_PositionGS;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVR;
constexpr const TSymbolUniqueId BuiltInId::gl_ViewID_OVRESSL1;

const int TSymbolTable::kLastBuiltInId = 1033;

namespace BuiltInName
{

constexpr const ImmutableString _empty("");
constexpr const ImmutableString EmitVertex("EmitVertex");
constexpr const ImmutableString EmitVertex_("EmitVertex(");
constexpr const ImmutableString EndPrimitive("EndPrimitive");
constexpr const ImmutableString EndPrimitive_("EndPrimitive(");
constexpr const ImmutableString abs("abs");
constexpr const ImmutableString abs_00B("abs(00B");
constexpr const ImmutableString abs_00C("abs(00C");
constexpr const ImmutableString abs_10B("abs(10B");
constexpr const ImmutableString abs_10C("abs(10C");
constexpr const ImmutableString abs_20B("abs(20B");
constexpr const ImmutableString abs_20C("abs(20C");
constexpr const ImmutableString abs_30B("abs(30B");
constexpr const ImmutableString abs_30C("abs(30C");
constexpr const ImmutableString acos("acos");
constexpr const ImmutableString acos_00B("acos(00B");
constexpr const ImmutableString acos_10B("acos(10B");
constexpr const ImmutableString acos_20B("acos(20B");
constexpr const ImmutableString acos_30B("acos(30B");
constexpr const ImmutableString acosh("acosh");
constexpr const ImmutableString acosh_00B("acosh(00B");
constexpr const ImmutableString acosh_10B("acosh(10B");
constexpr const ImmutableString acosh_20B("acosh(20B");
constexpr const ImmutableString acosh_30B("acosh(30B");
constexpr const ImmutableString all("all");
constexpr const ImmutableString all_10E("all(10E");
constexpr const ImmutableString all_20E("all(20E");
constexpr const ImmutableString all_30E("all(30E");
constexpr const ImmutableString any("any");
constexpr const ImmutableString any_10E("any(10E");
constexpr const ImmutableString any_20E("any(20E");
constexpr const ImmutableString any_30E("any(30E");
constexpr const ImmutableString asin("asin");
constexpr const ImmutableString asin_00B("asin(00B");
constexpr const ImmutableString asin_10B("asin(10B");
constexpr const ImmutableString asin_20B("asin(20B");
constexpr const ImmutableString asin_30B("asin(30B");
constexpr const ImmutableString asinh("asinh");
constexpr const ImmutableString asinh_00B("asinh(00B");
constexpr const ImmutableString asinh_10B("asinh(10B");
constexpr const ImmutableString asinh_20B("asinh(20B");
constexpr const ImmutableString asinh_30B("asinh(30B");
constexpr const ImmutableString atan("atan");
constexpr const ImmutableString atan_00B("atan(00B");
constexpr const ImmutableString atan_00B00B("atan(00B00B");
constexpr const ImmutableString atan_10B("atan(10B");
constexpr const ImmutableString atan_10B10B("atan(10B10B");
constexpr const ImmutableString atan_20B("atan(20B");
constexpr const ImmutableString atan_20B20B("atan(20B20B");
constexpr const ImmutableString atan_30B("atan(30B");
constexpr const ImmutableString atan_30B30B("atan(30B30B");
constexpr const ImmutableString atanh("atanh");
constexpr const ImmutableString atanh_00B("atanh(00B");
constexpr const ImmutableString atanh_10B("atanh(10B");
constexpr const ImmutableString atanh_20B("atanh(20B");
constexpr const ImmutableString atanh_30B("atanh(30B");
constexpr const ImmutableString atomicAdd("atomicAdd");
constexpr const ImmutableString atomicAdd_00C00C("atomicAdd(00C00C");
constexpr const ImmutableString atomicAdd_00D00D("atomicAdd(00D00D");
constexpr const ImmutableString atomicAnd("atomicAnd");
constexpr const ImmutableString atomicAnd_00C00C("atomicAnd(00C00C");
constexpr const ImmutableString atomicAnd_00D00D("atomicAnd(00D00D");
constexpr const ImmutableString atomicCompSwap("atomicCompSwap");
constexpr const ImmutableString atomicCompSwap_00C00C00C("atomicCompSwap(00C00C00C");
constexpr const ImmutableString atomicCompSwap_00D00D00D("atomicCompSwap(00D00D00D");
constexpr const ImmutableString atomicCounter("atomicCounter");
constexpr const ImmutableString atomicCounterDecrement("atomicCounterDecrement");
constexpr const ImmutableString atomicCounterDecrement_00F("atomicCounterDecrement(00F");
constexpr const ImmutableString atomicCounterIncrement("atomicCounterIncrement");
constexpr const ImmutableString atomicCounterIncrement_00F("atomicCounterIncrement(00F");
constexpr const ImmutableString atomicCounter_00F("atomicCounter(00F");
constexpr const ImmutableString atomicExchange("atomicExchange");
constexpr const ImmutableString atomicExchange_00C00C("atomicExchange(00C00C");
constexpr const ImmutableString atomicExchange_00D00D("atomicExchange(00D00D");
constexpr const ImmutableString atomicMax("atomicMax");
constexpr const ImmutableString atomicMax_00C00C("atomicMax(00C00C");
constexpr const ImmutableString atomicMax_00D00D("atomicMax(00D00D");
constexpr const ImmutableString atomicMin("atomicMin");
constexpr const ImmutableString atomicMin_00C00C("atomicMin(00C00C");
constexpr const ImmutableString atomicMin_00D00D("atomicMin(00D00D");
constexpr const ImmutableString atomicOr("atomicOr");
constexpr const ImmutableString atomicOr_00C00C("atomicOr(00C00C");
constexpr const ImmutableString atomicOr_00D00D("atomicOr(00D00D");
constexpr const ImmutableString atomicXor("atomicXor");
constexpr const ImmutableString atomicXor_00C00C("atomicXor(00C00C");
constexpr const ImmutableString atomicXor_00D00D("atomicXor(00D00D");
constexpr const ImmutableString barrier("barrier");
constexpr const ImmutableString barrier_("barrier(");
constexpr const ImmutableString bitCount("bitCount");
constexpr const ImmutableString bitCount_00C("bitCount(00C");
constexpr const ImmutableString bitCount_00D("bitCount(00D");
constexpr const ImmutableString bitCount_10C("bitCount(10C");
constexpr const ImmutableString bitCount_10D("bitCount(10D");
constexpr const ImmutableString bitCount_20C("bitCount(20C");
constexpr const ImmutableString bitCount_20D("bitCount(20D");
constexpr const ImmutableString bitCount_30C("bitCount(30C");
constexpr const ImmutableString bitCount_30D("bitCount(30D");
constexpr const ImmutableString bitfieldExtract("bitfieldExtract");
constexpr const ImmutableString bitfieldExtract_00C00C00C("bitfieldExtract(00C00C00C");
constexpr const ImmutableString bitfieldExtract_00D00C00C("bitfieldExtract(00D00C00C");
constexpr const ImmutableString bitfieldExtract_10C00C00C("bitfieldExtract(10C00C00C");
constexpr const ImmutableString bitfieldExtract_10D00C00C("bitfieldExtract(10D00C00C");
constexpr const ImmutableString bitfieldExtract_20C00C00C("bitfieldExtract(20C00C00C");
constexpr const ImmutableString bitfieldExtract_20D00C00C("bitfieldExtract(20D00C00C");
constexpr const ImmutableString bitfieldExtract_30C00C00C("bitfieldExtract(30C00C00C");
constexpr const ImmutableString bitfieldExtract_30D00C00C("bitfieldExtract(30D00C00C");
constexpr const ImmutableString bitfieldInsert("bitfieldInsert");
constexpr const ImmutableString bitfieldInsert_00C00C00C00C("bitfieldInsert(00C00C00C00C");
constexpr const ImmutableString bitfieldInsert_00D00D00C00C("bitfieldInsert(00D00D00C00C");
constexpr const ImmutableString bitfieldInsert_10C10C00C00C("bitfieldInsert(10C10C00C00C");
constexpr const ImmutableString bitfieldInsert_10D10D00C00C("bitfieldInsert(10D10D00C00C");
constexpr const ImmutableString bitfieldInsert_20C20C00C00C("bitfieldInsert(20C20C00C00C");
constexpr const ImmutableString bitfieldInsert_20D20D00C00C("bitfieldInsert(20D20D00C00C");
constexpr const ImmutableString bitfieldInsert_30C30C00C00C("bitfieldInsert(30C30C00C00C");
constexpr const ImmutableString bitfieldInsert_30D30D00C00C("bitfieldInsert(30D30D00C00C");
constexpr const ImmutableString bitfieldReverse("bitfieldReverse");
constexpr const ImmutableString bitfieldReverse_00C("bitfieldReverse(00C");
constexpr const ImmutableString bitfieldReverse_00D("bitfieldReverse(00D");
constexpr const ImmutableString bitfieldReverse_10C("bitfieldReverse(10C");
constexpr const ImmutableString bitfieldReverse_10D("bitfieldReverse(10D");
constexpr const ImmutableString bitfieldReverse_20C("bitfieldReverse(20C");
constexpr const ImmutableString bitfieldReverse_20D("bitfieldReverse(20D");
constexpr const ImmutableString bitfieldReverse_30C("bitfieldReverse(30C");
constexpr const ImmutableString bitfieldReverse_30D("bitfieldReverse(30D");
constexpr const ImmutableString ceil("ceil");
constexpr const ImmutableString ceil_00B("ceil(00B");
constexpr const ImmutableString ceil_10B("ceil(10B");
constexpr const ImmutableString ceil_20B("ceil(20B");
constexpr const ImmutableString ceil_30B("ceil(30B");
constexpr const ImmutableString clamp("clamp");
constexpr const ImmutableString clamp_00B00B00B("clamp(00B00B00B");
constexpr const ImmutableString clamp_00C00C00C("clamp(00C00C00C");
constexpr const ImmutableString clamp_00D00D00D("clamp(00D00D00D");
constexpr const ImmutableString clamp_10B00B00B("clamp(10B00B00B");
constexpr const ImmutableString clamp_10B10B10B("clamp(10B10B10B");
constexpr const ImmutableString clamp_10C00C00C("clamp(10C00C00C");
constexpr const ImmutableString clamp_10C10C10C("clamp(10C10C10C");
constexpr const ImmutableString clamp_10D00D00D("clamp(10D00D00D");
constexpr const ImmutableString clamp_10D10D10D("clamp(10D10D10D");
constexpr const ImmutableString clamp_20B00B00B("clamp(20B00B00B");
constexpr const ImmutableString clamp_20B20B20B("clamp(20B20B20B");
constexpr const ImmutableString clamp_20C00C00C("clamp(20C00C00C");
constexpr const ImmutableString clamp_20C20C20C("clamp(20C20C20C");
constexpr const ImmutableString clamp_20D00D00D("clamp(20D00D00D");
constexpr const ImmutableString clamp_20D20D20D("clamp(20D20D20D");
constexpr const ImmutableString clamp_30B00B00B("clamp(30B00B00B");
constexpr const ImmutableString clamp_30B30B30B("clamp(30B30B30B");
constexpr const ImmutableString clamp_30C00C00C("clamp(30C00C00C");
constexpr const ImmutableString clamp_30C30C30C("clamp(30C30C30C");
constexpr const ImmutableString clamp_30D00D00D("clamp(30D00D00D");
constexpr const ImmutableString clamp_30D30D30D("clamp(30D30D30D");
constexpr const ImmutableString cos("cos");
constexpr const ImmutableString cos_00B("cos(00B");
constexpr const ImmutableString cos_10B("cos(10B");
constexpr const ImmutableString cos_20B("cos(20B");
constexpr const ImmutableString cos_30B("cos(30B");
constexpr const ImmutableString cosh("cosh");
constexpr const ImmutableString cosh_00B("cosh(00B");
constexpr const ImmutableString cosh_10B("cosh(10B");
constexpr const ImmutableString cosh_20B("cosh(20B");
constexpr const ImmutableString cosh_30B("cosh(30B");
constexpr const ImmutableString cross("cross");
constexpr const ImmutableString cross_20B20B("cross(20B20B");
constexpr const ImmutableString dFdx("dFdx");
constexpr const ImmutableString dFdxExt("dFdx");
constexpr const ImmutableString dFdxExt_00B("dFdx(00B");
constexpr const ImmutableString dFdxExt_10B("dFdx(10B");
constexpr const ImmutableString dFdxExt_20B("dFdx(20B");
constexpr const ImmutableString dFdxExt_30B("dFdx(30B");
constexpr const ImmutableString dFdx_00B("dFdx(00B");
constexpr const ImmutableString dFdx_10B("dFdx(10B");
constexpr const ImmutableString dFdx_20B("dFdx(20B");
constexpr const ImmutableString dFdx_30B("dFdx(30B");
constexpr const ImmutableString dFdy("dFdy");
constexpr const ImmutableString dFdyExt("dFdy");
constexpr const ImmutableString dFdyExt_00B("dFdy(00B");
constexpr const ImmutableString dFdyExt_10B("dFdy(10B");
constexpr const ImmutableString dFdyExt_20B("dFdy(20B");
constexpr const ImmutableString dFdyExt_30B("dFdy(30B");
constexpr const ImmutableString dFdy_00B("dFdy(00B");
constexpr const ImmutableString dFdy_10B("dFdy(10B");
constexpr const ImmutableString dFdy_20B("dFdy(20B");
constexpr const ImmutableString dFdy_30B("dFdy(30B");
constexpr const ImmutableString degrees("degrees");
constexpr const ImmutableString degrees_00B("degrees(00B");
constexpr const ImmutableString degrees_10B("degrees(10B");
constexpr const ImmutableString degrees_20B("degrees(20B");
constexpr const ImmutableString degrees_30B("degrees(30B");
constexpr const ImmutableString determinant("determinant");
constexpr const ImmutableString determinant_50B("determinant(50B");
constexpr const ImmutableString determinant_A0B("determinant(A0B");
constexpr const ImmutableString determinant_F0B("determinant(F0B");
constexpr const ImmutableString diff("diff");
constexpr const ImmutableString distance("distance");
constexpr const ImmutableString distance_00B00B("distance(00B00B");
constexpr const ImmutableString distance_10B10B("distance(10B10B");
constexpr const ImmutableString distance_20B20B("distance(20B20B");
constexpr const ImmutableString distance_30B30B("distance(30B30B");
constexpr const ImmutableString dot("dot");
constexpr const ImmutableString dot_00B00B("dot(00B00B");
constexpr const ImmutableString dot_10B10B("dot(10B10B");
constexpr const ImmutableString dot_20B20B("dot(20B20B");
constexpr const ImmutableString dot_30B30B("dot(30B30B");
constexpr const ImmutableString equal("equal");
constexpr const ImmutableString equal_10B10B("equal(10B10B");
constexpr const ImmutableString equal_10C10C("equal(10C10C");
constexpr const ImmutableString equal_10D10D("equal(10D10D");
constexpr const ImmutableString equal_10E10E("equal(10E10E");
constexpr const ImmutableString equal_20B20B("equal(20B20B");
constexpr const ImmutableString equal_20C20C("equal(20C20C");
constexpr const ImmutableString equal_20D20D("equal(20D20D");
constexpr const ImmutableString equal_20E20E("equal(20E20E");
constexpr const ImmutableString equal_30B30B("equal(30B30B");
constexpr const ImmutableString equal_30C30C("equal(30C30C");
constexpr const ImmutableString equal_30D30D("equal(30D30D");
constexpr const ImmutableString equal_30E30E("equal(30E30E");
constexpr const ImmutableString exp("exp");
constexpr const ImmutableString exp2("exp2");
constexpr const ImmutableString exp2_00B("exp2(00B");
constexpr const ImmutableString exp2_10B("exp2(10B");
constexpr const ImmutableString exp2_20B("exp2(20B");
constexpr const ImmutableString exp2_30B("exp2(30B");
constexpr const ImmutableString exp_00B("exp(00B");
constexpr const ImmutableString exp_10B("exp(10B");
constexpr const ImmutableString exp_20B("exp(20B");
constexpr const ImmutableString exp_30B("exp(30B");
constexpr const ImmutableString faceforward("faceforward");
constexpr const ImmutableString faceforward_00B00B00B("faceforward(00B00B00B");
constexpr const ImmutableString faceforward_10B10B10B("faceforward(10B10B10B");
constexpr const ImmutableString faceforward_20B20B20B("faceforward(20B20B20B");
constexpr const ImmutableString faceforward_30B30B30B("faceforward(30B30B30B");
constexpr const ImmutableString far("far");
constexpr const ImmutableString findLSB("findLSB");
constexpr const ImmutableString findLSB_00C("findLSB(00C");
constexpr const ImmutableString findLSB_00D("findLSB(00D");
constexpr const ImmutableString findLSB_10C("findLSB(10C");
constexpr const ImmutableString findLSB_10D("findLSB(10D");
constexpr const ImmutableString findLSB_20C("findLSB(20C");
constexpr const ImmutableString findLSB_20D("findLSB(20D");
constexpr const ImmutableString findLSB_30C("findLSB(30C");
constexpr const ImmutableString findLSB_30D("findLSB(30D");
constexpr const ImmutableString findMSB("findMSB");
constexpr const ImmutableString findMSB_00C("findMSB(00C");
constexpr const ImmutableString findMSB_00D("findMSB(00D");
constexpr const ImmutableString findMSB_10C("findMSB(10C");
constexpr const ImmutableString findMSB_10D("findMSB(10D");
constexpr const ImmutableString findMSB_20C("findMSB(20C");
constexpr const ImmutableString findMSB_20D("findMSB(20D");
constexpr const ImmutableString findMSB_30C("findMSB(30C");
constexpr const ImmutableString findMSB_30D("findMSB(30D");
constexpr const ImmutableString floatBitsToInt("floatBitsToInt");
constexpr const ImmutableString floatBitsToInt_00B("floatBitsToInt(00B");
constexpr const ImmutableString floatBitsToInt_10B("floatBitsToInt(10B");
constexpr const ImmutableString floatBitsToInt_20B("floatBitsToInt(20B");
constexpr const ImmutableString floatBitsToInt_30B("floatBitsToInt(30B");
constexpr const ImmutableString floatBitsToUint("floatBitsToUint");
constexpr const ImmutableString floatBitsToUint_00B("floatBitsToUint(00B");
constexpr const ImmutableString floatBitsToUint_10B("floatBitsToUint(10B");
constexpr const ImmutableString floatBitsToUint_20B("floatBitsToUint(20B");
constexpr const ImmutableString floatBitsToUint_30B("floatBitsToUint(30B");
constexpr const ImmutableString floor("floor");
constexpr const ImmutableString floor_00B("floor(00B");
constexpr const ImmutableString floor_10B("floor(10B");
constexpr const ImmutableString floor_20B("floor(20B");
constexpr const ImmutableString floor_30B("floor(30B");
constexpr const ImmutableString fract("fract");
constexpr const ImmutableString fract_00B("fract(00B");
constexpr const ImmutableString fract_10B("fract(10B");
constexpr const ImmutableString fract_20B("fract(20B");
constexpr const ImmutableString fract_30B("fract(30B");
constexpr const ImmutableString frexp("frexp");
constexpr const ImmutableString frexp_00B00C("frexp(00B00C");
constexpr const ImmutableString frexp_10B10C("frexp(10B10C");
constexpr const ImmutableString frexp_20B20C("frexp(20B20C");
constexpr const ImmutableString frexp_30B30C("frexp(30B30C");
constexpr const ImmutableString fwidth("fwidth");
constexpr const ImmutableString fwidthExt("fwidth");
constexpr const ImmutableString fwidthExt_00B("fwidth(00B");
constexpr const ImmutableString fwidthExt_10B("fwidth(10B");
constexpr const ImmutableString fwidthExt_20B("fwidth(20B");
constexpr const ImmutableString fwidthExt_30B("fwidth(30B");
constexpr const ImmutableString fwidth_00B("fwidth(00B");
constexpr const ImmutableString fwidth_10B("fwidth(10B");
constexpr const ImmutableString fwidth_20B("fwidth(20B");
constexpr const ImmutableString fwidth_30B("fwidth(30B");
constexpr const ImmutableString gl_BaseInstance("gl_BaseInstance");
constexpr const ImmutableString gl_BaseVertex("gl_BaseVertex");
constexpr const ImmutableString gl_DepthRange("gl_DepthRange");
constexpr const ImmutableString gl_DepthRangeParameters("gl_DepthRangeParameters");
constexpr const ImmutableString gl_DrawID("gl_DrawID");
constexpr const ImmutableString gl_FragColor("gl_FragColor");
constexpr const ImmutableString gl_FragCoord("gl_FragCoord");
constexpr const ImmutableString gl_FragData("gl_FragData");
constexpr const ImmutableString gl_FragDepth("gl_FragDepth");
constexpr const ImmutableString gl_FragDepthEXT("gl_FragDepthEXT");
constexpr const ImmutableString gl_FrontFacing("gl_FrontFacing");
constexpr const ImmutableString gl_GlobalInvocationID("gl_GlobalInvocationID");
constexpr const ImmutableString gl_InstanceID("gl_InstanceID");
constexpr const ImmutableString gl_InvocationID("gl_InvocationID");
constexpr const ImmutableString gl_LastFragColor("gl_LastFragColor");
constexpr const ImmutableString gl_LastFragColorARM("gl_LastFragColorARM");
constexpr const ImmutableString gl_LastFragData("gl_LastFragData");
constexpr const ImmutableString gl_Layer("gl_Layer");
constexpr const ImmutableString gl_LocalInvocationID("gl_LocalInvocationID");
constexpr const ImmutableString gl_LocalInvocationIndex("gl_LocalInvocationIndex");
constexpr const ImmutableString gl_MaxAtomicCounterBindings("gl_MaxAtomicCounterBindings");
constexpr const ImmutableString gl_MaxAtomicCounterBufferSize("gl_MaxAtomicCounterBufferSize");
constexpr const ImmutableString gl_MaxCombinedAtomicCounterBuffers(
    "gl_MaxCombinedAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxCombinedAtomicCounters("gl_MaxCombinedAtomicCounters");
constexpr const ImmutableString gl_MaxCombinedImageUniforms("gl_MaxCombinedImageUniforms");
constexpr const ImmutableString gl_MaxCombinedShaderOutputResources(
    "gl_MaxCombinedShaderOutputResources");
constexpr const ImmutableString gl_MaxCombinedTextureImageUnits("gl_MaxCombinedTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeAtomicCounterBuffers(
    "gl_MaxComputeAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxComputeAtomicCounters("gl_MaxComputeAtomicCounters");
constexpr const ImmutableString gl_MaxComputeImageUniforms("gl_MaxComputeImageUniforms");
constexpr const ImmutableString gl_MaxComputeTextureImageUnits("gl_MaxComputeTextureImageUnits");
constexpr const ImmutableString gl_MaxComputeUniformComponents("gl_MaxComputeUniformComponents");
constexpr const ImmutableString gl_MaxComputeWorkGroupCount("gl_MaxComputeWorkGroupCount");
constexpr const ImmutableString gl_MaxComputeWorkGroupSize("gl_MaxComputeWorkGroupSize");
constexpr const ImmutableString gl_MaxDrawBuffers("gl_MaxDrawBuffers");
constexpr const ImmutableString gl_MaxDualSourceDrawBuffersEXT("gl_MaxDualSourceDrawBuffersEXT");
constexpr const ImmutableString gl_MaxFragmentAtomicCounterBuffers(
    "gl_MaxFragmentAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxFragmentAtomicCounters("gl_MaxFragmentAtomicCounters");
constexpr const ImmutableString gl_MaxFragmentImageUniforms("gl_MaxFragmentImageUniforms");
constexpr const ImmutableString gl_MaxFragmentInputVectors("gl_MaxFragmentInputVectors");
constexpr const ImmutableString gl_MaxFragmentUniformVectors("gl_MaxFragmentUniformVectors");
constexpr const ImmutableString gl_MaxGeometryAtomicCounterBuffers(
    "gl_MaxGeometryAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxGeometryAtomicCounters("gl_MaxGeometryAtomicCounters");
constexpr const ImmutableString gl_MaxGeometryImageUniforms("gl_MaxGeometryImageUniforms");
constexpr const ImmutableString gl_MaxGeometryInputComponents("gl_MaxGeometryInputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputComponents("gl_MaxGeometryOutputComponents");
constexpr const ImmutableString gl_MaxGeometryOutputVertices("gl_MaxGeometryOutputVertices");
constexpr const ImmutableString gl_MaxGeometryTextureImageUnits("gl_MaxGeometryTextureImageUnits");
constexpr const ImmutableString gl_MaxGeometryTotalOutputComponents(
    "gl_MaxGeometryTotalOutputComponents");
constexpr const ImmutableString gl_MaxGeometryUniformComponents("gl_MaxGeometryUniformComponents");
constexpr const ImmutableString gl_MaxImageUnits("gl_MaxImageUnits");
constexpr const ImmutableString gl_MaxProgramTexelOffset("gl_MaxProgramTexelOffset");
constexpr const ImmutableString gl_MaxTextureImageUnits("gl_MaxTextureImageUnits");
constexpr const ImmutableString gl_MaxVaryingVectors("gl_MaxVaryingVectors");
constexpr const ImmutableString gl_MaxVertexAtomicCounterBuffers(
    "gl_MaxVertexAtomicCounterBuffers");
constexpr const ImmutableString gl_MaxVertexAtomicCounters("gl_MaxVertexAtomicCounters");
constexpr const ImmutableString gl_MaxVertexAttribs("gl_MaxVertexAttribs");
constexpr const ImmutableString gl_MaxVertexImageUniforms("gl_MaxVertexImageUniforms");
constexpr const ImmutableString gl_MaxVertexOutputVectors("gl_MaxVertexOutputVectors");
constexpr const ImmutableString gl_MaxVertexTextureImageUnits("gl_MaxVertexTextureImageUnits");
constexpr const ImmutableString gl_MaxVertexUniformVectors("gl_MaxVertexUniformVectors");
constexpr const ImmutableString gl_MinProgramTexelOffset("gl_MinProgramTexelOffset");
constexpr const ImmutableString gl_NumWorkGroups("gl_NumWorkGroups");
constexpr const ImmutableString gl_PerVertex("gl_PerVertex");
constexpr const ImmutableString gl_PointCoord("gl_PointCoord");
constexpr const ImmutableString gl_PointSize("gl_PointSize");
constexpr const ImmutableString gl_Position("gl_Position");
constexpr const ImmutableString gl_PrimitiveID("gl_PrimitiveID");
constexpr const ImmutableString gl_PrimitiveIDIn("gl_PrimitiveIDIn");
constexpr const ImmutableString gl_SecondaryFragColorEXT("gl_SecondaryFragColorEXT");
constexpr const ImmutableString gl_SecondaryFragDataEXT("gl_SecondaryFragDataEXT");
constexpr const ImmutableString gl_VertexID("gl_VertexID");
constexpr const ImmutableString gl_ViewID_OVR("gl_ViewID_OVR");
constexpr const ImmutableString gl_ViewportIndex("gl_ViewportIndex");
constexpr const ImmutableString gl_WorkGroupID("gl_WorkGroupID");
constexpr const ImmutableString gl_WorkGroupSize("gl_WorkGroupSize");
constexpr const ImmutableString gl_in("gl_in");
constexpr const ImmutableString greaterThan("greaterThan");
constexpr const ImmutableString greaterThanEqual("greaterThanEqual");
constexpr const ImmutableString greaterThanEqual_10B10B("greaterThanEqual(10B10B");
constexpr const ImmutableString greaterThanEqual_10C10C("greaterThanEqual(10C10C");
constexpr const ImmutableString greaterThanEqual_10D10D("greaterThanEqual(10D10D");
constexpr const ImmutableString greaterThanEqual_20B20B("greaterThanEqual(20B20B");
constexpr const ImmutableString greaterThanEqual_20C20C("greaterThanEqual(20C20C");
constexpr const ImmutableString greaterThanEqual_20D20D("greaterThanEqual(20D20D");
constexpr const ImmutableString greaterThanEqual_30B30B("greaterThanEqual(30B30B");
constexpr const ImmutableString greaterThanEqual_30C30C("greaterThanEqual(30C30C");
constexpr const ImmutableString greaterThanEqual_30D30D("greaterThanEqual(30D30D");
constexpr const ImmutableString greaterThan_10B10B("greaterThan(10B10B");
constexpr const ImmutableString greaterThan_10C10C("greaterThan(10C10C");
constexpr const ImmutableString greaterThan_10D10D("greaterThan(10D10D");
constexpr const ImmutableString greaterThan_20B20B("greaterThan(20B20B");
constexpr const ImmutableString greaterThan_20C20C("greaterThan(20C20C");
constexpr const ImmutableString greaterThan_20D20D("greaterThan(20D20D");
constexpr const ImmutableString greaterThan_30B30B("greaterThan(30B30B");
constexpr const ImmutableString greaterThan_30C30C("greaterThan(30C30C");
constexpr const ImmutableString greaterThan_30D30D("greaterThan(30D30D");
constexpr const ImmutableString groupMemoryBarrier("groupMemoryBarrier");
constexpr const ImmutableString groupMemoryBarrier_("groupMemoryBarrier(");
constexpr const ImmutableString imageLoad("imageLoad");
constexpr const ImmutableString imageLoad_00f10C("imageLoad(00f10C");
constexpr const ImmutableString imageLoad_00g10C("imageLoad(00g10C");
constexpr const ImmutableString imageLoad_00h10C("imageLoad(00h10C");
constexpr const ImmutableString imageLoad_00i20C("imageLoad(00i20C");
constexpr const ImmutableString imageLoad_00j20C("imageLoad(00j20C");
constexpr const ImmutableString imageLoad_00k20C("imageLoad(00k20C");
constexpr const ImmutableString imageLoad_00l20C("imageLoad(00l20C");
constexpr const ImmutableString imageLoad_00m20C("imageLoad(00m20C");
constexpr const ImmutableString imageLoad_00n20C("imageLoad(00n20C");
constexpr const ImmutableString imageLoad_00o20C("imageLoad(00o20C");
constexpr const ImmutableString imageLoad_00p20C("imageLoad(00p20C");
constexpr const ImmutableString imageLoad_00q20C("imageLoad(00q20C");
constexpr const ImmutableString imageSize("imageSize");
constexpr const ImmutableString imageSize_00f("imageSize(00f");
constexpr const ImmutableString imageSize_00g("imageSize(00g");
constexpr const ImmutableString imageSize_00h("imageSize(00h");
constexpr const ImmutableString imageSize_00i("imageSize(00i");
constexpr const ImmutableString imageSize_00j("imageSize(00j");
constexpr const ImmutableString imageSize_00k("imageSize(00k");
constexpr const ImmutableString imageSize_00l("imageSize(00l");
constexpr const ImmutableString imageSize_00m("imageSize(00m");
constexpr const ImmutableString imageSize_00n("imageSize(00n");
constexpr const ImmutableString imageSize_00o("imageSize(00o");
constexpr const ImmutableString imageSize_00p("imageSize(00p");
constexpr const ImmutableString imageSize_00q("imageSize(00q");
constexpr const ImmutableString imageStore("imageStore");
constexpr const ImmutableString imageStore_00f10C30B("imageStore(00f10C30B");
constexpr const ImmutableString imageStore_00g10C30C("imageStore(00g10C30C");
constexpr const ImmutableString imageStore_00h10C30D("imageStore(00h10C30D");
constexpr const ImmutableString imageStore_00i20C30B("imageStore(00i20C30B");
constexpr const ImmutableString imageStore_00j20C30C("imageStore(00j20C30C");
constexpr const ImmutableString imageStore_00k20C30D("imageStore(00k20C30D");
constexpr const ImmutableString imageStore_00l20C30B("imageStore(00l20C30B");
constexpr const ImmutableString imageStore_00m20C30C("imageStore(00m20C30C");
constexpr const ImmutableString imageStore_00n20C30D("imageStore(00n20C30D");
constexpr const ImmutableString imageStore_00o20C30B("imageStore(00o20C30B");
constexpr const ImmutableString imageStore_00p20C30C("imageStore(00p20C30C");
constexpr const ImmutableString imageStore_00q20C30D("imageStore(00q20C30D");
constexpr const ImmutableString imulExtended("imulExtended");
constexpr const ImmutableString imulExtended_00C00C00C00C("imulExtended(00C00C00C00C");
constexpr const ImmutableString imulExtended_10C10C10C10C("imulExtended(10C10C10C10C");
constexpr const ImmutableString imulExtended_20C20C20C20C("imulExtended(20C20C20C20C");
constexpr const ImmutableString imulExtended_30C30C30C30C("imulExtended(30C30C30C30C");
constexpr const ImmutableString intBitsToFloat("intBitsToFloat");
constexpr const ImmutableString intBitsToFloat_00C("intBitsToFloat(00C");
constexpr const ImmutableString intBitsToFloat_10C("intBitsToFloat(10C");
constexpr const ImmutableString intBitsToFloat_20C("intBitsToFloat(20C");
constexpr const ImmutableString intBitsToFloat_30C("intBitsToFloat(30C");
constexpr const ImmutableString inverse("inverse");
constexpr const ImmutableString inverse_50B("inverse(50B");
constexpr const ImmutableString inverse_A0B("inverse(A0B");
constexpr const ImmutableString inverse_F0B("inverse(F0B");
constexpr const ImmutableString inversesqrt("inversesqrt");
constexpr const ImmutableString inversesqrt_00B("inversesqrt(00B");
constexpr const ImmutableString inversesqrt_10B("inversesqrt(10B");
constexpr const ImmutableString inversesqrt_20B("inversesqrt(20B");
constexpr const ImmutableString inversesqrt_30B("inversesqrt(30B");
constexpr const ImmutableString isinf("isinf");
constexpr const ImmutableString isinf_00B("isinf(00B");
constexpr const ImmutableString isinf_10B("isinf(10B");
constexpr const ImmutableString isinf_20B("isinf(20B");
constexpr const ImmutableString isinf_30B("isinf(30B");
constexpr const ImmutableString isnan("isnan");
constexpr const ImmutableString isnan_00B("isnan(00B");
constexpr const ImmutableString isnan_10B("isnan(10B");
constexpr const ImmutableString isnan_20B("isnan(20B");
constexpr const ImmutableString isnan_30B("isnan(30B");
constexpr const ImmutableString ldexp("ldexp");
constexpr const ImmutableString ldexp_00B00C("ldexp(00B00C");
constexpr const ImmutableString ldexp_10B10C("ldexp(10B10C");
constexpr const ImmutableString ldexp_20B20C("ldexp(20B20C");
constexpr const ImmutableString ldexp_30B30C("ldexp(30B30C");
constexpr const ImmutableString length("length");
constexpr const ImmutableString length_00B("length(00B");
constexpr const ImmutableString length_10B("length(10B");
constexpr const ImmutableString length_20B("length(20B");
constexpr const ImmutableString length_30B("length(30B");
constexpr const ImmutableString lessThan("lessThan");
constexpr const ImmutableString lessThanEqual("lessThanEqual");
constexpr const ImmutableString lessThanEqual_10B10B("lessThanEqual(10B10B");
constexpr const ImmutableString lessThanEqual_10C10C("lessThanEqual(10C10C");
constexpr const ImmutableString lessThanEqual_10D10D("lessThanEqual(10D10D");
constexpr const ImmutableString lessThanEqual_20B20B("lessThanEqual(20B20B");
constexpr const ImmutableString lessThanEqual_20C20C("lessThanEqual(20C20C");
constexpr const ImmutableString lessThanEqual_20D20D("lessThanEqual(20D20D");
constexpr const ImmutableString lessThanEqual_30B30B("lessThanEqual(30B30B");
constexpr const ImmutableString lessThanEqual_30C30C("lessThanEqual(30C30C");
constexpr const ImmutableString lessThanEqual_30D30D("lessThanEqual(30D30D");
constexpr const ImmutableString lessThan_10B10B("lessThan(10B10B");
constexpr const ImmutableString lessThan_10C10C("lessThan(10C10C");
constexpr const ImmutableString lessThan_10D10D("lessThan(10D10D");
constexpr const ImmutableString lessThan_20B20B("lessThan(20B20B");
constexpr const ImmutableString lessThan_20C20C("lessThan(20C20C");
constexpr const ImmutableString lessThan_20D20D("lessThan(20D20D");
constexpr const ImmutableString lessThan_30B30B("lessThan(30B30B");
constexpr const ImmutableString lessThan_30C30C("lessThan(30C30C");
constexpr const ImmutableString lessThan_30D30D("lessThan(30D30D");
constexpr const ImmutableString log("log");
constexpr const ImmutableString log2("log2");
constexpr const ImmutableString log2_00B("log2(00B");
constexpr const ImmutableString log2_10B("log2(10B");
constexpr const ImmutableString log2_20B("log2(20B");
constexpr const ImmutableString log2_30B("log2(30B");
constexpr const ImmutableString log_00B("log(00B");
constexpr const ImmutableString log_10B("log(10B");
constexpr const ImmutableString log_20B("log(20B");
constexpr const ImmutableString log_30B("log(30B");
constexpr const ImmutableString matrixCompMult("matrixCompMult");
constexpr const ImmutableString matrixCompMult_50B50B("matrixCompMult(50B50B");
constexpr const ImmutableString matrixCompMult_60B60B("matrixCompMult(60B60B");
constexpr const ImmutableString matrixCompMult_70B70B("matrixCompMult(70B70B");
constexpr const ImmutableString matrixCompMult_90B90B("matrixCompMult(90B90B");
constexpr const ImmutableString matrixCompMult_A0BA0B("matrixCompMult(A0BA0B");
constexpr const ImmutableString matrixCompMult_B0BB0B("matrixCompMult(B0BB0B");
constexpr const ImmutableString matrixCompMult_D0BD0B("matrixCompMult(D0BD0B");
constexpr const ImmutableString matrixCompMult_E0BE0B("matrixCompMult(E0BE0B");
constexpr const ImmutableString matrixCompMult_F0BF0B("matrixCompMult(F0BF0B");
constexpr const ImmutableString max("max");
constexpr const ImmutableString max_00B00B("max(00B00B");
constexpr const ImmutableString max_00C00C("max(00C00C");
constexpr const ImmutableString max_00D00D("max(00D00D");
constexpr const ImmutableString max_10B00B("max(10B00B");
constexpr const ImmutableString max_10B10B("max(10B10B");
constexpr const ImmutableString max_10C00C("max(10C00C");
constexpr const ImmutableString max_10C10C("max(10C10C");
constexpr const ImmutableString max_10D00D("max(10D00D");
constexpr const ImmutableString max_10D10D("max(10D10D");
constexpr const ImmutableString max_20B00B("max(20B00B");
constexpr const ImmutableString max_20B20B("max(20B20B");
constexpr const ImmutableString max_20C00C("max(20C00C");
constexpr const ImmutableString max_20C20C("max(20C20C");
constexpr const ImmutableString max_20D00D("max(20D00D");
constexpr const ImmutableString max_20D20D("max(20D20D");
constexpr const ImmutableString max_30B00B("max(30B00B");
constexpr const ImmutableString max_30B30B("max(30B30B");
constexpr const ImmutableString max_30C00C("max(30C00C");
constexpr const ImmutableString max_30C30C("max(30C30C");
constexpr const ImmutableString max_30D00D("max(30D00D");
constexpr const ImmutableString max_30D30D("max(30D30D");
constexpr const ImmutableString memoryBarrier("memoryBarrier");
constexpr const ImmutableString memoryBarrierAtomicCounter("memoryBarrierAtomicCounter");
constexpr const ImmutableString memoryBarrierAtomicCounter_("memoryBarrierAtomicCounter(");
constexpr const ImmutableString memoryBarrierBuffer("memoryBarrierBuffer");
constexpr const ImmutableString memoryBarrierBuffer_("memoryBarrierBuffer(");
constexpr const ImmutableString memoryBarrierImage("memoryBarrierImage");
constexpr const ImmutableString memoryBarrierImage_("memoryBarrierImage(");
constexpr const ImmutableString memoryBarrierShared("memoryBarrierShared");
constexpr const ImmutableString memoryBarrierShared_("memoryBarrierShared(");
constexpr const ImmutableString memoryBarrier_("memoryBarrier(");
constexpr const ImmutableString min("min");
constexpr const ImmutableString min_00B00B("min(00B00B");
constexpr const ImmutableString min_00C00C("min(00C00C");
constexpr const ImmutableString min_00D00D("min(00D00D");
constexpr const ImmutableString min_10B00B("min(10B00B");
constexpr const ImmutableString min_10B10B("min(10B10B");
constexpr const ImmutableString min_10C00C("min(10C00C");
constexpr const ImmutableString min_10C10C("min(10C10C");
constexpr const ImmutableString min_10D00D("min(10D00D");
constexpr const ImmutableString min_10D10D("min(10D10D");
constexpr const ImmutableString min_20B00B("min(20B00B");
constexpr const ImmutableString min_20B20B("min(20B20B");
constexpr const ImmutableString min_20C00C("min(20C00C");
constexpr const ImmutableString min_20C20C("min(20C20C");
constexpr const ImmutableString min_20D00D("min(20D00D");
constexpr const ImmutableString min_20D20D("min(20D20D");
constexpr const ImmutableString min_30B00B("min(30B00B");
constexpr const ImmutableString min_30B30B("min(30B30B");
constexpr const ImmutableString min_30C00C("min(30C00C");
constexpr const ImmutableString min_30C30C("min(30C30C");
constexpr const ImmutableString min_30D00D("min(30D00D");
constexpr const ImmutableString min_30D30D("min(30D30D");
constexpr const ImmutableString mix("mix");
constexpr const ImmutableString mix_00B00B00B("mix(00B00B00B");
constexpr const ImmutableString mix_00B00B00E("mix(00B00B00E");
constexpr const ImmutableString mix_10B10B00B("mix(10B10B00B");
constexpr const ImmutableString mix_10B10B10B("mix(10B10B10B");
constexpr const ImmutableString mix_10B10B10E("mix(10B10B10E");
constexpr const ImmutableString mix_20B20B00B("mix(20B20B00B");
constexpr const ImmutableString mix_20B20B20B("mix(20B20B20B");
constexpr const ImmutableString mix_20B20B20E("mix(20B20B20E");
constexpr const ImmutableString mix_30B30B00B("mix(30B30B00B");
constexpr const ImmutableString mix_30B30B30B("mix(30B30B30B");
constexpr const ImmutableString mix_30B30B30E("mix(30B30B30E");
constexpr const ImmutableString mod("mod");
constexpr const ImmutableString mod_00B00B("mod(00B00B");
constexpr const ImmutableString mod_10B00B("mod(10B00B");
constexpr const ImmutableString mod_10B10B("mod(10B10B");
constexpr const ImmutableString mod_20B00B("mod(20B00B");
constexpr const ImmutableString mod_20B20B("mod(20B20B");
constexpr const ImmutableString mod_30B00B("mod(30B00B");
constexpr const ImmutableString mod_30B30B("mod(30B30B");
constexpr const ImmutableString modf("modf");
constexpr const ImmutableString modf_00B00B("modf(00B00B");
constexpr const ImmutableString modf_10B10B("modf(10B10B");
constexpr const ImmutableString modf_20B20B("modf(20B20B");
constexpr const ImmutableString modf_30B30B("modf(30B30B");
constexpr const ImmutableString near("near");
constexpr const ImmutableString normalize("normalize");
constexpr const ImmutableString normalize_00B("normalize(00B");
constexpr const ImmutableString normalize_10B("normalize(10B");
constexpr const ImmutableString normalize_20B("normalize(20B");
constexpr const ImmutableString normalize_30B("normalize(30B");
constexpr const ImmutableString notEqual("notEqual");
constexpr const ImmutableString notEqual_10B10B("notEqual(10B10B");
constexpr const ImmutableString notEqual_10C10C("notEqual(10C10C");
constexpr const ImmutableString notEqual_10D10D("notEqual(10D10D");
constexpr const ImmutableString notEqual_10E10E("notEqual(10E10E");
constexpr const ImmutableString notEqual_20B20B("notEqual(20B20B");
constexpr const ImmutableString notEqual_20C20C("notEqual(20C20C");
constexpr const ImmutableString notEqual_20D20D("notEqual(20D20D");
constexpr const ImmutableString notEqual_20E20E("notEqual(20E20E");
constexpr const ImmutableString notEqual_30B30B("notEqual(30B30B");
constexpr const ImmutableString notEqual_30C30C("notEqual(30C30C");
constexpr const ImmutableString notEqual_30D30D("notEqual(30D30D");
constexpr const ImmutableString notEqual_30E30E("notEqual(30E30E");
constexpr const ImmutableString notFunc("not");
constexpr const ImmutableString notFunc_10E("not(10E");
constexpr const ImmutableString notFunc_20E("not(20E");
constexpr const ImmutableString notFunc_30E("not(30E");
constexpr const ImmutableString outerProduct("outerProduct");
constexpr const ImmutableString outerProduct_10B10B("outerProduct(10B10B");
constexpr const ImmutableString outerProduct_10B20B("outerProduct(10B20B");
constexpr const ImmutableString outerProduct_10B30B("outerProduct(10B30B");
constexpr const ImmutableString outerProduct_20B10B("outerProduct(20B10B");
constexpr const ImmutableString outerProduct_20B20B("outerProduct(20B20B");
constexpr const ImmutableString outerProduct_20B30B("outerProduct(20B30B");
constexpr const ImmutableString outerProduct_30B10B("outerProduct(30B10B");
constexpr const ImmutableString outerProduct_30B20B("outerProduct(30B20B");
constexpr const ImmutableString outerProduct_30B30B("outerProduct(30B30B");
constexpr const ImmutableString packHalf2x16("packHalf2x16");
constexpr const ImmutableString packHalf2x16_10B("packHalf2x16(10B");
constexpr const ImmutableString packSnorm2x16("packSnorm2x16");
constexpr const ImmutableString packSnorm2x16_10B("packSnorm2x16(10B");
constexpr const ImmutableString packSnorm4x8("packSnorm4x8");
constexpr const ImmutableString packSnorm4x8_30B("packSnorm4x8(30B");
constexpr const ImmutableString packUnorm2x16("packUnorm2x16");
constexpr const ImmutableString packUnorm2x16_10B("packUnorm2x16(10B");
constexpr const ImmutableString packUnorm4x8("packUnorm4x8");
constexpr const ImmutableString packUnorm4x8_30B("packUnorm4x8(30B");
constexpr const ImmutableString pow("pow");
constexpr const ImmutableString pow_00B00B("pow(00B00B");
constexpr const ImmutableString pow_10B10B("pow(10B10B");
constexpr const ImmutableString pow_20B20B("pow(20B20B");
constexpr const ImmutableString pow_30B30B("pow(30B30B");
constexpr const ImmutableString radians("radians");
constexpr const ImmutableString radians_00B("radians(00B");
constexpr const ImmutableString radians_10B("radians(10B");
constexpr const ImmutableString radians_20B("radians(20B");
constexpr const ImmutableString radians_30B("radians(30B");
constexpr const ImmutableString reflect("reflect");
constexpr const ImmutableString reflect_00B00B("reflect(00B00B");
constexpr const ImmutableString reflect_10B10B("reflect(10B10B");
constexpr const ImmutableString reflect_20B20B("reflect(20B20B");
constexpr const ImmutableString reflect_30B30B("reflect(30B30B");
constexpr const ImmutableString refract("refract");
constexpr const ImmutableString refract_00B00B00B("refract(00B00B00B");
constexpr const ImmutableString refract_10B10B00B("refract(10B10B00B");
constexpr const ImmutableString refract_20B20B00B("refract(20B20B00B");
constexpr const ImmutableString refract_30B30B00B("refract(30B30B00B");
constexpr const ImmutableString rgb_2_yuv("rgb_2_yuv");
constexpr const ImmutableString rgb_2_yuv_20B00G("rgb_2_yuv(20B00G");
constexpr const ImmutableString round("round");
constexpr const ImmutableString roundEven("roundEven");
constexpr const ImmutableString roundEven_00B("roundEven(00B");
constexpr const ImmutableString roundEven_10B("roundEven(10B");
constexpr const ImmutableString roundEven_20B("roundEven(20B");
constexpr const ImmutableString roundEven_30B("roundEven(30B");
constexpr const ImmutableString round_00B("round(00B");
constexpr const ImmutableString round_10B("round(10B");
constexpr const ImmutableString round_20B("round(20B");
constexpr const ImmutableString round_30B("round(30B");
constexpr const ImmutableString sign("sign");
constexpr const ImmutableString sign_00B("sign(00B");
constexpr const ImmutableString sign_00C("sign(00C");
constexpr const ImmutableString sign_10B("sign(10B");
constexpr const ImmutableString sign_10C("sign(10C");
constexpr const ImmutableString sign_20B("sign(20B");
constexpr const ImmutableString sign_20C("sign(20C");
constexpr const ImmutableString sign_30B("sign(30B");
constexpr const ImmutableString sign_30C("sign(30C");
constexpr const ImmutableString sin("sin");
constexpr const ImmutableString sin_00B("sin(00B");
constexpr const ImmutableString sin_10B("sin(10B");
constexpr const ImmutableString sin_20B("sin(20B");
constexpr const ImmutableString sin_30B("sin(30B");
constexpr const ImmutableString sinh("sinh");
constexpr const ImmutableString sinh_00B("sinh(00B");
constexpr const ImmutableString sinh_10B("sinh(10B");
constexpr const ImmutableString sinh_20B("sinh(20B");
constexpr const ImmutableString sinh_30B("sinh(30B");
constexpr const ImmutableString smoothstep("smoothstep");
constexpr const ImmutableString smoothstep_00B00B00B("smoothstep(00B00B00B");
constexpr const ImmutableString smoothstep_00B00B10B("smoothstep(00B00B10B");
constexpr const ImmutableString smoothstep_00B00B20B("smoothstep(00B00B20B");
constexpr const ImmutableString smoothstep_00B00B30B("smoothstep(00B00B30B");
constexpr const ImmutableString smoothstep_10B10B10B("smoothstep(10B10B10B");
constexpr const ImmutableString smoothstep_20B20B20B("smoothstep(20B20B20B");
constexpr const ImmutableString smoothstep_30B30B30B("smoothstep(30B30B30B");
constexpr const ImmutableString sqrt("sqrt");
constexpr const ImmutableString sqrt_00B("sqrt(00B");
constexpr const ImmutableString sqrt_10B("sqrt(10B");
constexpr const ImmutableString sqrt_20B("sqrt(20B");
constexpr const ImmutableString sqrt_30B("sqrt(30B");
constexpr const ImmutableString step("step");
constexpr const ImmutableString step_00B00B("step(00B00B");
constexpr const ImmutableString step_00B10B("step(00B10B");
constexpr const ImmutableString step_00B20B("step(00B20B");
constexpr const ImmutableString step_00B30B("step(00B30B");
constexpr const ImmutableString step_10B10B("step(10B10B");
constexpr const ImmutableString step_20B20B("step(20B20B");
constexpr const ImmutableString step_30B30B("step(30B30B");
constexpr const ImmutableString tan("tan");
constexpr const ImmutableString tan_00B("tan(00B");
constexpr const ImmutableString tan_10B("tan(10B");
constexpr const ImmutableString tan_20B("tan(20B");
constexpr const ImmutableString tan_30B("tan(30B");
constexpr const ImmutableString tanh("tanh");
constexpr const ImmutableString tanh_00B("tanh(00B");
constexpr const ImmutableString tanh_10B("tanh(10B");
constexpr const ImmutableString tanh_20B("tanh(20B");
constexpr const ImmutableString tanh_30B("tanh(30B");
constexpr const ImmutableString texelFetch("texelFetch");
constexpr const ImmutableString texelFetchExt("texelFetch");
constexpr const ImmutableString texelFetchExt_00O10C00C("texelFetch(00O10C00C");
constexpr const ImmutableString texelFetchExt_00U10C00C("texelFetch(00U10C00C");
constexpr const ImmutableString texelFetchExt_00a10C00C("texelFetch(00a10C00C");
constexpr const ImmutableString texelFetchOffset("texelFetchOffset");
constexpr const ImmutableString texelFetchOffset_00H10C00C10C("texelFetchOffset(00H10C00C10C");
constexpr const ImmutableString texelFetchOffset_00I20C00C20C("texelFetchOffset(00I20C00C20C");
constexpr const ImmutableString texelFetchOffset_00K20C00C10C("texelFetchOffset(00K20C00C10C");
constexpr const ImmutableString texelFetchOffset_00Q10C00C10C("texelFetchOffset(00Q10C00C10C");
constexpr const ImmutableString texelFetchOffset_00R20C00C20C("texelFetchOffset(00R20C00C20C");
constexpr const ImmutableString texelFetchOffset_00T20C00C10C("texelFetchOffset(00T20C00C10C");
constexpr const ImmutableString texelFetchOffset_00W10C00C10C("texelFetchOffset(00W10C00C10C");
constexpr const ImmutableString texelFetchOffset_00X20C00C20C("texelFetchOffset(00X20C00C20C");
constexpr const ImmutableString texelFetchOffset_00Z20C00C10C("texelFetchOffset(00Z20C00C10C");
constexpr const ImmutableString texelFetch_00H10C00C("texelFetch(00H10C00C");
constexpr const ImmutableString texelFetch_00I20C00C("texelFetch(00I20C00C");
constexpr const ImmutableString texelFetch_00K20C00C("texelFetch(00K20C00C");
constexpr const ImmutableString texelFetch_00L10C00C("texelFetch(00L10C00C");
constexpr const ImmutableString texelFetch_00M10C00C("texelFetch(00M10C00C");
constexpr const ImmutableString texelFetch_00O10C00C("texelFetch(00O10C00C");
constexpr const ImmutableString texelFetch_00P20C00C("texelFetch(00P20C00C");
constexpr const ImmutableString texelFetch_00Q10C00C("texelFetch(00Q10C00C");
constexpr const ImmutableString texelFetch_00R20C00C("texelFetch(00R20C00C");
constexpr const ImmutableString texelFetch_00T20C00C("texelFetch(00T20C00C");
constexpr const ImmutableString texelFetch_00U10C00C("texelFetch(00U10C00C");
constexpr const ImmutableString texelFetch_00V20C00C("texelFetch(00V20C00C");
constexpr const ImmutableString texelFetch_00W10C00C("texelFetch(00W10C00C");
constexpr const ImmutableString texelFetch_00X20C00C("texelFetch(00X20C00C");
constexpr const ImmutableString texelFetch_00Z20C00C("texelFetch(00Z20C00C");
constexpr const ImmutableString texelFetch_00a10C00C("texelFetch(00a10C00C");
constexpr const ImmutableString texelFetch_00b20C00C("texelFetch(00b20C00C");
constexpr const ImmutableString texture("texture");
constexpr const ImmutableString texture2D("texture2D");
constexpr const ImmutableString texture2DGradEXT("texture2DGradEXT");
constexpr const ImmutableString texture2DGradEXT_00H10B10B10B("texture2DGradEXT(00H10B10B10B");
constexpr const ImmutableString texture2DLod("texture2DLod");
constexpr const ImmutableString texture2DLodEXT("texture2DLodEXT");
constexpr const ImmutableString texture2DLodEXT_00H10B00B("texture2DLodEXT(00H10B00B");
constexpr const ImmutableString texture2DLod_00H10B00B("texture2DLod(00H10B00B");
constexpr const ImmutableString texture2DProj("texture2DProj");
constexpr const ImmutableString texture2DProjGradEXT("texture2DProjGradEXT");
constexpr const ImmutableString texture2DProjGradEXT_00H20B10B10B(
    "texture2DProjGradEXT(00H20B10B10B");
constexpr const ImmutableString texture2DProjGradEXT_00H30B10B10B(
    "texture2DProjGradEXT(00H30B10B10B");
constexpr const ImmutableString texture2DProjLod("texture2DProjLod");
constexpr const ImmutableString texture2DProjLodEXT("texture2DProjLodEXT");
constexpr const ImmutableString texture2DProjLodEXT_00H20B00B("texture2DProjLodEXT(00H20B00B");
constexpr const ImmutableString texture2DProjLodEXT_00H30B00B("texture2DProjLodEXT(00H30B00B");
constexpr const ImmutableString texture2DProjLod_00H20B00B("texture2DProjLod(00H20B00B");
constexpr const ImmutableString texture2DProjLod_00H30B00B("texture2DProjLod(00H30B00B");
constexpr const ImmutableString texture2DProj_00H20B("texture2DProj(00H20B");
constexpr const ImmutableString texture2DProj_00H20B00B("texture2DProj(00H20B00B");
constexpr const ImmutableString texture2DProj_00H30B("texture2DProj(00H30B");
constexpr const ImmutableString texture2DProj_00H30B00B("texture2DProj(00H30B00B");
constexpr const ImmutableString texture2DProj_00L20B("texture2DProj(00L20B");
constexpr const ImmutableString texture2DProj_00L30B("texture2DProj(00L30B");
constexpr const ImmutableString texture2DRect("texture2DRect");
constexpr const ImmutableString texture2DRectProj("texture2DRectProj");
constexpr const ImmutableString texture2DRectProj_00N20B("texture2DRectProj(00N20B");
constexpr const ImmutableString texture2DRectProj_00N30B("texture2DRectProj(00N30B");
constexpr const ImmutableString texture2DRect_00N10B("texture2DRect(00N10B");
constexpr const ImmutableString texture2D_00H10B("texture2D(00H10B");
constexpr const ImmutableString texture2D_00H10B00B("texture2D(00H10B00B");
constexpr const ImmutableString texture2D_00L10B("texture2D(00L10B");
constexpr const ImmutableString texture3D("texture3D");
constexpr const ImmutableString texture3DLod("texture3DLod");
constexpr const ImmutableString texture3DLod_00I20B00B("texture3DLod(00I20B00B");
constexpr const ImmutableString texture3DProj("texture3DProj");
constexpr const ImmutableString texture3DProjLod("texture3DProjLod");
constexpr const ImmutableString texture3DProjLod_00I30B00B("texture3DProjLod(00I30B00B");
constexpr const ImmutableString texture3DProj_00I30B("texture3DProj(00I30B");
constexpr const ImmutableString texture3DProj_00I30B00B("texture3DProj(00I30B00B");
constexpr const ImmutableString texture3D_00I20B("texture3D(00I20B");
constexpr const ImmutableString texture3D_00I20B00B("texture3D(00I20B00B");
constexpr const ImmutableString textureCube("textureCube");
constexpr const ImmutableString textureCubeGradEXT("textureCubeGradEXT");
constexpr const ImmutableString textureCubeGradEXT_00J20B20B20B("textureCubeGradEXT(00J20B20B20B");
constexpr const ImmutableString textureCubeLod("textureCubeLod");
constexpr const ImmutableString textureCubeLodEXT("textureCubeLodEXT");
constexpr const ImmutableString textureCubeLodEXT_00J20B00B("textureCubeLodEXT(00J20B00B");
constexpr const ImmutableString textureCubeLod_00J20B00B("textureCubeLod(00J20B00B");
constexpr const ImmutableString textureCube_00J20B("textureCube(00J20B");
constexpr const ImmutableString textureCube_00J20B00B("textureCube(00J20B00B");
constexpr const ImmutableString textureGather("textureGather");
constexpr const ImmutableString textureGatherOffset("textureGatherOffset");
constexpr const ImmutableString textureGatherOffset_00H10B10C("textureGatherOffset(00H10B10C");
constexpr const ImmutableString textureGatherOffset_00H10B10C00C(
    "textureGatherOffset(00H10B10C00C");
constexpr const ImmutableString textureGatherOffset_00K20B10C("textureGatherOffset(00K20B10C");
constexpr const ImmutableString textureGatherOffset_00K20B10C00C(
    "textureGatherOffset(00K20B10C00C");
constexpr const ImmutableString textureGatherOffset_00Q10B10C("textureGatherOffset(00Q10B10C");
constexpr const ImmutableString textureGatherOffset_00Q10B10C00C(
    "textureGatherOffset(00Q10B10C00C");
constexpr const ImmutableString textureGatherOffset_00T20B10C("textureGatherOffset(00T20B10C");
constexpr const ImmutableString textureGatherOffset_00T20B10C00C(
    "textureGatherOffset(00T20B10C00C");
constexpr const ImmutableString textureGatherOffset_00W10B10C("textureGatherOffset(00W10B10C");
constexpr const ImmutableString textureGatherOffset_00W10B10C00C(
    "textureGatherOffset(00W10B10C00C");
constexpr const ImmutableString textureGatherOffset_00Z20B10C("textureGatherOffset(00Z20B10C");
constexpr const ImmutableString textureGatherOffset_00Z20B10C00C(
    "textureGatherOffset(00Z20B10C00C");
constexpr const ImmutableString textureGatherOffset_00c10B00B10C(
    "textureGatherOffset(00c10B00B10C");
constexpr const ImmutableString textureGatherOffset_00e20B00B10C(
    "textureGatherOffset(00e20B00B10C");
constexpr const ImmutableString textureGather_00H10B("textureGather(00H10B");
constexpr const ImmutableString textureGather_00H10B00C("textureGather(00H10B00C");
constexpr const ImmutableString textureGather_00J20B("textureGather(00J20B");
constexpr const ImmutableString textureGather_00J20B00C("textureGather(00J20B00C");
constexpr const ImmutableString textureGather_00K20B("textureGather(00K20B");
constexpr const ImmutableString textureGather_00K20B00C("textureGather(00K20B00C");
constexpr const ImmutableString textureGather_00Q10B("textureGather(00Q10B");
constexpr const ImmutableString textureGather_00Q10B00C("textureGather(00Q10B00C");
constexpr const ImmutableString textureGather_00S20B("textureGather(00S20B");
constexpr const ImmutableString textureGather_00S20B00C("textureGather(00S20B00C");
constexpr const ImmutableString textureGather_00T20B("textureGather(00T20B");
constexpr const ImmutableString textureGather_00T20B00C("textureGather(00T20B00C");
constexpr const ImmutableString textureGather_00W10B("textureGather(00W10B");
constexpr const ImmutableString textureGather_00W10B00C("textureGather(00W10B00C");
constexpr const ImmutableString textureGather_00Y20B("textureGather(00Y20B");
constexpr const ImmutableString textureGather_00Y20B00C("textureGather(00Y20B00C");
constexpr const ImmutableString textureGather_00Z20B("textureGather(00Z20B");
constexpr const ImmutableString textureGather_00Z20B00C("textureGather(00Z20B00C");
constexpr const ImmutableString textureGather_00c10B("textureGather(00c10B");
constexpr const ImmutableString textureGather_00c10B00B("textureGather(00c10B00B");
constexpr const ImmutableString textureGather_00d20B("textureGather(00d20B");
constexpr const ImmutableString textureGather_00d20B00B("textureGather(00d20B00B");
constexpr const ImmutableString textureGather_00e20B("textureGather(00e20B");
constexpr const ImmutableString textureGather_00e20B00B("textureGather(00e20B00B");
constexpr const ImmutableString textureGrad("textureGrad");
constexpr const ImmutableString textureGradOffset("textureGradOffset");
constexpr const ImmutableString textureGradOffset_00H10B10B10B10C(
    "textureGradOffset(00H10B10B10B10C");
constexpr const ImmutableString textureGradOffset_00I20B20B20B20C(
    "textureGradOffset(00I20B20B20B20C");
constexpr const ImmutableString textureGradOffset_00K20B10B10B10C(
    "textureGradOffset(00K20B10B10B10C");
constexpr const ImmutableString textureGradOffset_00Q10B10B10B10C(
    "textureGradOffset(00Q10B10B10B10C");
constexpr const ImmutableString textureGradOffset_00R20B20B20B20C(
    "textureGradOffset(00R20B20B20B20C");
constexpr const ImmutableString textureGradOffset_00T20B10B10B10C(
    "textureGradOffset(00T20B10B10B10C");
constexpr const ImmutableString textureGradOffset_00W10B10B10B10C(
    "textureGradOffset(00W10B10B10B10C");
constexpr const ImmutableString textureGradOffset_00X20B20B20B20C(
    "textureGradOffset(00X20B20B20B20C");
constexpr const ImmutableString textureGradOffset_00Z20B10B10B10C(
    "textureGradOffset(00Z20B10B10B10C");
constexpr const ImmutableString textureGradOffset_00c20B10B10B10C(
    "textureGradOffset(00c20B10B10B10C");
constexpr const ImmutableString textureGradOffset_00e30B10B10B10C(
    "textureGradOffset(00e30B10B10B10C");
constexpr const ImmutableString textureGrad_00H10B10B10B("textureGrad(00H10B10B10B");
constexpr const ImmutableString textureGrad_00I20B20B20B("textureGrad(00I20B20B20B");
constexpr const ImmutableString textureGrad_00J20B20B20B("textureGrad(00J20B20B20B");
constexpr const ImmutableString textureGrad_00K20B10B10B("textureGrad(00K20B10B10B");
constexpr const ImmutableString textureGrad_00Q10B10B10B("textureGrad(00Q10B10B10B");
constexpr const ImmutableString textureGrad_00R20B20B20B("textureGrad(00R20B20B20B");
constexpr const ImmutableString textureGrad_00S20B20B20B("textureGrad(00S20B20B20B");
constexpr const ImmutableString textureGrad_00T20B10B10B("textureGrad(00T20B10B10B");
constexpr const ImmutableString textureGrad_00W10B10B10B("textureGrad(00W10B10B10B");
constexpr const ImmutableString textureGrad_00X20B20B20B("textureGrad(00X20B20B20B");
constexpr const ImmutableString textureGrad_00Y20B20B20B("textureGrad(00Y20B20B20B");
constexpr const ImmutableString textureGrad_00Z20B10B10B("textureGrad(00Z20B10B10B");
constexpr const ImmutableString textureGrad_00c20B10B10B("textureGrad(00c20B10B10B");
constexpr const ImmutableString textureGrad_00d30B20B20B("textureGrad(00d30B20B20B");
constexpr const ImmutableString textureGrad_00e30B10B10B("textureGrad(00e30B10B10B");
constexpr const ImmutableString textureLod("textureLod");
constexpr const ImmutableString textureLodOffset("textureLodOffset");
constexpr const ImmutableString textureLodOffset_00H10B00B10C("textureLodOffset(00H10B00B10C");
constexpr const ImmutableString textureLodOffset_00I20B00B20C("textureLodOffset(00I20B00B20C");
constexpr const ImmutableString textureLodOffset_00K20B00B10C("textureLodOffset(00K20B00B10C");
constexpr const ImmutableString textureLodOffset_00Q10B00B10C("textureLodOffset(00Q10B00B10C");
constexpr const ImmutableString textureLodOffset_00R20B00B20C("textureLodOffset(00R20B00B20C");
constexpr const ImmutableString textureLodOffset_00T20B00B10C("textureLodOffset(00T20B00B10C");
constexpr const ImmutableString textureLodOffset_00W10B00B10C("textureLodOffset(00W10B00B10C");
constexpr const ImmutableString textureLodOffset_00X20B00B20C("textureLodOffset(00X20B00B20C");
constexpr const ImmutableString textureLodOffset_00Z20B00B10C("textureLodOffset(00Z20B00B10C");
constexpr const ImmutableString textureLodOffset_00c20B00B10C("textureLodOffset(00c20B00B10C");
constexpr const ImmutableString textureLod_00H10B00B("textureLod(00H10B00B");
constexpr const ImmutableString textureLod_00I20B00B("textureLod(00I20B00B");
constexpr const ImmutableString textureLod_00J20B00B("textureLod(00J20B00B");
constexpr const ImmutableString textureLod_00K20B00B("textureLod(00K20B00B");
constexpr const ImmutableString textureLod_00Q10B00B("textureLod(00Q10B00B");
constexpr const ImmutableString textureLod_00R20B00B("textureLod(00R20B00B");
constexpr const ImmutableString textureLod_00S20B00B("textureLod(00S20B00B");
constexpr const ImmutableString textureLod_00T20B00B("textureLod(00T20B00B");
constexpr const ImmutableString textureLod_00W10B00B("textureLod(00W10B00B");
constexpr const ImmutableString textureLod_00X20B00B("textureLod(00X20B00B");
constexpr const ImmutableString textureLod_00Y20B00B("textureLod(00Y20B00B");
constexpr const ImmutableString textureLod_00Z20B00B("textureLod(00Z20B00B");
constexpr const ImmutableString textureLod_00c20B00B("textureLod(00c20B00B");
constexpr const ImmutableString textureOffset("textureOffset");
constexpr const ImmutableString textureOffset_00H10B10C("textureOffset(00H10B10C");
constexpr const ImmutableString textureOffset_00H10B10C00B("textureOffset(00H10B10C00B");
constexpr const ImmutableString textureOffset_00I20B20C("textureOffset(00I20B20C");
constexpr const ImmutableString textureOffset_00I20B20C00B("textureOffset(00I20B20C00B");
constexpr const ImmutableString textureOffset_00K20B10C("textureOffset(00K20B10C");
constexpr const ImmutableString textureOffset_00K20B10C00B("textureOffset(00K20B10C00B");
constexpr const ImmutableString textureOffset_00Q10B10C("textureOffset(00Q10B10C");
constexpr const ImmutableString textureOffset_00Q10B10C00B("textureOffset(00Q10B10C00B");
constexpr const ImmutableString textureOffset_00R20B20C("textureOffset(00R20B20C");
constexpr const ImmutableString textureOffset_00R20B20C00B("textureOffset(00R20B20C00B");
constexpr const ImmutableString textureOffset_00T20B10C("textureOffset(00T20B10C");
constexpr const ImmutableString textureOffset_00T20B10C00B("textureOffset(00T20B10C00B");
constexpr const ImmutableString textureOffset_00W10B10C("textureOffset(00W10B10C");
constexpr const ImmutableString textureOffset_00W10B10C00B("textureOffset(00W10B10C00B");
constexpr const ImmutableString textureOffset_00X20B20C("textureOffset(00X20B20C");
constexpr const ImmutableString textureOffset_00X20B20C00B("textureOffset(00X20B20C00B");
constexpr const ImmutableString textureOffset_00Z20B10C("textureOffset(00Z20B10C");
constexpr const ImmutableString textureOffset_00Z20B10C00B("textureOffset(00Z20B10C00B");
constexpr const ImmutableString textureOffset_00c20B10C("textureOffset(00c20B10C");
constexpr const ImmutableString textureOffset_00c20B10C00B("textureOffset(00c20B10C00B");
constexpr const ImmutableString textureProj("textureProj");
constexpr const ImmutableString textureProjGrad("textureProjGrad");
constexpr const ImmutableString textureProjGradOffset("textureProjGradOffset");
constexpr const ImmutableString textureProjGradOffset_00H20B10B10B10C(
    "textureProjGradOffset(00H20B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00H30B10B10B10C(
    "textureProjGradOffset(00H30B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00I30B20B20B20C(
    "textureProjGradOffset(00I30B20B20B20C");
constexpr const ImmutableString textureProjGradOffset_00Q20B10B10B10C(
    "textureProjGradOffset(00Q20B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00Q30B10B10B10C(
    "textureProjGradOffset(00Q30B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00R30B20B20B20C(
    "textureProjGradOffset(00R30B20B20B20C");
constexpr const ImmutableString textureProjGradOffset_00W20B10B10B10C(
    "textureProjGradOffset(00W20B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00W30B10B10B10C(
    "textureProjGradOffset(00W30B10B10B10C");
constexpr const ImmutableString textureProjGradOffset_00X30B20B20B20C(
    "textureProjGradOffset(00X30B20B20B20C");
constexpr const ImmutableString textureProjGradOffset_00c30B10B10B10C(
    "textureProjGradOffset(00c30B10B10B10C");
constexpr const ImmutableString textureProjGrad_00H20B10B10B("textureProjGrad(00H20B10B10B");
constexpr const ImmutableString textureProjGrad_00H30B10B10B("textureProjGrad(00H30B10B10B");
constexpr const ImmutableString textureProjGrad_00I30B20B20B("textureProjGrad(00I30B20B20B");
constexpr const ImmutableString textureProjGrad_00Q20B10B10B("textureProjGrad(00Q20B10B10B");
constexpr const ImmutableString textureProjGrad_00Q30B10B10B("textureProjGrad(00Q30B10B10B");
constexpr const ImmutableString textureProjGrad_00R30B20B20B("textureProjGrad(00R30B20B20B");
constexpr const ImmutableString textureProjGrad_00W20B10B10B("textureProjGrad(00W20B10B10B");
constexpr const ImmutableString textureProjGrad_00W30B10B10B("textureProjGrad(00W30B10B10B");
constexpr const ImmutableString textureProjGrad_00X30B20B20B("textureProjGrad(00X30B20B20B");
constexpr const ImmutableString textureProjGrad_00c30B10B10B("textureProjGrad(00c30B10B10B");
constexpr const ImmutableString textureProjLod("textureProjLod");
constexpr const ImmutableString textureProjLodOffset("textureProjLodOffset");
constexpr const ImmutableString textureProjLodOffset_00H20B00B10C(
    "textureProjLodOffset(00H20B00B10C");
constexpr const ImmutableString textureProjLodOffset_00H30B00B10C(
    "textureProjLodOffset(00H30B00B10C");
constexpr const ImmutableString textureProjLodOffset_00I30B00B20C(
    "textureProjLodOffset(00I30B00B20C");
constexpr const ImmutableString textureProjLodOffset_00Q20B00B10C(
    "textureProjLodOffset(00Q20B00B10C");
constexpr const ImmutableString textureProjLodOffset_00Q30B00B10C(
    "textureProjLodOffset(00Q30B00B10C");
constexpr const ImmutableString textureProjLodOffset_00R30B00B20C(
    "textureProjLodOffset(00R30B00B20C");
constexpr const ImmutableString textureProjLodOffset_00W20B00B10C(
    "textureProjLodOffset(00W20B00B10C");
constexpr const ImmutableString textureProjLodOffset_00W30B00B10C(
    "textureProjLodOffset(00W30B00B10C");
constexpr const ImmutableString textureProjLodOffset_00X30B00B20C(
    "textureProjLodOffset(00X30B00B20C");
constexpr const ImmutableString textureProjLodOffset_00c30B00B10C(
    "textureProjLodOffset(00c30B00B10C");
constexpr const ImmutableString textureProjLod_00H20B00B("textureProjLod(00H20B00B");
constexpr const ImmutableString textureProjLod_00H30B00B("textureProjLod(00H30B00B");
constexpr const ImmutableString textureProjLod_00I30B00B("textureProjLod(00I30B00B");
constexpr const ImmutableString textureProjLod_00Q20B00B("textureProjLod(00Q20B00B");
constexpr const ImmutableString textureProjLod_00Q30B00B("textureProjLod(00Q30B00B");
constexpr const ImmutableString textureProjLod_00R30B00B("textureProjLod(00R30B00B");
constexpr const ImmutableString textureProjLod_00W20B00B("textureProjLod(00W20B00B");
constexpr const ImmutableString textureProjLod_00W30B00B("textureProjLod(00W30B00B");
constexpr const ImmutableString textureProjLod_00X30B00B("textureProjLod(00X30B00B");
constexpr const ImmutableString textureProjLod_00c30B00B("textureProjLod(00c30B00B");
constexpr const ImmutableString textureProjOffset("textureProjOffset");
constexpr const ImmutableString textureProjOffset_00H20B10C("textureProjOffset(00H20B10C");
constexpr const ImmutableString textureProjOffset_00H20B10C00B("textureProjOffset(00H20B10C00B");
constexpr const ImmutableString textureProjOffset_00H30B10C("textureProjOffset(00H30B10C");
constexpr const ImmutableString textureProjOffset_00H30B10C00B("textureProjOffset(00H30B10C00B");
constexpr const ImmutableString textureProjOffset_00I30B20C("textureProjOffset(00I30B20C");
constexpr const ImmutableString textureProjOffset_00I30B20C00B("textureProjOffset(00I30B20C00B");
constexpr const ImmutableString textureProjOffset_00Q20B10C("textureProjOffset(00Q20B10C");
constexpr const ImmutableString textureProjOffset_00Q20B10C00B("textureProjOffset(00Q20B10C00B");
constexpr const ImmutableString textureProjOffset_00Q30B10C("textureProjOffset(00Q30B10C");
constexpr const ImmutableString textureProjOffset_00Q30B10C00B("textureProjOffset(00Q30B10C00B");
constexpr const ImmutableString textureProjOffset_00R30B20C("textureProjOffset(00R30B20C");
constexpr const ImmutableString textureProjOffset_00R30B20C00B("textureProjOffset(00R30B20C00B");
constexpr const ImmutableString textureProjOffset_00W20B10C("textureProjOffset(00W20B10C");
constexpr const ImmutableString textureProjOffset_00W20B10C00B("textureProjOffset(00W20B10C00B");
constexpr const ImmutableString textureProjOffset_00W30B10C("textureProjOffset(00W30B10C");
constexpr const ImmutableString textureProjOffset_00W30B10C00B("textureProjOffset(00W30B10C00B");
constexpr const ImmutableString textureProjOffset_00X30B20C("textureProjOffset(00X30B20C");
constexpr const ImmutableString textureProjOffset_00X30B20C00B("textureProjOffset(00X30B20C00B");
constexpr const ImmutableString textureProjOffset_00c30B10C("textureProjOffset(00c30B10C");
constexpr const ImmutableString textureProjOffset_00c30B10C00B("textureProjOffset(00c30B10C00B");
constexpr const ImmutableString textureProj_00H20B("textureProj(00H20B");
constexpr const ImmutableString textureProj_00H20B00B("textureProj(00H20B00B");
constexpr const ImmutableString textureProj_00H30B("textureProj(00H30B");
constexpr const ImmutableString textureProj_00H30B00B("textureProj(00H30B00B");
constexpr const ImmutableString textureProj_00I30B("textureProj(00I30B");
constexpr const ImmutableString textureProj_00I30B00B("textureProj(00I30B00B");
constexpr const ImmutableString textureProj_00L20B("textureProj(00L20B");
constexpr const ImmutableString textureProj_00L20B00B("textureProj(00L20B00B");
constexpr const ImmutableString textureProj_00L30B("textureProj(00L30B");
constexpr const ImmutableString textureProj_00L30B00B("textureProj(00L30B00B");
constexpr const ImmutableString textureProj_00M20B("textureProj(00M20B");
constexpr const ImmutableString textureProj_00M20B00B("textureProj(00M20B00B");
constexpr const ImmutableString textureProj_00M30B("textureProj(00M30B");
constexpr const ImmutableString textureProj_00M30B00B("textureProj(00M30B00B");
constexpr const ImmutableString textureProj_00N20B("textureProj(00N20B");
constexpr const ImmutableString textureProj_00N30B("textureProj(00N30B");
constexpr const ImmutableString textureProj_00Q20B("textureProj(00Q20B");
constexpr const ImmutableString textureProj_00Q20B00B("textureProj(00Q20B00B");
constexpr const ImmutableString textureProj_00Q30B("textureProj(00Q30B");
constexpr const ImmutableString textureProj_00Q30B00B("textureProj(00Q30B00B");
constexpr const ImmutableString textureProj_00R30B("textureProj(00R30B");
constexpr const ImmutableString textureProj_00R30B00B("textureProj(00R30B00B");
constexpr const ImmutableString textureProj_00W20B("textureProj(00W20B");
constexpr const ImmutableString textureProj_00W20B00B("textureProj(00W20B00B");
constexpr const ImmutableString textureProj_00W30B("textureProj(00W30B");
constexpr const ImmutableString textureProj_00W30B00B("textureProj(00W30B00B");
constexpr const ImmutableString textureProj_00X30B("textureProj(00X30B");
constexpr const ImmutableString textureProj_00X30B00B("textureProj(00X30B00B");
constexpr const ImmutableString textureProj_00c30B("textureProj(00c30B");
constexpr const ImmutableString textureProj_00c30B00B("textureProj(00c30B00B");
constexpr const ImmutableString textureSize("textureSize");
constexpr const ImmutableString textureSizeExt("textureSize");
constexpr const ImmutableString textureSizeExt_00O("textureSize(00O");
constexpr const ImmutableString textureSizeExt_00U("textureSize(00U");
constexpr const ImmutableString textureSizeExt_00a("textureSize(00a");
constexpr const ImmutableString textureSize_00H00C("textureSize(00H00C");
constexpr const ImmutableString textureSize_00I00C("textureSize(00I00C");
constexpr const ImmutableString textureSize_00J00C("textureSize(00J00C");
constexpr const ImmutableString textureSize_00K00C("textureSize(00K00C");
constexpr const ImmutableString textureSize_00L00C("textureSize(00L00C");
constexpr const ImmutableString textureSize_00M00C("textureSize(00M00C");
constexpr const ImmutableString textureSize_00O("textureSize(00O");
constexpr const ImmutableString textureSize_00P("textureSize(00P");
constexpr const ImmutableString textureSize_00Q00C("textureSize(00Q00C");
constexpr const ImmutableString textureSize_00R00C("textureSize(00R00C");
constexpr const ImmutableString textureSize_00S00C("textureSize(00S00C");
constexpr const ImmutableString textureSize_00T00C("textureSize(00T00C");
constexpr const ImmutableString textureSize_00U("textureSize(00U");
constexpr const ImmutableString textureSize_00V("textureSize(00V");
constexpr const ImmutableString textureSize_00W00C("textureSize(00W00C");
constexpr const ImmutableString textureSize_00X00C("textureSize(00X00C");
constexpr const ImmutableString textureSize_00Y00C("textureSize(00Y00C");
constexpr const ImmutableString textureSize_00Z00C("textureSize(00Z00C");
constexpr const ImmutableString textureSize_00a("textureSize(00a");
constexpr const ImmutableString textureSize_00b("textureSize(00b");
constexpr const ImmutableString textureSize_00c00C("textureSize(00c00C");
constexpr const ImmutableString textureSize_00d00C("textureSize(00d00C");
constexpr const ImmutableString textureSize_00e00C("textureSize(00e00C");
constexpr const ImmutableString texture_00H10B("texture(00H10B");
constexpr const ImmutableString texture_00H10B00B("texture(00H10B00B");
constexpr const ImmutableString texture_00I20B("texture(00I20B");
constexpr const ImmutableString texture_00I20B00B("texture(00I20B00B");
constexpr const ImmutableString texture_00J20B("texture(00J20B");
constexpr const ImmutableString texture_00J20B00B("texture(00J20B00B");
constexpr const ImmutableString texture_00K20B("texture(00K20B");
constexpr const ImmutableString texture_00K20B00B("texture(00K20B00B");
constexpr const ImmutableString texture_00L10B("texture(00L10B");
constexpr const ImmutableString texture_00L10B00B("texture(00L10B00B");
constexpr const ImmutableString texture_00M10B("texture(00M10B");
constexpr const ImmutableString texture_00M10B00B("texture(00M10B00B");
constexpr const ImmutableString texture_00N10B("texture(00N10B");
constexpr const ImmutableString texture_00Q10B("texture(00Q10B");
constexpr const ImmutableString texture_00Q10B00B("texture(00Q10B00B");
constexpr const ImmutableString texture_00R20B("texture(00R20B");
constexpr const ImmutableString texture_00R20B00B("texture(00R20B00B");
constexpr const ImmutableString texture_00S20B("texture(00S20B");
constexpr const ImmutableString texture_00S20B00B("texture(00S20B00B");
constexpr const ImmutableString texture_00T20B("texture(00T20B");
constexpr const ImmutableString texture_00T20B00B("texture(00T20B00B");
constexpr const ImmutableString texture_00W10B("texture(00W10B");
constexpr const ImmutableString texture_00W10B00B("texture(00W10B00B");
constexpr const ImmutableString texture_00X20B("texture(00X20B");
constexpr const ImmutableString texture_00X20B00B("texture(00X20B00B");
constexpr const ImmutableString texture_00Y20B("texture(00Y20B");
constexpr const ImmutableString texture_00Y20B00B("texture(00Y20B00B");
constexpr const ImmutableString texture_00Z20B("texture(00Z20B");
constexpr const ImmutableString texture_00Z20B00B("texture(00Z20B00B");
constexpr const ImmutableString texture_00c20B("texture(00c20B");
constexpr const ImmutableString texture_00c20B00B("texture(00c20B00B");
constexpr const ImmutableString texture_00d30B("texture(00d30B");
constexpr const ImmutableString texture_00d30B00B("texture(00d30B00B");
constexpr const ImmutableString texture_00e30B("texture(00e30B");
constexpr const ImmutableString transpose("transpose");
constexpr const ImmutableString transpose_50B("transpose(50B");
constexpr const ImmutableString transpose_60B("transpose(60B");
constexpr const ImmutableString transpose_70B("transpose(70B");
constexpr const ImmutableString transpose_90B("transpose(90B");
constexpr const ImmutableString transpose_A0B("transpose(A0B");
constexpr const ImmutableString transpose_B0B("transpose(B0B");
constexpr const ImmutableString transpose_D0B("transpose(D0B");
constexpr const ImmutableString transpose_E0B("transpose(E0B");
constexpr const ImmutableString transpose_F0B("transpose(F0B");
constexpr const ImmutableString trunc("trunc");
constexpr const ImmutableString trunc_00B("trunc(00B");
constexpr const ImmutableString trunc_10B("trunc(10B");
constexpr const ImmutableString trunc_20B("trunc(20B");
constexpr const ImmutableString trunc_30B("trunc(30B");
constexpr const ImmutableString uaddCarry("uaddCarry");
constexpr const ImmutableString uaddCarry_00D00D00D("uaddCarry(00D00D00D");
constexpr const ImmutableString uaddCarry_10D10D10D("uaddCarry(10D10D10D");
constexpr const ImmutableString uaddCarry_20D20D20D("uaddCarry(20D20D20D");
constexpr const ImmutableString uaddCarry_30D30D30D("uaddCarry(30D30D30D");
constexpr const ImmutableString uintBitsToFloat("uintBitsToFloat");
constexpr const ImmutableString uintBitsToFloat_00D("uintBitsToFloat(00D");
constexpr const ImmutableString uintBitsToFloat_10D("uintBitsToFloat(10D");
constexpr const ImmutableString uintBitsToFloat_20D("uintBitsToFloat(20D");
constexpr const ImmutableString uintBitsToFloat_30D("uintBitsToFloat(30D");
constexpr const ImmutableString umulExtended("umulExtended");
constexpr const ImmutableString umulExtended_00D00D00D00D("umulExtended(00D00D00D00D");
constexpr const ImmutableString umulExtended_10D10D10D10D("umulExtended(10D10D10D10D");
constexpr const ImmutableString umulExtended_20D20D20D20D("umulExtended(20D20D20D20D");
constexpr const ImmutableString umulExtended_30D30D30D30D("umulExtended(30D30D30D30D");
constexpr const ImmutableString unpackHalf2x16("unpackHalf2x16");
constexpr const ImmutableString unpackHalf2x16_00D("unpackHalf2x16(00D");
constexpr const ImmutableString unpackSnorm2x16("unpackSnorm2x16");
constexpr const ImmutableString unpackSnorm2x16_00D("unpackSnorm2x16(00D");
constexpr const ImmutableString unpackSnorm4x8("unpackSnorm4x8");
constexpr const ImmutableString unpackSnorm4x8_00D("unpackSnorm4x8(00D");
constexpr const ImmutableString unpackUnorm2x16("unpackUnorm2x16");
constexpr const ImmutableString unpackUnorm2x16_00D("unpackUnorm2x16(00D");
constexpr const ImmutableString unpackUnorm4x8("unpackUnorm4x8");
constexpr const ImmutableString unpackUnorm4x8_00D("unpackUnorm4x8(00D");
constexpr const ImmutableString usubBorrow("usubBorrow");
constexpr const ImmutableString usubBorrow_00D00D00D("usubBorrow(00D00D00D");
constexpr const ImmutableString usubBorrow_10D10D10D("usubBorrow(10D10D10D");
constexpr const ImmutableString usubBorrow_20D20D20D("usubBorrow(20D20D20D");
constexpr const ImmutableString usubBorrow_30D30D30D("usubBorrow(30D30D30D");
constexpr const ImmutableString yuv_2_rgb("yuv_2_rgb");
constexpr const ImmutableString yuv_2_rgb_20B00G("yuv_2_rgb(20B00G");

}  // namespace BuiltInName

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TVariable. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInVariable
{

constexpr const TVariable kVar_gl_BaseInstance(
    BuiltInId::gl_BaseInstance,
    BuiltInName::gl_BaseInstance,
    SymbolType::BuiltIn,
    TExtension::ANGLE_base_vertex_base_instance,
    StaticType::Get<EbtInt, EbpHigh, EvqBaseInstance, 1, 1>());
constexpr const TVariable kVar_gl_BaseVertex(
    BuiltInId::gl_BaseVertex,
    BuiltInName::gl_BaseVertex,
    SymbolType::BuiltIn,
    TExtension::ANGLE_base_vertex_base_instance,
    StaticType::Get<EbtInt, EbpHigh, EvqBaseVertex, 1, 1>());
constexpr const TVariable kVar_gl_DrawID(BuiltInId::gl_DrawID,
                                         BuiltInName::gl_DrawID,
                                         SymbolType::BuiltIn,
                                         TExtension::ANGLE_multi_draw,
                                         StaticType::Get<EbtInt, EbpHigh, EvqDrawID, 1, 1>());
constexpr const TVariable kVar_gl_DrawIDESSL1(BuiltInId::gl_DrawIDESSL1,
                                              BuiltInName::gl_DrawID,
                                              SymbolType::BuiltIn,
                                              TExtension::ANGLE_multi_draw,
                                              StaticType::Get<EbtInt, EbpHigh, EvqDrawID, 1, 1>());
constexpr const TVariable kVar_gl_FragColor(
    BuiltInId::gl_FragColor,
    BuiltInName::gl_FragColor,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragColor, 4, 1>());
constexpr const TVariable kVar_gl_FragCoord(
    BuiltInId::gl_FragCoord,
    BuiltInName::gl_FragCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqFragCoord, 4, 1>());
constexpr const TVariable kVar_gl_FragDepth(
    BuiltInId::gl_FragDepth,
    BuiltInName::gl_FragDepth,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpHigh, EvqFragDepth, 1, 1>());
constexpr const TVariable kVar_gl_FrontFacing(
    BuiltInId::gl_FrontFacing,
    BuiltInName::gl_FrontFacing,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtBool, EbpUndefined, EvqFrontFacing, 1, 1>());
constexpr const TVariable kVar_gl_GlobalInvocationID(
    BuiltInId::gl_GlobalInvocationID,
    BuiltInName::gl_GlobalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_InstanceID(
    BuiltInId::gl_InstanceID,
    BuiltInName::gl_InstanceID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqInstanceID, 1, 1>());
constexpr const TVariable kVar_gl_InvocationID(
    BuiltInId::gl_InvocationID,
    BuiltInName::gl_InvocationID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqInvocationID, 1, 1>());
constexpr const TVariable kVar_gl_LastFragColor(
    BuiltInId::gl_LastFragColor,
    BuiltInName::gl_LastFragColor,
    SymbolType::BuiltIn,
    TExtension::NV_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_LastFragColorARM(
    BuiltInId::gl_LastFragColorARM,
    BuiltInName::gl_LastFragColorARM,
    SymbolType::BuiltIn,
    TExtension::ARM_shader_framebuffer_fetch,
    StaticType::Get<EbtFloat, EbpMedium, EvqLastFragColor, 4, 1>());
constexpr const TVariable kVar_gl_Layer(BuiltInId::gl_Layer,
                                        BuiltInName::gl_Layer,
                                        SymbolType::BuiltIn,
                                        TExtension::EXT_geometry_shader,
                                        StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerGS(BuiltInId::gl_LayerGS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::EXT_geometry_shader,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LayerVS(BuiltInId::gl_LayerVS,
                                          BuiltInName::gl_Layer,
                                          SymbolType::BuiltIn,
                                          TExtension::UNDEFINED,
                                          StaticType::Get<EbtInt, EbpHigh, EvqLayer, 1, 1>());
constexpr const TVariable kVar_gl_LocalInvocationID(
    BuiltInId::gl_LocalInvocationID,
    BuiltInName::gl_LocalInvocationID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationID, 3, 1>());
constexpr const TVariable kVar_gl_LocalInvocationIndex(
    BuiltInId::gl_LocalInvocationIndex,
    BuiltInName::gl_LocalInvocationIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqLocalInvocationIndex, 1, 1>());
constexpr const TVariable kVar_gl_NumWorkGroups(
    BuiltInId::gl_NumWorkGroups,
    BuiltInName::gl_NumWorkGroups,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqNumWorkGroups, 3, 1>());
constexpr const TVariable kVar_gl_PointCoord(
    BuiltInId::gl_PointCoord,
    BuiltInName::gl_PointCoord,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointCoord, 2, 1>());
constexpr const TVariable kVar_gl_PointSize(
    BuiltInId::gl_PointSize,
    BuiltInName::gl_PointSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtFloat, EbpMedium, EvqPointSize, 1, 1>());
constexpr const TVariable kVar_gl_Position(BuiltInId::gl_Position,
                                           BuiltInName::gl_Position,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtFloat, EbpHigh, EvqPosition, 4, 1>());
constexpr const TVariable kVar_gl_PrimitiveID(
    BuiltInId::gl_PrimitiveID,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDGS(
    BuiltInId::gl_PrimitiveIDGS,
    BuiltInName::gl_PrimitiveID,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveID, 1, 1>());
constexpr const TVariable kVar_gl_PrimitiveIDIn(
    BuiltInId::gl_PrimitiveIDIn,
    BuiltInName::gl_PrimitiveIDIn,
    SymbolType::BuiltIn,
    TExtension::EXT_geometry_shader,
    StaticType::Get<EbtInt, EbpHigh, EvqPrimitiveIDIn, 1, 1>());
constexpr const TVariable kVar_gl_SecondaryFragColorEXT(
    BuiltInId::gl_SecondaryFragColorEXT,
    BuiltInName::gl_SecondaryFragColorEXT,
    SymbolType::BuiltIn,
    TExtension::EXT_blend_func_extended,
    StaticType::Get<EbtFloat, EbpMedium, EvqSecondaryFragColorEXT, 4, 1>());
constexpr const TVariable kVar_gl_VertexID(BuiltInId::gl_VertexID,
                                           BuiltInName::gl_VertexID,
                                           SymbolType::BuiltIn,
                                           TExtension::UNDEFINED,
                                           StaticType::Get<EbtInt, EbpHigh, EvqVertexID, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVR(
    BuiltInId::gl_ViewID_OVR,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewID_OVRESSL1(
    BuiltInId::gl_ViewID_OVRESSL1,
    BuiltInName::gl_ViewID_OVR,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewIDOVR, 1, 1>());
constexpr const TVariable kVar_gl_ViewportIndex(
    BuiltInId::gl_ViewportIndex,
    BuiltInName::gl_ViewportIndex,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtInt, EbpHigh, EvqViewportIndex, 1, 1>());
constexpr const TVariable kVar_gl_WorkGroupID(
    BuiltInId::gl_WorkGroupID,
    BuiltInName::gl_WorkGroupID,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupID, 3, 1>());
constexpr const TVariable kVar_gl_WorkGroupSize(
    BuiltInId::gl_WorkGroupSize,
    BuiltInName::gl_WorkGroupSize,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUInt, EbpUndefined, EvqWorkGroupSize, 3, 1>());
constexpr const TVariable kVar_pt00B(BuiltInId::pt00B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00C(BuiltInId::pt00C,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00D(BuiltInId::pt00D,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00E(BuiltInId::pt00E,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00F(
    BuiltInId::pt00F,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtAtomicCounter, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00G(
    BuiltInId::pt00G,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtYuvCscStandardEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00H(
    BuiltInId::pt00H,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00I(
    BuiltInId::pt00I,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00J(
    BuiltInId::pt00J,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00K(
    BuiltInId::pt00K,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00L(
    BuiltInId::pt00L,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternalOES, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00M(
    BuiltInId::pt00M,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerExternal2DY2YEXT, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00N(
    BuiltInId::pt00N,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DRect, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00O(
    BuiltInId::pt00O,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00P(
    BuiltInId::pt00P,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00Q(
    BuiltInId::pt00Q,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00R(
    BuiltInId::pt00R,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00S(
    BuiltInId::pt00S,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00T(
    BuiltInId::pt00T,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00U(
    BuiltInId::pt00U,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00V(
    BuiltInId::pt00V,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtISampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00W(
    BuiltInId::pt00W,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00X(
    BuiltInId::pt00X,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00Y(
    BuiltInId::pt00Y,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSamplerCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00Z(
    BuiltInId::pt00Z,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00a(
    BuiltInId::pt00a,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DMS, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00b(
    BuiltInId::pt00b,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUSampler2DMSArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00c(
    BuiltInId::pt00c,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00d(
    BuiltInId::pt00d,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSamplerCubeShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00e(
    BuiltInId::pt00e,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtSampler2DArrayShadow, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00f(BuiltInId::pt00f,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00g(BuiltInId::pt00g,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtIImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00h(BuiltInId::pt00h,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUImage2D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00i(BuiltInId::pt00i,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00j(BuiltInId::pt00j,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtIImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00k(BuiltInId::pt00k,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUImage3D, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00l(
    BuiltInId::pt00l,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00m(
    BuiltInId::pt00m,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00n(
    BuiltInId::pt00n,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImage2DArray, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00o(
    BuiltInId::pt00o,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00p(
    BuiltInId::pt00p,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtIImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt00q(
    BuiltInId::pt00q,
    BuiltInName::_empty,
    SymbolType::BuiltIn,
    TExtension::UNDEFINED,
    StaticType::Get<EbtUImageCube, EbpUndefined, EvqGlobal, 1, 1>());
constexpr const TVariable kVar_pt10B(BuiltInId::pt10B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt10C(BuiltInId::pt10C,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt10D(BuiltInId::pt10D,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt10E(BuiltInId::pt10E,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>());
constexpr const TVariable kVar_pt20B(BuiltInId::pt20B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt20C(BuiltInId::pt20C,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt20D(BuiltInId::pt20D,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt20E(BuiltInId::pt20E,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>());
constexpr const TVariable kVar_pt30B(BuiltInId::pt30B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt30C(BuiltInId::pt30C,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt30D(BuiltInId::pt30D,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt30E(BuiltInId::pt30E,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>());
constexpr const TVariable kVar_pt50B(BuiltInId::pt50B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>());
constexpr const TVariable kVar_pt60B(BuiltInId::pt60B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>());
constexpr const TVariable kVar_pt70B(BuiltInId::pt70B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>());
constexpr const TVariable kVar_pt90B(BuiltInId::pt90B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>());
constexpr const TVariable kVar_ptA0B(BuiltInId::ptA0B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>());
constexpr const TVariable kVar_ptB0B(BuiltInId::ptB0B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>());
constexpr const TVariable kVar_ptD0B(BuiltInId::ptD0B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>());
constexpr const TVariable kVar_ptE0B(BuiltInId::ptE0B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>());
constexpr const TVariable kVar_ptF0B(BuiltInId::ptF0B,
                                     BuiltInName::_empty,
                                     SymbolType::BuiltIn,
                                     TExtension::UNDEFINED,
                                     StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>());
constexpr const TVariable kVar_pt_io_00C(BuiltInId::pt_io_00C,
                                         BuiltInName::_empty,
                                         SymbolType::BuiltIn,
                                         TExtension::UNDEFINED,
                                         StaticType::Get<EbtInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_io_00D(BuiltInId::pt_io_00D,
                                         BuiltInName::_empty,
                                         SymbolType::BuiltIn,
                                         TExtension::UNDEFINED,
                                         StaticType::Get<EbtUInt, EbpUndefined, EvqInOut, 1, 1>());
constexpr const TVariable kVar_pt_o_00B(BuiltInId::pt_o_00B,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_00C(BuiltInId::pt_o_00C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_00D(BuiltInId::pt_o_00D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 1, 1>());
constexpr const TVariable kVar_pt_o_10B(BuiltInId::pt_o_10B,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_10C(BuiltInId::pt_o_10C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_10D(BuiltInId::pt_o_10D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 2, 1>());
constexpr const TVariable kVar_pt_o_20B(BuiltInId::pt_o_20B,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_20C(BuiltInId::pt_o_20C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_20D(BuiltInId::pt_o_20D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 3, 1>());
constexpr const TVariable kVar_pt_o_30B(BuiltInId::pt_o_30B,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtFloat, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_30C(BuiltInId::pt_o_30C,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtInt, EbpUndefined, EvqOut, 4, 1>());
constexpr const TVariable kVar_pt_o_30D(BuiltInId::pt_o_30D,
                                        BuiltInName::_empty,
                                        SymbolType::BuiltIn,
                                        TExtension::UNDEFINED,
                                        StaticType::Get<EbtUInt, EbpUndefined, EvqOut, 4, 1>());

const TVariable *gl_BaseInstance()
{
    return &kVar_gl_BaseInstance;
}

const TVariable *gl_BaseVertex()
{
    return &kVar_gl_BaseVertex;
}

const TVariable *gl_DrawID()
{
    return &kVar_gl_DrawID;
}

const TVariable *gl_DrawIDESSL1()
{
    return &kVar_gl_DrawIDESSL1;
}

const TVariable *gl_FragColor()
{
    return &kVar_gl_FragColor;
}

const TVariable *gl_FragCoord()
{
    return &kVar_gl_FragCoord;
}

const TVariable *gl_FragDepth()
{
    return &kVar_gl_FragDepth;
}

const TVariable *gl_FrontFacing()
{
    return &kVar_gl_FrontFacing;
}

const TVariable *gl_GlobalInvocationID()
{
    return &kVar_gl_GlobalInvocationID;
}

const TVariable *gl_InstanceID()
{
    return &kVar_gl_InstanceID;
}

const TVariable *gl_InvocationID()
{
    return &kVar_gl_InvocationID;
}

const TVariable *gl_LastFragColor()
{
    return &kVar_gl_LastFragColor;
}

const TVariable *gl_LastFragColorARM()
{
    return &kVar_gl_LastFragColorARM;
}

const TVariable *gl_Layer()
{
    return &kVar_gl_Layer;
}

const TVariable *gl_LayerGS()
{
    return &kVar_gl_LayerGS;
}

const TVariable *gl_LayerVS()
{
    return &kVar_gl_LayerVS;
}

const TVariable *gl_LocalInvocationID()
{
    return &kVar_gl_LocalInvocationID;
}

const TVariable *gl_LocalInvocationIndex()
{
    return &kVar_gl_LocalInvocationIndex;
}

const TVariable *gl_NumWorkGroups()
{
    return &kVar_gl_NumWorkGroups;
}

const TVariable *gl_PointCoord()
{
    return &kVar_gl_PointCoord;
}

const TVariable *gl_PointSize()
{
    return &kVar_gl_PointSize;
}

const TVariable *gl_Position()
{
    return &kVar_gl_Position;
}

const TVariable *gl_PrimitiveID()
{
    return &kVar_gl_PrimitiveID;
}

const TVariable *gl_PrimitiveIDGS()
{
    return &kVar_gl_PrimitiveIDGS;
}

const TVariable *gl_PrimitiveIDIn()
{
    return &kVar_gl_PrimitiveIDIn;
}

const TVariable *gl_SecondaryFragColorEXT()
{
    return &kVar_gl_SecondaryFragColorEXT;
}

const TVariable *gl_VertexID()
{
    return &kVar_gl_VertexID;
}

const TVariable *gl_ViewID_OVR()
{
    return &kVar_gl_ViewID_OVR;
}

const TVariable *gl_ViewID_OVRESSL1()
{
    return &kVar_gl_ViewID_OVRESSL1;
}

const TVariable *gl_ViewportIndex()
{
    return &kVar_gl_ViewportIndex;
}

const TVariable *gl_WorkGroupID()
{
    return &kVar_gl_WorkGroupID;
}

const TVariable *gl_WorkGroupSize()
{
    return &kVar_gl_WorkGroupSize;
}

}  // namespace BuiltInVariable

namespace BuiltInParameters
{

constexpr const TVariable **empty        = nullptr;
constexpr const TVariable *p00B00B00B[3] = {
    &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00B00B00E[3] = {
    &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00E};
constexpr const TVariable *p00B00B10B[3] = {
    &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p00B00B20B[3] = {
    &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00B00B30B[3] = {
    &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00B00C[2]       = {&BuiltInVariable::kVar_pt00B,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00B10B[2]       = {&BuiltInVariable::kVar_pt00B,
                                         &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p00B20B[2]       = {&BuiltInVariable::kVar_pt00B,
                                         &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00B30B[2]       = {&BuiltInVariable::kVar_pt00B,
                                         &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00B_o_00B[2]    = {&BuiltInVariable::kVar_pt00B,
                                            &BuiltInVariable::kVar_pt_o_00B};
constexpr const TVariable *p00B_o_00C[2]    = {&BuiltInVariable::kVar_pt00B,
                                            &BuiltInVariable::kVar_pt_o_00C};
constexpr const TVariable *p00C00C00C00C[4] = {
    &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00C00C_o_00C_o_00C[4] = {
    &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt_o_00C,
    &BuiltInVariable::kVar_pt_o_00C};
constexpr const TVariable *p00D00C00C[3] = {
    &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00D00D00C00C[4] = {
    &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00D00D00D[3] = {
    &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D};
constexpr const TVariable *p00D00D_o_00D_o_00D[4] = {
    &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt_o_00D,
    &BuiltInVariable::kVar_pt_o_00D};
constexpr const TVariable *p00F[1]          = {&BuiltInVariable::kVar_pt00F};
constexpr const TVariable *p00H00C[2]       = {&BuiltInVariable::kVar_pt00H,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00H10B00B10C[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H10B00C[3] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00H10B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H10B10C00B[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00H10B10C00C[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00H10C00C10C[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00H30B00B10C[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H30B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00H30B10C00B[4] = {
    &BuiltInVariable::kVar_pt00H, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00I00C[2]       = {&BuiltInVariable::kVar_pt00I,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00I20B00B20C[4] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00I20B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00I20B20C00B[4] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00I20C00C20C[4] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00I30B00B20C[4] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00I30B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00I30B20C00B[4] = {
    &BuiltInVariable::kVar_pt00I, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00J00C[2]    = {&BuiltInVariable::kVar_pt00J,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00J20B00B[3] = {
    &BuiltInVariable::kVar_pt00J, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00J20B00C[3] = {
    &BuiltInVariable::kVar_pt00J, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00J20B20B20B[4] = {
    &BuiltInVariable::kVar_pt00J, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00K00C[2]       = {&BuiltInVariable::kVar_pt00K,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00K20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00K20B00C[3] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00K20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00K20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00K20B10C00C[4] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00K20C00C10C[4] = {
    &BuiltInVariable::kVar_pt00K, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00L00C[2]    = {&BuiltInVariable::kVar_pt00L,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00L10B00B[3] = {
    &BuiltInVariable::kVar_pt00L, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00L10C00C[3] = {
    &BuiltInVariable::kVar_pt00L, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00L20B00B[3] = {
    &BuiltInVariable::kVar_pt00L, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00L30B00B[3] = {
    &BuiltInVariable::kVar_pt00L, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00M00C[2]    = {&BuiltInVariable::kVar_pt00M,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00M10B00B[3] = {
    &BuiltInVariable::kVar_pt00M, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00M10C00C[3] = {
    &BuiltInVariable::kVar_pt00M, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00M20B00B[3] = {
    &BuiltInVariable::kVar_pt00M, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00M30B00B[3] = {
    &BuiltInVariable::kVar_pt00M, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00N10B[2]    = {&BuiltInVariable::kVar_pt00N,
                                         &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p00N20B[2]    = {&BuiltInVariable::kVar_pt00N,
                                         &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00N30B[2]    = {&BuiltInVariable::kVar_pt00N,
                                         &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00O10C00C[3] = {
    &BuiltInVariable::kVar_pt00O, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00P20C00C[3] = {
    &BuiltInVariable::kVar_pt00P, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Q00C[2]       = {&BuiltInVariable::kVar_pt00Q,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Q10B00B10C[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q10B00C[3] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Q10B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q10B10C00B[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00Q10B10C00C[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Q10C00C10C[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00Q30B00B10C[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q30B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Q30B10C00B[4] = {
    &BuiltInVariable::kVar_pt00Q, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00R00C[2]       = {&BuiltInVariable::kVar_pt00R,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00R20B00B20C[4] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00R20B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00R20B20C00B[4] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00R20C00C20C[4] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00R30B00B20C[4] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00R30B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00R30B20C00B[4] = {
    &BuiltInVariable::kVar_pt00R, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00S00C[2]    = {&BuiltInVariable::kVar_pt00S,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00S20B00B[3] = {
    &BuiltInVariable::kVar_pt00S, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00S20B00C[3] = {
    &BuiltInVariable::kVar_pt00S, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00S20B20B20B[4] = {
    &BuiltInVariable::kVar_pt00S, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00T00C[2]       = {&BuiltInVariable::kVar_pt00T,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00T20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00T20B00C[3] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00T20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00T20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00T20B10C00C[4] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00T20C00C10C[4] = {
    &BuiltInVariable::kVar_pt00T, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00U10C00C[3] = {
    &BuiltInVariable::kVar_pt00U, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00V20C00C[3] = {
    &BuiltInVariable::kVar_pt00V, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00W00C[2]       = {&BuiltInVariable::kVar_pt00W,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00W10B00B10C[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W10B00C[3] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00W10B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W10B10C00B[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00W10B10C00C[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00W10C00C10C[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00W30B00B10C[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W30B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00W30B10C00B[4] = {
    &BuiltInVariable::kVar_pt00W, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00X00C[2]       = {&BuiltInVariable::kVar_pt00X,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00X20B00B20C[4] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00X20B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00X20B20C00B[4] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00X20C00C20C[4] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00X30B00B20C[4] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00X30B20B20B20C[5] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p00X30B20C00B[4] = {
    &BuiltInVariable::kVar_pt00X, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00Y00C[2]    = {&BuiltInVariable::kVar_pt00Y,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Y20B00B[3] = {
    &BuiltInVariable::kVar_pt00Y, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00Y20B00C[3] = {
    &BuiltInVariable::kVar_pt00Y, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Y20B20B20B[4] = {
    &BuiltInVariable::kVar_pt00Y, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00Z00C[2]       = {&BuiltInVariable::kVar_pt00Z,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Z20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Z20B00C[3] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Z20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00Z20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00Z20B10C00C[4] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00Z20C00C10C[4] = {
    &BuiltInVariable::kVar_pt00Z, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00a10C00C[3] = {
    &BuiltInVariable::kVar_pt00a, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00b20C00C[3] = {
    &BuiltInVariable::kVar_pt00b, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00c00C[2]       = {&BuiltInVariable::kVar_pt00c,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00c10B00B10C[4] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00c20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00c20B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00c20B10C00B[4] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00c30B00B10C[4] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00c30B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00c30B10C00B[4] = {
    &BuiltInVariable::kVar_pt00c, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10C,
    &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00d00C[2]    = {&BuiltInVariable::kVar_pt00d,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00d20B00B[3] = {
    &BuiltInVariable::kVar_pt00d, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00d30B00B[3] = {
    &BuiltInVariable::kVar_pt00d, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p00d30B20B20B[4] = {
    &BuiltInVariable::kVar_pt00d, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt20B,
    &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p00e00C[2]       = {&BuiltInVariable::kVar_pt00e,
                                         &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p00e20B00B10C[4] = {
    &BuiltInVariable::kVar_pt00e, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B,
    &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00e30B10B10B10C[5] = {
    &BuiltInVariable::kVar_pt00e, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt10B,
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p00f10C30B[3] = {
    &BuiltInVariable::kVar_pt00f, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00g10C30C[3] = {
    &BuiltInVariable::kVar_pt00g, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p00h10C30D[3] = {
    &BuiltInVariable::kVar_pt00h, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt30D};
constexpr const TVariable *p00i20C30B[3] = {
    &BuiltInVariable::kVar_pt00i, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00j20C30C[3] = {
    &BuiltInVariable::kVar_pt00j, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p00k20C30D[3] = {
    &BuiltInVariable::kVar_pt00k, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30D};
constexpr const TVariable *p00l20C30B[3] = {
    &BuiltInVariable::kVar_pt00l, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00m20C30C[3] = {
    &BuiltInVariable::kVar_pt00m, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p00n20C30D[3] = {
    &BuiltInVariable::kVar_pt00n, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30D};
constexpr const TVariable *p00o20C30B[3] = {
    &BuiltInVariable::kVar_pt00o, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p00p20C30C[3] = {
    &BuiltInVariable::kVar_pt00p, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p00q20C30D[3] = {
    &BuiltInVariable::kVar_pt00q, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt30D};
constexpr const TVariable *p10B00B00B[3] = {
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p10B10B00B[3] = {
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p10B10B10B[3] = {
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p10B10B10E[3] = {
    &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10B, &BuiltInVariable::kVar_pt10E};
constexpr const TVariable *p10B10C[2]    = {&BuiltInVariable::kVar_pt10B,
                                         &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p10B20B[2]    = {&BuiltInVariable::kVar_pt10B,
                                         &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p10B30B[2]    = {&BuiltInVariable::kVar_pt10B,
                                         &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p10B_o_10B[2] = {&BuiltInVariable::kVar_pt10B,
                                            &BuiltInVariable::kVar_pt_o_10B};
constexpr const TVariable *p10B_o_10C[2] = {&BuiltInVariable::kVar_pt10B,
                                            &BuiltInVariable::kVar_pt_o_10C};
constexpr const TVariable *p10C00C00C[3] = {
    &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p10C10C00C00C[4] = {
    &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p10C10C10C[3] = {
    &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt10C};
constexpr const TVariable *p10C10C_o_10C_o_10C[4] = {
    &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt10C, &BuiltInVariable::kVar_pt_o_10C,
    &BuiltInVariable::kVar_pt_o_10C};
constexpr const TVariable *p10D00C00C[3] = {
    &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p10D00D00D[3] = {
    &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D};
constexpr const TVariable *p10D10D00C00C[4] = {
    &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p10D10D10D[3] = {
    &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt10D};
constexpr const TVariable *p10D10D_o_10D_o_10D[4] = {
    &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt10D, &BuiltInVariable::kVar_pt_o_10D,
    &BuiltInVariable::kVar_pt_o_10D};
constexpr const TVariable *p10E10E[2]    = {&BuiltInVariable::kVar_pt10E,
                                         &BuiltInVariable::kVar_pt10E};
constexpr const TVariable *p20B00B00B[3] = {
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p20B00G[2]    = {&BuiltInVariable::kVar_pt20B,
                                         &BuiltInVariable::kVar_pt00G};
constexpr const TVariable *p20B10B[2]    = {&BuiltInVariable::kVar_pt20B,
                                         &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p20B20B00B[3] = {
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p20B20B20B[3] = {
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p20B20B20E[3] = {
    &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20B, &BuiltInVariable::kVar_pt20E};
constexpr const TVariable *p20B20C[2]    = {&BuiltInVariable::kVar_pt20B,
                                         &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p20B30B[2]    = {&BuiltInVariable::kVar_pt20B,
                                         &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p20B_o_20B[2] = {&BuiltInVariable::kVar_pt20B,
                                            &BuiltInVariable::kVar_pt_o_20B};
constexpr const TVariable *p20B_o_20C[2] = {&BuiltInVariable::kVar_pt20B,
                                            &BuiltInVariable::kVar_pt_o_20C};
constexpr const TVariable *p20C00C00C[3] = {
    &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p20C20C00C00C[4] = {
    &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p20C20C20C[3] = {
    &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt20C};
constexpr const TVariable *p20C20C_o_20C_o_20C[4] = {
    &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt20C, &BuiltInVariable::kVar_pt_o_20C,
    &BuiltInVariable::kVar_pt_o_20C};
constexpr const TVariable *p20D00C00C[3] = {
    &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p20D00D00D[3] = {
    &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D};
constexpr const TVariable *p20D20D00C00C[4] = {
    &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p20D20D20D[3] = {
    &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt20D};
constexpr const TVariable *p20D20D_o_20D_o_20D[4] = {
    &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt20D, &BuiltInVariable::kVar_pt_o_20D,
    &BuiltInVariable::kVar_pt_o_20D};
constexpr const TVariable *p20E20E[2]    = {&BuiltInVariable::kVar_pt20E,
                                         &BuiltInVariable::kVar_pt20E};
constexpr const TVariable *p30B00B00B[3] = {
    &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p30B10B[2]    = {&BuiltInVariable::kVar_pt30B,
                                         &BuiltInVariable::kVar_pt10B};
constexpr const TVariable *p30B20B[2]    = {&BuiltInVariable::kVar_pt30B,
                                         &BuiltInVariable::kVar_pt20B};
constexpr const TVariable *p30B30B00B[3] = {
    &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt00B};
constexpr const TVariable *p30B30B30B[3] = {
    &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt30B};
constexpr const TVariable *p30B30B30E[3] = {
    &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt30B, &BuiltInVariable::kVar_pt30E};
constexpr const TVariable *p30B30C[2]    = {&BuiltInVariable::kVar_pt30B,
                                         &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p30B_o_30B[2] = {&BuiltInVariable::kVar_pt30B,
                                            &BuiltInVariable::kVar_pt_o_30B};
constexpr const TVariable *p30B_o_30C[2] = {&BuiltInVariable::kVar_pt30B,
                                            &BuiltInVariable::kVar_pt_o_30C};
constexpr const TVariable *p30C00C00C[3] = {
    &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p30C30C00C00C[4] = {
    &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p30C30C30C[3] = {
    &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt30C};
constexpr const TVariable *p30C30C_o_30C_o_30C[4] = {
    &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt30C, &BuiltInVariable::kVar_pt_o_30C,
    &BuiltInVariable::kVar_pt_o_30C};
constexpr const TVariable *p30D00C00C[3] = {
    &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p30D00D00D[3] = {
    &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D};
constexpr const TVariable *p30D30D00C00C[4] = {
    &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt00C,
    &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p30D30D30D[3] = {
    &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt30D};
constexpr const TVariable *p30D30D_o_30D_o_30D[4] = {
    &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt30D, &BuiltInVariable::kVar_pt_o_30D,
    &BuiltInVariable::kVar_pt_o_30D};
constexpr const TVariable *p30E30E[2]        = {&BuiltInVariable::kVar_pt30E,
                                         &BuiltInVariable::kVar_pt30E};
constexpr const TVariable *p50B50B[2]        = {&BuiltInVariable::kVar_pt50B,
                                         &BuiltInVariable::kVar_pt50B};
constexpr const TVariable *p60B60B[2]        = {&BuiltInVariable::kVar_pt60B,
                                         &BuiltInVariable::kVar_pt60B};
constexpr const TVariable *p70B70B[2]        = {&BuiltInVariable::kVar_pt70B,
                                         &BuiltInVariable::kVar_pt70B};
constexpr const TVariable *p90B90B[2]        = {&BuiltInVariable::kVar_pt90B,
                                         &BuiltInVariable::kVar_pt90B};
constexpr const TVariable *pA0BA0B[2]        = {&BuiltInVariable::kVar_ptA0B,
                                         &BuiltInVariable::kVar_ptA0B};
constexpr const TVariable *pB0BB0B[2]        = {&BuiltInVariable::kVar_ptB0B,
                                         &BuiltInVariable::kVar_ptB0B};
constexpr const TVariable *pD0BD0B[2]        = {&BuiltInVariable::kVar_ptD0B,
                                         &BuiltInVariable::kVar_ptD0B};
constexpr const TVariable *pE0BE0B[2]        = {&BuiltInVariable::kVar_ptE0B,
                                         &BuiltInVariable::kVar_ptE0B};
constexpr const TVariable *pF0BF0B[2]        = {&BuiltInVariable::kVar_ptF0B,
                                         &BuiltInVariable::kVar_ptF0B};
constexpr const TVariable *p_io_00C00C00C[3] = {
    &BuiltInVariable::kVar_pt_io_00C, &BuiltInVariable::kVar_pt00C, &BuiltInVariable::kVar_pt00C};
constexpr const TVariable *p_io_00D00D00D[3] = {
    &BuiltInVariable::kVar_pt_io_00D, &BuiltInVariable::kVar_pt00D, &BuiltInVariable::kVar_pt00D};

}  // namespace BuiltInParameters

namespace UnmangledBuiltIns
{

constexpr const UnmangledBuiltIn ARB_texture_rectangle(TExtension::ARB_texture_rectangle);
constexpr const UnmangledBuiltIn EXT_YUV_target(TExtension::EXT_YUV_target);
constexpr const UnmangledBuiltIn EXT_geometry_shader(TExtension::EXT_geometry_shader);
constexpr const UnmangledBuiltIn EXT_shader_texture_lod(TExtension::EXT_shader_texture_lod);
constexpr const UnmangledBuiltIn OES_standard_derivatives(TExtension::OES_standard_derivatives);
constexpr const UnmangledBuiltIn OES_texture_3D(TExtension::OES_texture_3D);
constexpr const UnmangledBuiltIn UNDEFINED(TExtension::UNDEFINED);

}  // namespace UnmangledBuiltIns

// TODO(oetuaho): Would be nice to make this a class instead of a namespace so that we could friend
// this from TFunction. Now symbol constructors taking an id have to be public even though they're
// not supposed to be accessible from outside of here. http://anglebug.com/2390
namespace BuiltInFunction
{

constexpr const TFunction kFunction_radians_00B(
    BuiltInId::radians_Float1,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_10B(
    BuiltInId::radians_Float2,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_20B(
    BuiltInId::radians_Float3,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_radians_30B(
    BuiltInId::radians_Float4,
    BuiltInName::radians,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRadians,
    true);
constexpr const TFunction kFunction_degrees_00B(
    BuiltInId::degrees_Float1,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_10B(
    BuiltInId::degrees_Float2,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_20B(
    BuiltInId::degrees_Float3,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_degrees_30B(
    BuiltInId::degrees_Float4,
    BuiltInName::degrees,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDegrees,
    true);
constexpr const TFunction kFunction_sin_00B(
    BuiltInId::sin_Float1,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_10B(
    BuiltInId::sin_Float2,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_20B(
    BuiltInId::sin_Float3,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_sin_30B(
    BuiltInId::sin_Float4,
    BuiltInName::sin,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSin,
    true);
constexpr const TFunction kFunction_cos_00B(
    BuiltInId::cos_Float1,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_10B(
    BuiltInId::cos_Float2,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_20B(
    BuiltInId::cos_Float3,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_cos_30B(
    BuiltInId::cos_Float4,
    BuiltInName::cos,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCos,
    true);
constexpr const TFunction kFunction_tan_00B(
    BuiltInId::tan_Float1,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_10B(
    BuiltInId::tan_Float2,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_20B(
    BuiltInId::tan_Float3,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_tan_30B(
    BuiltInId::tan_Float4,
    BuiltInName::tan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTan,
    true);
constexpr const TFunction kFunction_asin_00B(
    BuiltInId::asin_Float1,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_10B(
    BuiltInId::asin_Float2,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_20B(
    BuiltInId::asin_Float3,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_asin_30B(
    BuiltInId::asin_Float4,
    BuiltInName::asin,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsin,
    true);
constexpr const TFunction kFunction_acos_00B(
    BuiltInId::acos_Float1,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_10B(
    BuiltInId::acos_Float2,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_20B(
    BuiltInId::acos_Float3,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_acos_30B(
    BuiltInId::acos_Float4,
    BuiltInName::acos,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcos,
    true);
constexpr const TFunction kFunction_atan_00B00B(
    BuiltInId::atan_Float1_Float1,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_10B10B(
    BuiltInId::atan_Float2_Float2,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_20B20B(
    BuiltInId::atan_Float3_Float3,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_30B30B(
    BuiltInId::atan_Float4_Float4,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_00B(
    BuiltInId::atan_Float1,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_10B(
    BuiltInId::atan_Float2,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_20B(
    BuiltInId::atan_Float3,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_atan_30B(
    BuiltInId::atan_Float4,
    BuiltInName::atan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtan,
    true);
constexpr const TFunction kFunction_sinh_00B(
    BuiltInId::sinh_Float1,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_10B(
    BuiltInId::sinh_Float2,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_20B(
    BuiltInId::sinh_Float3,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_sinh_30B(
    BuiltInId::sinh_Float4,
    BuiltInName::sinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSinh,
    true);
constexpr const TFunction kFunction_cosh_00B(
    BuiltInId::cosh_Float1,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_10B(
    BuiltInId::cosh_Float2,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_20B(
    BuiltInId::cosh_Float3,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_cosh_30B(
    BuiltInId::cosh_Float4,
    BuiltInName::cosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCosh,
    true);
constexpr const TFunction kFunction_tanh_00B(
    BuiltInId::tanh_Float1,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_10B(
    BuiltInId::tanh_Float2,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_20B(
    BuiltInId::tanh_Float3,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_tanh_30B(
    BuiltInId::tanh_Float4,
    BuiltInName::tanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTanh,
    true);
constexpr const TFunction kFunction_asinh_00B(
    BuiltInId::asinh_Float1,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_10B(
    BuiltInId::asinh_Float2,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_20B(
    BuiltInId::asinh_Float3,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_asinh_30B(
    BuiltInId::asinh_Float4,
    BuiltInName::asinh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAsinh,
    true);
constexpr const TFunction kFunction_acosh_00B(
    BuiltInId::acosh_Float1,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_10B(
    BuiltInId::acosh_Float2,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_20B(
    BuiltInId::acosh_Float3,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_acosh_30B(
    BuiltInId::acosh_Float4,
    BuiltInName::acosh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAcosh,
    true);
constexpr const TFunction kFunction_atanh_00B(
    BuiltInId::atanh_Float1,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_10B(
    BuiltInId::atanh_Float2,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_20B(
    BuiltInId::atanh_Float3,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_atanh_30B(
    BuiltInId::atanh_Float4,
    BuiltInName::atanh,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAtanh,
    true);
constexpr const TFunction kFunction_pow_00B00B(
    BuiltInId::pow_Float1_Float1,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_10B10B(
    BuiltInId::pow_Float2_Float2,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_20B20B(
    BuiltInId::pow_Float3_Float3,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_pow_30B30B(
    BuiltInId::pow_Float4_Float4,
    BuiltInName::pow,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpPow,
    true);
constexpr const TFunction kFunction_exp_00B(
    BuiltInId::exp_Float1,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_10B(
    BuiltInId::exp_Float2,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_20B(
    BuiltInId::exp_Float3,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_exp_30B(
    BuiltInId::exp_Float4,
    BuiltInName::exp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp,
    true);
constexpr const TFunction kFunction_log_00B(
    BuiltInId::log_Float1,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_10B(
    BuiltInId::log_Float2,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_20B(
    BuiltInId::log_Float3,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_log_30B(
    BuiltInId::log_Float4,
    BuiltInName::log,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog,
    true);
constexpr const TFunction kFunction_exp2_00B(
    BuiltInId::exp2_Float1,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_10B(
    BuiltInId::exp2_Float2,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_20B(
    BuiltInId::exp2_Float3,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_exp2_30B(
    BuiltInId::exp2_Float4,
    BuiltInName::exp2,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpExp2,
    true);
constexpr const TFunction kFunction_log2_00B(
    BuiltInId::log2_Float1,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_10B(
    BuiltInId::log2_Float2,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_20B(
    BuiltInId::log2_Float3,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_log2_30B(
    BuiltInId::log2_Float4,
    BuiltInName::log2,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLog2,
    true);
constexpr const TFunction kFunction_sqrt_00B(
    BuiltInId::sqrt_Float1,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_10B(
    BuiltInId::sqrt_Float2,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_20B(
    BuiltInId::sqrt_Float3,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_sqrt_30B(
    BuiltInId::sqrt_Float4,
    BuiltInName::sqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_00B(
    BuiltInId::inversesqrt_Float1,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_10B(
    BuiltInId::inversesqrt_Float2,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_20B(
    BuiltInId::inversesqrt_Float3,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_inversesqrt_30B(
    BuiltInId::inversesqrt_Float4,
    BuiltInName::inversesqrt,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpInversesqrt,
    true);
constexpr const TFunction kFunction_abs_00B(
    BuiltInId::abs_Float1,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_10B(
    BuiltInId::abs_Float2,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_20B(
    BuiltInId::abs_Float3,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_30B(
    BuiltInId::abs_Float4,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_00C(
    BuiltInId::abs_Int1,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_10C(
    BuiltInId::abs_Int2,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_20C(
    BuiltInId::abs_Int3,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_abs_30C(
    BuiltInId::abs_Int4,
    BuiltInName::abs,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpAbs,
    true);
constexpr const TFunction kFunction_sign_00B(
    BuiltInId::sign_Float1,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_10B(
    BuiltInId::sign_Float2,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_20B(
    BuiltInId::sign_Float3,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_30B(
    BuiltInId::sign_Float4,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_00C(
    BuiltInId::sign_Int1,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_10C(
    BuiltInId::sign_Int2,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_20C(
    BuiltInId::sign_Int3,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_sign_30C(
    BuiltInId::sign_Int4,
    BuiltInName::sign,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSign,
    true);
constexpr const TFunction kFunction_floor_00B(
    BuiltInId::floor_Float1,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_10B(
    BuiltInId::floor_Float2,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_20B(
    BuiltInId::floor_Float3,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_floor_30B(
    BuiltInId::floor_Float4,
    BuiltInName::floor,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloor,
    true);
constexpr const TFunction kFunction_trunc_00B(
    BuiltInId::trunc_Float1,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_10B(
    BuiltInId::trunc_Float2,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_20B(
    BuiltInId::trunc_Float3,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_trunc_30B(
    BuiltInId::trunc_Float4,
    BuiltInName::trunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpTrunc,
    true);
constexpr const TFunction kFunction_round_00B(
    BuiltInId::round_Float1,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_10B(
    BuiltInId::round_Float2,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_20B(
    BuiltInId::round_Float3,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_round_30B(
    BuiltInId::round_Float4,
    BuiltInName::round,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRound,
    true);
constexpr const TFunction kFunction_roundEven_00B(
    BuiltInId::roundEven_Float1,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_10B(
    BuiltInId::roundEven_Float2,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_20B(
    BuiltInId::roundEven_Float3,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_roundEven_30B(
    BuiltInId::roundEven_Float4,
    BuiltInName::roundEven,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRoundEven,
    true);
constexpr const TFunction kFunction_ceil_00B(
    BuiltInId::ceil_Float1,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_10B(
    BuiltInId::ceil_Float2,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_20B(
    BuiltInId::ceil_Float3,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_ceil_30B(
    BuiltInId::ceil_Float4,
    BuiltInName::ceil,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCeil,
    true);
constexpr const TFunction kFunction_fract_00B(
    BuiltInId::fract_Float1,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_10B(
    BuiltInId::fract_Float2,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_20B(
    BuiltInId::fract_Float3,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_fract_30B(
    BuiltInId::fract_Float4,
    BuiltInName::fract,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFract,
    true);
constexpr const TFunction kFunction_mod_00B00B(
    BuiltInId::mod_Float1_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_10B00B(
    BuiltInId::mod_Float2_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_20B00B(
    BuiltInId::mod_Float3_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_30B00B(
    BuiltInId::mod_Float4_Float1,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_10B10B(
    BuiltInId::mod_Float2_Float2,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_20B20B(
    BuiltInId::mod_Float3_Float3,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_mod_30B30B(
    BuiltInId::mod_Float4_Float4,
    BuiltInName::mod,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMod,
    true);
constexpr const TFunction kFunction_min_00B00B(
    BuiltInId::min_Float1_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10B00B(
    BuiltInId::min_Float2_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20B00B(
    BuiltInId::min_Float3_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30B00B(
    BuiltInId::min_Float4_Float1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10B10B(
    BuiltInId::min_Float2_Float2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20B20B(
    BuiltInId::min_Float3_Float3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30B30B(
    BuiltInId::min_Float4_Float4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_00C00C(
    BuiltInId::min_Int1_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10C10C(
    BuiltInId::min_Int2_Int2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20C20C(
    BuiltInId::min_Int3_Int3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30C30C(
    BuiltInId::min_Int4_Int4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10C00C(
    BuiltInId::min_Int2_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20C00C(
    BuiltInId::min_Int3_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30C00C(
    BuiltInId::min_Int4_Int1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_00D00D(
    BuiltInId::min_UInt1_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10D10D(
    BuiltInId::min_UInt2_UInt2,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20D20D(
    BuiltInId::min_UInt3_UInt3,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30D30D(
    BuiltInId::min_UInt4_UInt4,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_10D00D(
    BuiltInId::min_UInt2_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_20D00D(
    BuiltInId::min_UInt3_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_min_30D00D(
    BuiltInId::min_UInt4_UInt1,
    BuiltInName::min,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMin,
    true);
constexpr const TFunction kFunction_max_00B00B(
    BuiltInId::max_Float1_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10B00B(
    BuiltInId::max_Float2_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20B00B(
    BuiltInId::max_Float3_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30B00B(
    BuiltInId::max_Float4_Float1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B00B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10B10B(
    BuiltInId::max_Float2_Float2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20B20B(
    BuiltInId::max_Float3_Float3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30B30B(
    BuiltInId::max_Float4_Float4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_00C00C(
    BuiltInId::max_Int1_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10C10C(
    BuiltInId::max_Int2_Int2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20C20C(
    BuiltInId::max_Int3_Int3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30C30C(
    BuiltInId::max_Int4_Int4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10C00C(
    BuiltInId::max_Int2_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20C00C(
    BuiltInId::max_Int3_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30C00C(
    BuiltInId::max_Int4_Int1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_00D00D(
    BuiltInId::max_UInt1_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10D10D(
    BuiltInId::max_UInt2_UInt2,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20D20D(
    BuiltInId::max_UInt3_UInt3,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30D30D(
    BuiltInId::max_UInt4_UInt4,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_10D00D(
    BuiltInId::max_UInt2_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_20D00D(
    BuiltInId::max_UInt3_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_max_30D00D(
    BuiltInId::max_UInt4_UInt1,
    BuiltInName::max,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMax,
    true);
constexpr const TFunction kFunction_clamp_00B00B00B(
    BuiltInId::clamp_Float1_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10B00B00B(
    BuiltInId::clamp_Float2_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20B00B00B(
    BuiltInId::clamp_Float3_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30B00B00B(
    BuiltInId::clamp_Float4_Float1_Float1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10B10B10B(
    BuiltInId::clamp_Float2_Float2_Float2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20B20B20B(
    BuiltInId::clamp_Float3_Float3_Float3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30B30B30B(
    BuiltInId::clamp_Float4_Float4_Float4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_00C00C00C(
    BuiltInId::clamp_Int1_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10C00C00C(
    BuiltInId::clamp_Int2_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20C00C00C(
    BuiltInId::clamp_Int3_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30C00C00C(
    BuiltInId::clamp_Int4_Int1_Int1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10C10C10C(
    BuiltInId::clamp_Int2_Int2_Int2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20C20C20C(
    BuiltInId::clamp_Int3_Int3_Int3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30C30C30C(
    BuiltInId::clamp_Int4_Int4_Int4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C30C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_00D00D00D(
    BuiltInId::clamp_UInt1_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10D00D00D(
    BuiltInId::clamp_UInt2_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00D00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20D00D00D(
    BuiltInId::clamp_UInt3_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00D00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30D00D00D(
    BuiltInId::clamp_UInt4_UInt1_UInt1,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_10D10D10D(
    BuiltInId::clamp_UInt2_UInt2_UInt2,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_20D20D20D(
    BuiltInId::clamp_UInt3_UInt3_UInt3,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D20D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_clamp_30D30D30D(
    BuiltInId::clamp_UInt4_UInt4_UInt4,
    BuiltInName::clamp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpClamp,
    true);
constexpr const TFunction kFunction_mix_00B00B00B(
    BuiltInId::mix_Float1_Float1_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_10B10B00B(
    BuiltInId::mix_Float2_Float2_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_20B20B00B(
    BuiltInId::mix_Float3_Float3_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_30B30B00B(
    BuiltInId::mix_Float4_Float4_Float1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_10B10B10B(
    BuiltInId::mix_Float2_Float2_Float2,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_20B20B20B(
    BuiltInId::mix_Float3_Float3_Float3,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_30B30B30B(
    BuiltInId::mix_Float4_Float4_Float4,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_00B00B00E(
    BuiltInId::mix_Float1_Float1_Bool1,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_10B10B10E(
    BuiltInId::mix_Float2_Float2_Bool2,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_20B20B20E(
    BuiltInId::mix_Float3_Float3_Bool3,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_mix_30B30B30E(
    BuiltInId::mix_Float4_Float4_Bool4,
    BuiltInName::mix,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpMix,
    true);
constexpr const TFunction kFunction_step_00B00B(
    BuiltInId::step_Float1_Float1,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_10B10B(
    BuiltInId::step_Float2_Float2,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_20B20B(
    BuiltInId::step_Float3_Float3,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_30B30B(
    BuiltInId::step_Float4_Float4,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_00B10B(
    BuiltInId::step_Float1_Float2,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_00B20B(
    BuiltInId::step_Float1_Float3,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_step_00B30B(
    BuiltInId::step_Float1_Float4,
    BuiltInName::step,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpStep,
    true);
constexpr const TFunction kFunction_smoothstep_00B00B00B(
    BuiltInId::smoothstep_Float1_Float1_Float1,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_10B10B10B(
    BuiltInId::smoothstep_Float2_Float2_Float2,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_20B20B20B(
    BuiltInId::smoothstep_Float3_Float3_Float3,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_30B30B30B(
    BuiltInId::smoothstep_Float4_Float4_Float4,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_00B00B10B(
    BuiltInId::smoothstep_Float1_Float1_Float2,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B10B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_00B00B20B(
    BuiltInId::smoothstep_Float1_Float1_Float3,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B20B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_smoothstep_00B00B30B(
    BuiltInId::smoothstep_Float1_Float1_Float4,
    BuiltInName::smoothstep,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpSmoothstep,
    true);
constexpr const TFunction kFunction_modf_00B00B(
    BuiltInId::modf_Float1_Float1,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B_o_00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_10B10B(
    BuiltInId::modf_Float2_Float2,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B_o_10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_20B20B(
    BuiltInId::modf_Float3_Float3,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B_o_20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_modf_30B30B(
    BuiltInId::modf_Float4_Float4,
    BuiltInName::modf,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B_o_30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpModf,
    false);
constexpr const TFunction kFunction_isnan_00B(
    BuiltInId::isnan_Float1,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_10B(
    BuiltInId::isnan_Float2,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_20B(
    BuiltInId::isnan_Float3,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isnan_30B(
    BuiltInId::isnan_Float4,
    BuiltInName::isnan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsnan,
    true);
constexpr const TFunction kFunction_isinf_00B(
    BuiltInId::isinf_Float1,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_10B(
    BuiltInId::isinf_Float2,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_20B(
    BuiltInId::isinf_Float3,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_isinf_30B(
    BuiltInId::isinf_Float4,
    BuiltInName::isinf,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIsinf,
    true);
constexpr const TFunction kFunction_floatBitsToInt_00B(
    BuiltInId::floatBitsToInt_Float1,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_10B(
    BuiltInId::floatBitsToInt_Float2,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_20B(
    BuiltInId::floatBitsToInt_Float3,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToInt_30B(
    BuiltInId::floatBitsToInt_Float4,
    BuiltInName::floatBitsToInt,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToInt,
    true);
constexpr const TFunction kFunction_floatBitsToUint_00B(
    BuiltInId::floatBitsToUint_Float1,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_10B(
    BuiltInId::floatBitsToUint_Float2,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_20B(
    BuiltInId::floatBitsToUint_Float3,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_floatBitsToUint_30B(
    BuiltInId::floatBitsToUint_Float4,
    BuiltInName::floatBitsToUint,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFloatBitsToUint,
    true);
constexpr const TFunction kFunction_intBitsToFloat_00C(
    BuiltInId::intBitsToFloat_Int1,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_10C(
    BuiltInId::intBitsToFloat_Int2,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_20C(
    BuiltInId::intBitsToFloat_Int3,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_intBitsToFloat_30C(
    BuiltInId::intBitsToFloat_Int4,
    BuiltInName::intBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpIntBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_00D(
    BuiltInId::uintBitsToFloat_UInt1,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_10D(
    BuiltInId::uintBitsToFloat_UInt2,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_20D(
    BuiltInId::uintBitsToFloat_UInt3,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_uintBitsToFloat_30D(
    BuiltInId::uintBitsToFloat_UInt4,
    BuiltInName::uintBitsToFloat,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUintBitsToFloat,
    true);
constexpr const TFunction kFunction_frexp_00B00C(
    BuiltInId::frexp_Float1_Int1,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B_o_00C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_10B10C(
    BuiltInId::frexp_Float2_Int2,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B_o_10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_20B20C(
    BuiltInId::frexp_Float3_Int3,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B_o_20C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_frexp_30B30C(
    BuiltInId::frexp_Float4_Int4,
    BuiltInName::frexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B_o_30C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFrexp,
    false);
constexpr const TFunction kFunction_ldexp_00B00C(
    BuiltInId::ldexp_Float1_Int1,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_10B10C(
    BuiltInId::ldexp_Float2_Int2,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_20B20C(
    BuiltInId::ldexp_Float3_Int3,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_ldexp_30B30C(
    BuiltInId::ldexp_Float4_Int4,
    BuiltInName::ldexp,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLdexp,
    true);
constexpr const TFunction kFunction_packSnorm2x16_10B(
    BuiltInId::packSnorm2x16_Float2,
    BuiltInName::packSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm2x16,
    true);
constexpr const TFunction kFunction_packUnorm2x16_10B(
    BuiltInId::packUnorm2x16_Float2,
    BuiltInName::packUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm2x16,
    true);
constexpr const TFunction kFunction_packHalf2x16_10B(
    BuiltInId::packHalf2x16_Float2,
    BuiltInName::packHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackHalf2x16,
    true);
constexpr const TFunction kFunction_unpackSnorm2x16_00D(
    BuiltInId::unpackSnorm2x16_UInt1,
    BuiltInName::unpackSnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackSnorm2x16,
    true);
constexpr const TFunction kFunction_unpackUnorm2x16_00D(
    BuiltInId::unpackUnorm2x16_UInt1,
    BuiltInName::unpackUnorm2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackUnorm2x16,
    true);
constexpr const TFunction kFunction_unpackHalf2x16_00D(
    BuiltInId::unpackHalf2x16_UInt1,
    BuiltInName::unpackHalf2x16,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUnpackHalf2x16,
    true);
constexpr const TFunction kFunction_packUnorm4x8_30B(
    BuiltInId::packUnorm4x8_Float4,
    BuiltInName::packUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackUnorm4x8,
    true);
constexpr const TFunction kFunction_packSnorm4x8_30B(
    BuiltInId::packSnorm4x8_Float4,
    BuiltInName::packSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpPackSnorm4x8,
    true);
constexpr const TFunction kFunction_unpackUnorm4x8_00D(
    BuiltInId::unpackUnorm4x8_UInt1,
    BuiltInName::unpackUnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackUnorm4x8,
    true);
constexpr const TFunction kFunction_unpackSnorm4x8_00D(
    BuiltInId::unpackSnorm4x8_UInt1,
    BuiltInName::unpackSnorm4x8,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUnpackSnorm4x8,
    true);
constexpr const TFunction kFunction_length_00B(
    BuiltInId::length_Float1,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_10B(
    BuiltInId::length_Float2,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_20B(
    BuiltInId::length_Float3,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_length_30B(
    BuiltInId::length_Float4,
    BuiltInName::length,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpLength,
    true);
constexpr const TFunction kFunction_distance_00B00B(
    BuiltInId::distance_Float1_Float1,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_10B10B(
    BuiltInId::distance_Float2_Float2,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_20B20B(
    BuiltInId::distance_Float3_Float3,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_distance_30B30B(
    BuiltInId::distance_Float4_Float4,
    BuiltInName::distance,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDistance,
    true);
constexpr const TFunction kFunction_dot_00B00B(
    BuiltInId::dot_Float1_Float1,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_10B10B(
    BuiltInId::dot_Float2_Float2,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_20B20B(
    BuiltInId::dot_Float3_Float3,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_dot_30B30B(
    BuiltInId::dot_Float4_Float4,
    BuiltInName::dot,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDot,
    true);
constexpr const TFunction kFunction_cross_20B20B(
    BuiltInId::cross_Float3_Float3,
    BuiltInName::cross,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCross,
    true);
constexpr const TFunction kFunction_normalize_00B(
    BuiltInId::normalize_Float1,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_10B(
    BuiltInId::normalize_Float2,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_20B(
    BuiltInId::normalize_Float3,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_normalize_30B(
    BuiltInId::normalize_Float4,
    BuiltInName::normalize,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNormalize,
    true);
constexpr const TFunction kFunction_faceforward_00B00B00B(
    BuiltInId::faceforward_Float1_Float1_Float1,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_10B10B10B(
    BuiltInId::faceforward_Float2_Float2_Float2,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_20B20B20B(
    BuiltInId::faceforward_Float3_Float3_Float3,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_faceforward_30B30B30B(
    BuiltInId::faceforward_Float4_Float4_Float4,
    BuiltInName::faceforward,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFaceforward,
    true);
constexpr const TFunction kFunction_reflect_00B00B(
    BuiltInId::reflect_Float1_Float1,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_10B10B(
    BuiltInId::reflect_Float2_Float2,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_20B20B(
    BuiltInId::reflect_Float3_Float3,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_reflect_30B30B(
    BuiltInId::reflect_Float4_Float4,
    BuiltInName::reflect,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpReflect,
    true);
constexpr const TFunction kFunction_refract_00B00B00B(
    BuiltInId::refract_Float1_Float1_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B00B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_10B10B00B(
    BuiltInId::refract_Float2_Float2_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_20B20B00B(
    BuiltInId::refract_Float3_Float3_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_refract_30B30B00B(
    BuiltInId::refract_Float4_Float4_Float1,
    BuiltInName::refract,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpRefract,
    true);
constexpr const TFunction kFunction_matrixCompMult_50B50B(
    BuiltInId::matrixCompMult_Float2x2_Float2x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p50B50B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_A0BA0B(
    BuiltInId::matrixCompMult_Float3x3_Float3x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pA0BA0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_F0BF0B(
    BuiltInId::matrixCompMult_Float4x4_Float4x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pF0BF0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_90B90B(
    BuiltInId::matrixCompMult_Float2x3_Float2x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p90B90B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_60B60B(
    BuiltInId::matrixCompMult_Float3x2_Float3x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p60B60B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_D0BD0B(
    BuiltInId::matrixCompMult_Float2x4_Float2x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pD0BD0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_70B70B(
    BuiltInId::matrixCompMult_Float4x2_Float4x2,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::p70B70B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_E0BE0B(
    BuiltInId::matrixCompMult_Float3x4_Float3x4,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pE0BE0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_matrixCompMult_B0BB0B(
    BuiltInId::matrixCompMult_Float4x3_Float4x3,
    BuiltInName::matrixCompMult,
    TExtension::UNDEFINED,
    BuiltInParameters::pB0BB0B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpMulMatrixComponentWise,
    true);
constexpr const TFunction kFunction_outerProduct_10B10B(
    BuiltInId::outerProduct_Float2_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_20B20B(
    BuiltInId::outerProduct_Float3_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_30B30B(
    BuiltInId::outerProduct_Float4_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_20B10B(
    BuiltInId::outerProduct_Float3_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_10B20B(
    BuiltInId::outerProduct_Float2_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_30B10B(
    BuiltInId::outerProduct_Float4_Float2,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_10B30B(
    BuiltInId::outerProduct_Float2_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_30B20B(
    BuiltInId::outerProduct_Float4_Float3,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_outerProduct_20B30B(
    BuiltInId::outerProduct_Float3_Float4,
    BuiltInName::outerProduct,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpOuterProduct,
    true);
constexpr const TFunction kFunction_transpose_50B(
    BuiltInId::transpose_Float2x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p50B50B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_A0B(
    BuiltInId::transpose_Float3x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pA0BA0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_F0B(
    BuiltInId::transpose_Float4x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pF0BF0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_60B(
    BuiltInId::transpose_Float3x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p60B60B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_90B(
    BuiltInId::transpose_Float2x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p90B90B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_70B(
    BuiltInId::transpose_Float4x2,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::p70B70B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_D0B(
    BuiltInId::transpose_Float2x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pD0BD0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 2>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_B0B(
    BuiltInId::transpose_Float4x3,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pB0BB0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 4>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_transpose_E0B(
    BuiltInId::transpose_Float3x4,
    BuiltInName::transpose,
    TExtension::UNDEFINED,
    BuiltInParameters::pE0BE0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 3>(),
    EOpTranspose,
    true);
constexpr const TFunction kFunction_determinant_50B(
    BuiltInId::determinant_Float2x2,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::p50B50B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_A0B(
    BuiltInId::determinant_Float3x3,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pA0BA0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_determinant_F0B(
    BuiltInId::determinant_Float4x4,
    BuiltInName::determinant,
    TExtension::UNDEFINED,
    BuiltInParameters::pF0BF0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDeterminant,
    true);
constexpr const TFunction kFunction_inverse_50B(
    BuiltInId::inverse_Float2x2,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p50B50B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 2>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_A0B(
    BuiltInId::inverse_Float3x3,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pA0BA0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 3>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_inverse_F0B(
    BuiltInId::inverse_Float4x4,
    BuiltInName::inverse,
    TExtension::UNDEFINED,
    BuiltInParameters::pF0BF0B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 4>(),
    EOpInverse,
    true);
constexpr const TFunction kFunction_lessThan_10B10B(
    BuiltInId::lessThan_Float2_Float2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_20B20B(
    BuiltInId::lessThan_Float3_Float3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_30B30B(
    BuiltInId::lessThan_Float4_Float4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_10C10C(
    BuiltInId::lessThan_Int2_Int2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_20C20C(
    BuiltInId::lessThan_Int3_Int3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_30C30C(
    BuiltInId::lessThan_Int4_Int4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_10D10D(
    BuiltInId::lessThan_UInt2_UInt2,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_20D20D(
    BuiltInId::lessThan_UInt3_UInt3,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThan_30D30D(
    BuiltInId::lessThan_UInt4_UInt4,
    BuiltInName::lessThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_10B10B(
    BuiltInId::lessThanEqual_Float2_Float2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_20B20B(
    BuiltInId::lessThanEqual_Float3_Float3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_30B30B(
    BuiltInId::lessThanEqual_Float4_Float4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_10C10C(
    BuiltInId::lessThanEqual_Int2_Int2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_20C20C(
    BuiltInId::lessThanEqual_Int3_Int3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_30C30C(
    BuiltInId::lessThanEqual_Int4_Int4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_10D10D(
    BuiltInId::lessThanEqual_UInt2_UInt2,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_20D20D(
    BuiltInId::lessThanEqual_UInt3_UInt3,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_lessThanEqual_30D30D(
    BuiltInId::lessThanEqual_UInt4_UInt4,
    BuiltInName::lessThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLessThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_10B10B(
    BuiltInId::greaterThan_Float2_Float2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_20B20B(
    BuiltInId::greaterThan_Float3_Float3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_30B30B(
    BuiltInId::greaterThan_Float4_Float4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_10C10C(
    BuiltInId::greaterThan_Int2_Int2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_20C20C(
    BuiltInId::greaterThan_Int3_Int3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_30C30C(
    BuiltInId::greaterThan_Int4_Int4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_10D10D(
    BuiltInId::greaterThan_UInt2_UInt2,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_20D20D(
    BuiltInId::greaterThan_UInt3_UInt3,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThan_30D30D(
    BuiltInId::greaterThan_UInt4_UInt4,
    BuiltInName::greaterThan,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_10B10B(
    BuiltInId::greaterThanEqual_Float2_Float2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_20B20B(
    BuiltInId::greaterThanEqual_Float3_Float3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_30B30B(
    BuiltInId::greaterThanEqual_Float4_Float4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_10C10C(
    BuiltInId::greaterThanEqual_Int2_Int2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_20C20C(
    BuiltInId::greaterThanEqual_Int3_Int3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_30C30C(
    BuiltInId::greaterThanEqual_Int4_Int4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_10D10D(
    BuiltInId::greaterThanEqual_UInt2_UInt2,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_20D20D(
    BuiltInId::greaterThanEqual_UInt3_UInt3,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_greaterThanEqual_30D30D(
    BuiltInId::greaterThanEqual_UInt4_UInt4,
    BuiltInName::greaterThanEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpGreaterThanEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_10B10B(
    BuiltInId::equal_Float2_Float2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_20B20B(
    BuiltInId::equal_Float3_Float3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_30B30B(
    BuiltInId::equal_Float4_Float4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_10C10C(
    BuiltInId::equal_Int2_Int2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_20C20C(
    BuiltInId::equal_Int3_Int3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_30C30C(
    BuiltInId::equal_Int4_Int4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_10D10D(
    BuiltInId::equal_UInt2_UInt2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_20D20D(
    BuiltInId::equal_UInt3_UInt3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_30D30D(
    BuiltInId::equal_UInt4_UInt4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_10E10E(
    BuiltInId::equal_Bool2_Bool2,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p10E10E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_20E20E(
    BuiltInId::equal_Bool3_Bool3,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p20E20E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_equal_30E30E(
    BuiltInId::equal_Bool4_Bool4,
    BuiltInName::equal,
    TExtension::UNDEFINED,
    BuiltInParameters::p30E30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_10B10B(
    BuiltInId::notEqual_Float2_Float2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B10B10B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_20B20B(
    BuiltInId::notEqual_Float3_Float3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B20B20B,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_30B30B(
    BuiltInId::notEqual_Float4_Float4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_10C10C(
    BuiltInId::notEqual_Int2_Int2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_20C20C(
    BuiltInId::notEqual_Int3_Int3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_30C30C(
    BuiltInId::notEqual_Int4_Int4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_10D10D(
    BuiltInId::notEqual_UInt2_UInt2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D10D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_20D20D(
    BuiltInId::notEqual_UInt3_UInt3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_30D30D(
    BuiltInId::notEqual_UInt4_UInt4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D30D,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_10E10E(
    BuiltInId::notEqual_Bool2_Bool2,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p10E10E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_20E20E(
    BuiltInId::notEqual_Bool3_Bool3,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p20E20E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_notEqual_30E30E(
    BuiltInId::notEqual_Bool4_Bool4,
    BuiltInName::notEqual,
    TExtension::UNDEFINED,
    BuiltInParameters::p30E30E,
    2,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpNotEqualComponentWise,
    true);
constexpr const TFunction kFunction_any_10E(
    BuiltInId::any_Bool2,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p10E10E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_20E(
    BuiltInId::any_Bool3,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p20E20E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_any_30E(
    BuiltInId::any_Bool4,
    BuiltInName::any,
    TExtension::UNDEFINED,
    BuiltInParameters::p30E30E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAny,
    true);
constexpr const TFunction kFunction_all_10E(
    BuiltInId::all_Bool2,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p10E10E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_20E(
    BuiltInId::all_Bool3,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p20E20E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_all_30E(
    BuiltInId::all_Bool4,
    BuiltInName::all,
    TExtension::UNDEFINED,
    BuiltInParameters::p30E30E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAll,
    true);
constexpr const TFunction kFunction_notFunc_10E(
    BuiltInId::notFunc_Bool2,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p10E10E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_20E(
    BuiltInId::notFunc_Bool3,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p20E20E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_notFunc_30E(
    BuiltInId::notFunc_Bool4,
    BuiltInName::notFunc,
    TExtension::UNDEFINED,
    BuiltInParameters::p30E30E,
    1,
    StaticType::Get<EbtBool, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpLogicalNotComponentWise,
    true);
constexpr const TFunction kFunction_bitfieldExtract_00C00C00C(
    BuiltInId::bitfieldExtract_Int1_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_10C00C00C(
    BuiltInId::bitfieldExtract_Int2_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_20C00C00C(
    BuiltInId::bitfieldExtract_Int3_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_30C00C00C(
    BuiltInId::bitfieldExtract_Int4_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_00D00C00C(
    BuiltInId::bitfieldExtract_UInt1_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_10D00C00C(
    BuiltInId::bitfieldExtract_UInt2_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_20D00C00C(
    BuiltInId::bitfieldExtract_UInt3_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldExtract_30D00C00C(
    BuiltInId::bitfieldExtract_UInt4_Int1_Int1,
    BuiltInName::bitfieldExtract,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldExtract,
    true);
constexpr const TFunction kFunction_bitfieldInsert_00C00C00C00C(
    BuiltInId::bitfieldInsert_Int1_Int1_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C00C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_10C10C00C00C(
    BuiltInId::bitfieldInsert_Int2_Int2_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C00C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_20C20C00C00C(
    BuiltInId::bitfieldInsert_Int3_Int3_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C00C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_30C30C00C00C(
    BuiltInId::bitfieldInsert_Int4_Int4_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C00C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_00D00D00C00C(
    BuiltInId::bitfieldInsert_UInt1_UInt1_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_10D10D00C00C(
    BuiltInId::bitfieldInsert_UInt2_UInt2_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D00C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_20D20D00C00C(
    BuiltInId::bitfieldInsert_UInt3_UInt3_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D00C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldInsert_30D30D00C00C(
    BuiltInId::bitfieldInsert_UInt4_UInt4_Int1_Int1,
    BuiltInName::bitfieldInsert,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D00C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldInsert,
    true);
constexpr const TFunction kFunction_bitfieldReverse_00C(
    BuiltInId::bitfieldReverse_Int1,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_10C(
    BuiltInId::bitfieldReverse_Int2,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_20C(
    BuiltInId::bitfieldReverse_Int3,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_30C(
    BuiltInId::bitfieldReverse_Int4,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_00D(
    BuiltInId::bitfieldReverse_UInt1,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_10D(
    BuiltInId::bitfieldReverse_UInt2,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_20D(
    BuiltInId::bitfieldReverse_UInt3,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitfieldReverse_30D(
    BuiltInId::bitfieldReverse_UInt4,
    BuiltInName::bitfieldReverse,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitfieldReverse,
    true);
constexpr const TFunction kFunction_bitCount_00C(
    BuiltInId::bitCount_Int1,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_10C(
    BuiltInId::bitCount_Int2,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_20C(
    BuiltInId::bitCount_Int3,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_30C(
    BuiltInId::bitCount_Int4,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_00D(
    BuiltInId::bitCount_UInt1,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_10D(
    BuiltInId::bitCount_UInt2,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_20D(
    BuiltInId::bitCount_UInt3,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_bitCount_30D(
    BuiltInId::bitCount_UInt4,
    BuiltInName::bitCount,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpBitCount,
    true);
constexpr const TFunction kFunction_findLSB_00C(
    BuiltInId::findLSB_Int1,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_10C(
    BuiltInId::findLSB_Int2,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_20C(
    BuiltInId::findLSB_Int3,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_30C(
    BuiltInId::findLSB_Int4,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_00D(
    BuiltInId::findLSB_UInt1,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_10D(
    BuiltInId::findLSB_UInt2,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_20D(
    BuiltInId::findLSB_UInt3,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findLSB_30D(
    BuiltInId::findLSB_UInt4,
    BuiltInName::findLSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindLSB,
    true);
constexpr const TFunction kFunction_findMSB_00C(
    BuiltInId::findMSB_Int1,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_10C(
    BuiltInId::findMSB_Int2,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C10C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_20C(
    BuiltInId::findMSB_Int3,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_30C(
    BuiltInId::findMSB_Int4,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_00D(
    BuiltInId::findMSB_UInt1,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_10D(
    BuiltInId::findMSB_UInt2,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_20D(
    BuiltInId::findMSB_UInt3,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D00C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_findMSB_30D(
    BuiltInId::findMSB_UInt4,
    BuiltInName::findMSB,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D00D00D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFindMSB,
    true);
constexpr const TFunction kFunction_uaddCarry_00D00D00D(
    BuiltInId::uaddCarry_UInt1_UInt1_UInt1,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D_o_00D_o_00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_10D10D10D(
    BuiltInId::uaddCarry_UInt2_UInt2_UInt2,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D_o_10D_o_10D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_20D20D20D(
    BuiltInId::uaddCarry_UInt3_UInt3_UInt3,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_uaddCarry_30D30D30D(
    BuiltInId::uaddCarry_UInt4_UInt4_UInt4,
    BuiltInName::uaddCarry,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D_o_30D_o_30D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUaddCarry,
    false);
constexpr const TFunction kFunction_usubBorrow_00D00D00D(
    BuiltInId::usubBorrow_UInt1_UInt1_UInt1,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D_o_00D_o_00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_10D10D10D(
    BuiltInId::usubBorrow_UInt2_UInt2_UInt2,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D_o_10D_o_10D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_20D20D20D(
    BuiltInId::usubBorrow_UInt3_UInt3_UInt3,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_usubBorrow_30D30D30D(
    BuiltInId::usubBorrow_UInt4_UInt4_UInt4,
    BuiltInName::usubBorrow,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D_o_30D_o_30D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpUsubBorrow,
    false);
constexpr const TFunction kFunction_umulExtended_00D00D00D00D(
    BuiltInId::umulExtended_UInt1_UInt1_UInt1_UInt1,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p00D00D_o_00D_o_00D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_10D10D10D10D(
    BuiltInId::umulExtended_UInt2_UInt2_UInt2_UInt2,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p10D10D_o_10D_o_10D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_20D20D20D20D(
    BuiltInId::umulExtended_UInt3_UInt3_UInt3_UInt3,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p20D20D_o_20D_o_20D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_umulExtended_30D30D30D30D(
    BuiltInId::umulExtended_UInt4_UInt4_UInt4_UInt4,
    BuiltInName::umulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p30D30D_o_30D_o_30D,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpUmulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_00C00C00C00C(
    BuiltInId::imulExtended_Int1_Int1_Int1_Int1,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p00C00C_o_00C_o_00C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_10C10C10C10C(
    BuiltInId::imulExtended_Int2_Int2_Int2_Int2,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p10C10C_o_10C_o_10C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_20C20C20C20C(
    BuiltInId::imulExtended_Int3_Int3_Int3_Int3,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p20C20C_o_20C_o_20C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_imulExtended_30C30C30C30C(
    BuiltInId::imulExtended_Int4_Int4_Int4_Int4,
    BuiltInName::imulExtended,
    TExtension::UNDEFINED,
    BuiltInParameters::p30C30C_o_30C_o_30C,
    4,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpImulExtended,
    false);
constexpr const TFunction kFunction_texture2D_00H10B(
    BuiltInId::texture2D_Sampler2D1_Float2,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00H20B(
    BuiltInId::texture2DProj_Sampler2D1_Float3,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00H30B(
    BuiltInId::texture2DProj_Sampler2D1_Float4,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_00J20B(
    BuiltInId::textureCube_SamplerCube1_Float3,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_00L10B(
    BuiltInId::texture2D_SamplerExternalOES1_Float2,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p00L10B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00L20B(
    BuiltInId::texture2DProj_SamplerExternalOES1_Float3,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00L20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00L30B(
    BuiltInId::texture2DProj_SamplerExternalOES1_Float4,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00L30B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRect_00N10B(
    BuiltInId::texture2DRect_Sampler2DRect1_Float2,
    BuiltInName::texture2DRect,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_00N20B(
    BuiltInId::texture2DRectProj_Sampler2DRect1_Float3,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DRectProj_00N30B(
    BuiltInId::texture2DRectProj_Sampler2DRect1_Float4,
    BuiltInName::texture2DRectProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00N10B(
    BuiltInId::texture_Sampler2DRect1_Float2,
    BuiltInName::texture,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N10B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00N20B(
    BuiltInId::textureProj_Sampler2DRect1_Float3,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N20B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00N30B(
    BuiltInId::textureProj_Sampler2DRect1_Float4,
    BuiltInName::textureProj,
    TExtension::ARB_texture_rectangle,
    BuiltInParameters::p00N30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DGradEXT_00H10B10B10B(
    BuiltInId::texture2DGradEXT_Sampler2D1_Float2_Float2_Float2,
    BuiltInName::texture2DGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H10B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_00H20B10B10B(
    BuiltInId::texture2DProjGradEXT_Sampler2D1_Float3_Float2_Float2,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H20B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjGradEXT_00H30B10B10B(
    BuiltInId::texture2DProjGradEXT_Sampler2D1_Float4_Float2_Float2,
    BuiltInName::texture2DProjGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H30B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeGradEXT_00J20B20B20B(
    BuiltInId::textureCubeGradEXT_SamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureCubeGradEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00J20B20B20B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2D_00H10B00B(
    BuiltInId::texture2D_Sampler2D1_Float2_Float1,
    BuiltInName::texture2D,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00H20B00B(
    BuiltInId::texture2DProj_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProj_00H30B00B(
    BuiltInId::texture2DProj_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCube_00J20B00B(
    BuiltInId::textureCube_SamplerCube1_Float3_Float1,
    BuiltInName::textureCube,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdxExt_00B(
    BuiltInId::dFdxExt_Float1,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_10B(
    BuiltInId::dFdxExt_Float2,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_20B(
    BuiltInId::dFdxExt_Float3,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdxExt_30B(
    BuiltInId::dFdxExt_Float4,
    BuiltInName::dFdxExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdyExt_00B(
    BuiltInId::dFdyExt_Float1,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_10B(
    BuiltInId::dFdyExt_Float2,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_20B(
    BuiltInId::dFdyExt_Float3,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdyExt_30B(
    BuiltInId::dFdyExt_Float4,
    BuiltInName::dFdyExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidthExt_00B(
    BuiltInId::fwidthExt_Float1,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_10B(
    BuiltInId::fwidthExt_Float2,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_20B(
    BuiltInId::fwidthExt_Float3,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidthExt_30B(
    BuiltInId::fwidthExt_Float4,
    BuiltInName::fwidthExt,
    TExtension::OES_standard_derivatives,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_texture2DLodEXT_00H10B00B(
    BuiltInId::texture2DLodEXT_Sampler2D1_Float2_Float1,
    BuiltInName::texture2DLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_00H20B00B(
    BuiltInId::texture2DProjLodEXT_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLodEXT_00H30B00B(
    BuiltInId::texture2DProjLodEXT_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProjLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00H30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLodEXT_00J20B00B(
    BuiltInId::textureCubeLodEXT_SamplerCube1_Float3_Float1,
    BuiltInName::textureCubeLodEXT,
    TExtension::EXT_shader_texture_lod,
    BuiltInParameters::p00J20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3D_00I20B(
    BuiltInId::texture3D_Sampler3D1_Float3,
    BuiltInName::texture3D,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I20B20B20B20C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3D_00I20B00B(
    BuiltInId::texture3D_Sampler3D1_Float3_Float1,
    BuiltInName::texture3D,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I20B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProj_00I30B(
    BuiltInId::texture3DProj_Sampler3D1_Float4,
    BuiltInName::texture3DProj,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I30B20C00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProj_00I30B00B(
    BuiltInId::texture3DProj_Sampler3D1_Float4_Float1,
    BuiltInName::texture3DProj,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I30B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DLod_00I20B00B(
    BuiltInId::texture3DLod_Sampler3D1_Float3_Float1,
    BuiltInName::texture3DLod,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I20B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture3DProjLod_00I30B00B(
    BuiltInId::texture3DProjLod_Sampler3D1_Float4_Float1,
    BuiltInName::texture3DProjLod,
    TExtension::OES_texture_3D,
    BuiltInParameters::p00I30B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DLod_00H10B00B(
    BuiltInId::texture2DLod_Sampler2D1_Float2_Float1,
    BuiltInName::texture2DLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_00H20B00B(
    BuiltInId::texture2DProjLod_Sampler2D1_Float3_Float1,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture2DProjLod_00H30B00B(
    BuiltInId::texture2DProjLod_Sampler2D1_Float4_Float1,
    BuiltInName::texture2DProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureCubeLod_00J20B00B(
    BuiltInId::textureCubeLod_SamplerCube1_Float3_Float1,
    BuiltInName::textureCubeLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00H10B(
    BuiltInId::texture_Sampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Q10B(
    BuiltInId::texture_ISampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00W10B(
    BuiltInId::texture_USampler2D1_Float2,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00I20B(
    BuiltInId::texture_Sampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B20B20B20C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00R20B(
    BuiltInId::texture_ISampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B20C00B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00X20B(
    BuiltInId::texture_USampler3D1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B00B20C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00J20B(
    BuiltInId::texture_SamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00S20B(
    BuiltInId::texture_ISamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Y20B(
    BuiltInId::texture_USamplerCube1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B00B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00K20B(
    BuiltInId::texture_Sampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00T20B(
    BuiltInId::texture_ISampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00B10C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Z20B(
    BuiltInId::texture_USampler2DArray1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00B10C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00H20B(
    BuiltInId::textureProj_Sampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00Q20B(
    BuiltInId::textureProj_ISampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B10C00B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00W20B(
    BuiltInId::textureProj_USampler2D1_Float3,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B00B10C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00H30B(
    BuiltInId::textureProj_Sampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00Q30B(
    BuiltInId::textureProj_ISampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B00B10C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00W30B(
    BuiltInId::textureProj_USampler2D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B10C00B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00I30B(
    BuiltInId::textureProj_Sampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B20C00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00R30B(
    BuiltInId::textureProj_ISampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B20C00B,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00X30B(
    BuiltInId::textureProj_USampler3D1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B20B20B20C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00H10B00B(
    BuiltInId::textureLod_Sampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00Q10B00B(
    BuiltInId::textureLod_ISampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00W10B00B(
    BuiltInId::textureLod_USampler2D1_Float2_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00I20B00B(
    BuiltInId::textureLod_Sampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00R20B00B(
    BuiltInId::textureLod_ISampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B00B20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00X20B00B(
    BuiltInId::textureLod_USampler3D1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B00B20C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00J20B00B(
    BuiltInId::textureLod_SamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00S20B00B(
    BuiltInId::textureLod_ISamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00Y20B00B(
    BuiltInId::textureLod_USamplerCube1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00K20B00B(
    BuiltInId::textureLod_Sampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00T20B00B(
    BuiltInId::textureLod_ISampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00Z20B00B(
    BuiltInId::textureLod_USampler2DArray1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00c20B(
    BuiltInId::texture_Sampler2DShadow1_Float3,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00d30B(
    BuiltInId::texture_SamplerCubeShadow1_Float4,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d30B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00e30B(
    BuiltInId::texture_Sampler2DArrayShadow1_Float4,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e30B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00c30B(
    BuiltInId::textureProj_Sampler2DShadow1_Float4,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B10B10B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLod_00c20B00B(
    BuiltInId::textureLod_Sampler2DShadow1_Float3_Float1,
    BuiltInName::textureLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00H00C(
    BuiltInId::textureSize_Sampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00Q00C(
    BuiltInId::textureSize_ISampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00W00C(
    BuiltInId::textureSize_USampler2D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00I00C(
    BuiltInId::textureSize_Sampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00R00C(
    BuiltInId::textureSize_ISampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00X00C(
    BuiltInId::textureSize_USampler3D1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00J00C(
    BuiltInId::textureSize_SamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00S00C(
    BuiltInId::textureSize_ISamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00Y00C(
    BuiltInId::textureSize_USamplerCube1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00K00C(
    BuiltInId::textureSize_Sampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00T00C(
    BuiltInId::textureSize_ISampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00Z00C(
    BuiltInId::textureSize_USampler2DArray1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00c00C(
    BuiltInId::textureSize_Sampler2DShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00d00C(
    BuiltInId::textureSize_SamplerCubeShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00e00C(
    BuiltInId::textureSize_Sampler2DArrayShadow1_Int1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00H20B00B(
    BuiltInId::textureProjLod_Sampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00Q20B00B(
    BuiltInId::textureProjLod_ISampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00W20B00B(
    BuiltInId::textureProjLod_USampler2D1_Float3_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00H30B00B(
    BuiltInId::textureProjLod_Sampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00Q30B00B(
    BuiltInId::textureProjLod_ISampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00W30B00B(
    BuiltInId::textureProjLod_USampler2D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00I30B00B(
    BuiltInId::textureProjLod_Sampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00R30B00B(
    BuiltInId::textureProjLod_ISampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B00B20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00X30B00B(
    BuiltInId::textureProjLod_USampler3D1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B00B20C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLod_00c30B00B(
    BuiltInId::textureProjLod_Sampler2DShadow1_Float4_Float1,
    BuiltInName::textureProjLod,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00H10C00C(
    BuiltInId::texelFetch_Sampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10C00C10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00Q10C00C(
    BuiltInId::texelFetch_ISampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10C00C10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00W10C00C(
    BuiltInId::texelFetch_USampler2D1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10C00C10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00I20C00C(
    BuiltInId::texelFetch_Sampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20C00C20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00R20C00C(
    BuiltInId::texelFetch_ISampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20C00C20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00X20C00C(
    BuiltInId::texelFetch_USampler3D1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20C00C20C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00K20C00C(
    BuiltInId::texelFetch_Sampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20C00C10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00T20C00C(
    BuiltInId::texelFetch_ISampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20C00C10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00Z20C00C(
    BuiltInId::texelFetch_USampler2DArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20C00C10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00H10B10B10B(
    BuiltInId::textureGrad_Sampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00Q10B10B10B(
    BuiltInId::textureGrad_ISampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10B10B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00W10B10B10B(
    BuiltInId::textureGrad_USampler2D1_Float2_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10B10B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00I20B20B20B(
    BuiltInId::textureGrad_Sampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B20B20B20C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00R20B20B20B(
    BuiltInId::textureGrad_ISampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B20B20B20C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00X20B20B20B(
    BuiltInId::textureGrad_USampler3D1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B20B20B20C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00J20B20B20B(
    BuiltInId::textureGrad_SamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B20B20B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00S20B20B20B(
    BuiltInId::textureGrad_ISamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B20B20B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00Y20B20B20B(
    BuiltInId::textureGrad_USamplerCube1_Float3_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B20B20B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00c20B10B10B(
    BuiltInId::textureGrad_Sampler2DShadow1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00d30B20B20B(
    BuiltInId::textureGrad_SamplerCubeShadow1_Float4_Float3_Float3,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d30B20B20B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00K20B10B10B(
    BuiltInId::textureGrad_Sampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00T20B10B10B(
    BuiltInId::textureGrad_ISampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10B10B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00Z20B10B10B(
    BuiltInId::textureGrad_USampler2DArray1_Float3_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10B10B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGrad_00e30B10B10B(
    BuiltInId::textureGrad_Sampler2DArrayShadow1_Float4_Float2_Float2,
    BuiltInName::textureGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e30B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00H20B10B10B(
    BuiltInId::textureProjGrad_Sampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00Q20B10B10B(
    BuiltInId::textureProjGrad_ISampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B10B10B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00W20B10B10B(
    BuiltInId::textureProjGrad_USampler2D1_Float3_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B10B10B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00H30B10B10B(
    BuiltInId::textureProjGrad_Sampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00Q30B10B10B(
    BuiltInId::textureProjGrad_ISampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B10B10B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00W30B10B10B(
    BuiltInId::textureProjGrad_USampler2D1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B10B10B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00I30B20B20B(
    BuiltInId::textureProjGrad_Sampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B20B20B20C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00R30B20B20B(
    BuiltInId::textureProjGrad_ISampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B20B20B20C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00X30B20B20B(
    BuiltInId::textureProjGrad_USampler3D1_Float4_Float3_Float3,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B20B20B20C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGrad_00c30B10B10B(
    BuiltInId::textureProjGrad_Sampler2DShadow1_Float4_Float2_Float2,
    BuiltInName::textureProjGrad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B10B10B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00O(
    BuiltInId::textureSize_Sampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00O10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00U(
    BuiltInId::textureSize_ISampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00U10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00a(
    BuiltInId::textureSize_USampler2DMS1,
    BuiltInName::textureSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00a10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_00O(
    BuiltInId::textureSizeExt_Sampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00O10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_00U(
    BuiltInId::textureSizeExt_ISampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00U10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSizeExt_00a(
    BuiltInId::textureSizeExt_USampler2DMS1,
    BuiltInName::textureSizeExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00a10C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00P(
    BuiltInId::textureSize_Sampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00P20C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00V(
    BuiltInId::textureSize_ISampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00V20C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00b(
    BuiltInId::textureSize_USampler2DMSArray1,
    BuiltInName::textureSize,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00b20C00C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00H10B10C(
    BuiltInId::textureOffset_Sampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00Q10B10C(
    BuiltInId::textureOffset_ISampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00W10B10C(
    BuiltInId::textureOffset_USampler2D1_Float2_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00I20B20C(
    BuiltInId::textureOffset_Sampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B20C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00R20B20C(
    BuiltInId::textureOffset_ISampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B20C00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00X20B20C(
    BuiltInId::textureOffset_USampler3D1_Float3_Int3,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B20C00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00c20B10C(
    BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00K20B10C(
    BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00T20B10C(
    BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00Z20B10C(
    BuiltInId::textureOffset_USampler2DArray1_Float3_Int2,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00H20B10C(
    BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00Q20B10C(
    BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B10C00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00W20B10C(
    BuiltInId::textureProjOffset_USampler2D1_Float3_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B10C00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00H30B10C(
    BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00Q30B10C(
    BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B10C00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00W30B10C(
    BuiltInId::textureProjOffset_USampler2D1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B10C00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00I30B20C(
    BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B20C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00R30B20C(
    BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B20C00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00X30B20C(
    BuiltInId::textureProjOffset_USampler3D1_Float4_Int3,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B20C00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00c30B10C(
    BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00H10B00B10C(
    BuiltInId::textureLodOffset_Sampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00Q10B00B10C(
    BuiltInId::textureLodOffset_ISampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B00B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00W10B00B10C(
    BuiltInId::textureLodOffset_USampler2D1_Float2_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00I20B00B20C(
    BuiltInId::textureLodOffset_Sampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B00B20C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00R20B00B20C(
    BuiltInId::textureLodOffset_ISampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B00B20C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00X20B00B20C(
    BuiltInId::textureLodOffset_USampler3D1_Float3_Float1_Int3,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B00B20C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00c20B00B10C(
    BuiltInId::textureLodOffset_Sampler2DShadow1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00K20B00B10C(
    BuiltInId::textureLodOffset_Sampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00T20B00B10C(
    BuiltInId::textureLodOffset_ISampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureLodOffset_00Z20B00B10C(
    BuiltInId::textureLodOffset_USampler2DArray1_Float3_Float1_Int2,
    BuiltInName::textureLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00H20B00B10C(
    BuiltInId::textureProjLodOffset_Sampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00Q20B00B10C(
    BuiltInId::textureProjLodOffset_ISampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B00B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00W20B00B10C(
    BuiltInId::textureProjLodOffset_USampler2D1_Float3_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B00B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00H30B00B10C(
    BuiltInId::textureProjLodOffset_Sampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00Q30B00B10C(
    BuiltInId::textureProjLodOffset_ISampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B00B10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00W30B00B10C(
    BuiltInId::textureProjLodOffset_USampler2D1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B00B10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00I30B00B20C(
    BuiltInId::textureProjLodOffset_Sampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B00B20C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00R30B00B20C(
    BuiltInId::textureProjLodOffset_ISampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B00B20C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00X30B00B20C(
    BuiltInId::textureProjLodOffset_USampler3D1_Float4_Float1_Int3,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B00B20C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjLodOffset_00c30B00B10C(
    BuiltInId::textureProjLodOffset_Sampler2DShadow1_Float4_Float1_Int2,
    BuiltInName::textureProjLodOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00H10C00C10C(
    BuiltInId::texelFetchOffset_Sampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10C00C10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00Q10C00C10C(
    BuiltInId::texelFetchOffset_ISampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10C00C10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00W10C00C10C(
    BuiltInId::texelFetchOffset_USampler2D1_Int2_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10C00C10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00I20C00C20C(
    BuiltInId::texelFetchOffset_Sampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20C00C20C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00R20C00C20C(
    BuiltInId::texelFetchOffset_ISampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20C00C20C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00X20C00C20C(
    BuiltInId::texelFetchOffset_USampler3D1_Int3_Int1_Int3,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20C00C20C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00K20C00C10C(
    BuiltInId::texelFetchOffset_Sampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20C00C10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00T20C00C10C(
    BuiltInId::texelFetchOffset_ISampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20C00C10C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchOffset_00Z20C00C10C(
    BuiltInId::texelFetchOffset_USampler2DArray1_Int3_Int1_Int2,
    BuiltInName::texelFetchOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20C00C10C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00H10B10B10B10C(
    BuiltInId::textureGradOffset_Sampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00Q10B10B10B10C(
    BuiltInId::textureGradOffset_ISampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10B10B10C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00W10B10B10B10C(
    BuiltInId::textureGradOffset_USampler2D1_Float2_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10B10B10C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00I20B20B20B20C(
    BuiltInId::textureGradOffset_Sampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B20B20B20C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00R20B20B20B20C(
    BuiltInId::textureGradOffset_ISampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B20B20B20C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00X20B20B20B20C(
    BuiltInId::textureGradOffset_USampler3D1_Float3_Float3_Float3_Int3,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B20B20B20C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00c20B10B10B10C(
    BuiltInId::textureGradOffset_Sampler2DShadow1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00K20B10B10B10C(
    BuiltInId::textureGradOffset_Sampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00T20B10B10B10C(
    BuiltInId::textureGradOffset_ISampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10B10B10C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00Z20B10B10B10C(
    BuiltInId::textureGradOffset_USampler2DArray1_Float3_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10B10B10C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGradOffset_00e30B10B10B10C(
    BuiltInId::textureGradOffset_Sampler2DArrayShadow1_Float4_Float2_Float2_Int2,
    BuiltInName::textureGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e30B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00H20B10B10B10C(
    BuiltInId::textureProjGradOffset_Sampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00Q20B10B10B10C(
    BuiltInId::textureProjGradOffset_ISampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B10B10B10C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00W20B10B10B10C(
    BuiltInId::textureProjGradOffset_USampler2D1_Float3_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B10B10B10C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00H30B10B10B10C(
    BuiltInId::textureProjGradOffset_Sampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00Q30B10B10B10C(
    BuiltInId::textureProjGradOffset_ISampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B10B10B10C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00W30B10B10B10C(
    BuiltInId::textureProjGradOffset_USampler2D1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B10B10B10C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00I30B20B20B20C(
    BuiltInId::textureProjGradOffset_Sampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B20B20B20C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00R30B20B20B20C(
    BuiltInId::textureProjGradOffset_ISampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B20B20B20C,
    5,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00X30B20B20B20C(
    BuiltInId::textureProjGradOffset_USampler3D1_Float4_Float3_Float3_Int3,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B20B20B20C,
    5,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjGradOffset_00c30B10B10B10C(
    BuiltInId::textureProjGradOffset_Sampler2DShadow1_Float4_Float2_Float2_Int2,
    BuiltInName::textureProjGradOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B10B10B10C,
    5,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00H10B10C00B(
    BuiltInId::textureOffset_Sampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00Q10B10C00B(
    BuiltInId::textureOffset_ISampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00W10B10C00B(
    BuiltInId::textureOffset_USampler2D1_Float2_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00I20B20C00B(
    BuiltInId::textureOffset_Sampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B20C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00R20B20C00B(
    BuiltInId::textureOffset_ISampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B20C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00X20B20C00B(
    BuiltInId::textureOffset_USampler3D1_Float3_Int3_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B20C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00c20B10C00B(
    BuiltInId::textureOffset_Sampler2DShadow1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00K20B10C00B(
    BuiltInId::textureOffset_Sampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00T20B10C00B(
    BuiltInId::textureOffset_ISampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureOffset_00Z20B10C00B(
    BuiltInId::textureOffset_USampler2DArray1_Float3_Int2_Float1,
    BuiltInName::textureOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00H20B10C00B(
    BuiltInId::textureProjOffset_Sampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00Q20B10C00B(
    BuiltInId::textureProjOffset_ISampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B10C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00W20B10C00B(
    BuiltInId::textureProjOffset_USampler2D1_Float3_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B10C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00H30B10C00B(
    BuiltInId::textureProjOffset_Sampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00Q30B10C00B(
    BuiltInId::textureProjOffset_ISampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B10C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00W30B10C00B(
    BuiltInId::textureProjOffset_USampler2D1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B10C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00I30B20C00B(
    BuiltInId::textureProjOffset_Sampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B20C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00R30B20C00B(
    BuiltInId::textureProjOffset_ISampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B20C00B,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00X30B20C00B(
    BuiltInId::textureProjOffset_USampler3D1_Float4_Int3_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B20C00B,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProjOffset_00c30B10C00B(
    BuiltInId::textureProjOffset_Sampler2DShadow1_Float4_Int2_Float1,
    BuiltInName::textureProjOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B10C00B,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00L10B(
    BuiltInId::texture_SamplerExternalOES1_Float2,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L10B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00L20B(
    BuiltInId::textureProj_SamplerExternalOES1_Float3,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00L30B(
    BuiltInId::textureProj_SamplerExternalOES1_Float4,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L30B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00L00C(
    BuiltInId::textureSize_SamplerExternalOES1_Int1,
    BuiltInName::textureSize,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00L10C00C(
    BuiltInId::texelFetch_SamplerExternalOES1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L10C00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00M10B(
    BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M10B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00M20B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00M30B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M30B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_rgb_2_yuv_20B00G(
    BuiltInId::rgb_2_yuv_Float3_YuvCscStandardEXT1,
    BuiltInName::rgb_2_yuv,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p20B00G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_yuv_2_rgb_20B00G(
    BuiltInId::yuv_2_rgb_Float3_YuvCscStandardEXT1,
    BuiltInName::yuv_2_rgb,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p20B00G,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureSize_00M00C(
    BuiltInId::textureSize_SamplerExternal2DY2YEXT1_Int1,
    BuiltInName::textureSize,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00M10C00C(
    BuiltInId::texelFetch_SamplerExternal2DY2YEXT1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M10C00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00H10B00B(
    BuiltInId::texture_Sampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Q10B00B(
    BuiltInId::texture_ISampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00W10B00B(
    BuiltInId::texture_USampler2D1_Float2_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00I20B00B(
    BuiltInId::texture_Sampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I20B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00R20B00B(
    BuiltInId::texture_ISampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R20B00B20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00X20B00B(
    BuiltInId::texture_USampler3D1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X20B00B20C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00J20B00B(
    BuiltInId::texture_SamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00S20B00B(
    BuiltInId::texture_ISamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B00B,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Y20B00B(
    BuiltInId::texture_USamplerCube1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B00B,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00K20B00B(
    BuiltInId::texture_Sampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00T20B00B(
    BuiltInId::texture_ISampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00Z20B00B(
    BuiltInId::texture_USampler2DArray1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00H20B00B(
    BuiltInId::textureProj_Sampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00Q20B00B(
    BuiltInId::textureProj_ISampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q20B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00W20B00B(
    BuiltInId::textureProj_USampler2D1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W20B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00H30B00B(
    BuiltInId::textureProj_Sampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00Q30B00B(
    BuiltInId::textureProj_ISampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q30B00B10C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00W30B00B(
    BuiltInId::textureProj_USampler2D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W30B00B10C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00I30B00B(
    BuiltInId::textureProj_Sampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00I30B00B20C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00R30B00B(
    BuiltInId::textureProj_ISampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00R30B00B20C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00X30B00B(
    BuiltInId::textureProj_USampler3D1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00X30B00B20C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00c20B00B(
    BuiltInId::texture_Sampler2DShadow1_Float3_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00d30B00B(
    BuiltInId::texture_SamplerCubeShadow1_Float4_Float1,
    BuiltInName::texture,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d30B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00c30B00B(
    BuiltInId::textureProj_Sampler2DShadow1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c30B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00L10B00B(
    BuiltInId::texture_SamplerExternalOES1_Float2_Float1,
    BuiltInName::texture,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L10B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00L20B00B(
    BuiltInId::textureProj_SamplerExternalOES1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00L30B00B(
    BuiltInId::textureProj_SamplerExternalOES1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::OES_EGL_image_external_essl3,
    BuiltInParameters::p00L30B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texture_00M10B00B(
    BuiltInId::texture_SamplerExternal2DY2YEXT1_Float2_Float1,
    BuiltInName::texture,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M10B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00M20B00B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float3_Float1,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureProj_00M30B00B(
    BuiltInId::textureProj_SamplerExternal2DY2YEXT1_Float4_Float1,
    BuiltInName::textureProj,
    TExtension::EXT_YUV_target,
    BuiltInParameters::p00M30B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00O10C00C(
    BuiltInId::texelFetch_Sampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00O10C00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00U10C00C(
    BuiltInId::texelFetch_ISampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00U10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00a10C00C(
    BuiltInId::texelFetch_USampler2DMS1_Int2_Int1,
    BuiltInName::texelFetch,
    TExtension::UNDEFINED,
    BuiltInParameters::p00a10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_00O10C00C(
    BuiltInId::texelFetchExt_Sampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00O10C00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_00U10C00C(
    BuiltInId::texelFetchExt_ISampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00U10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetchExt_00a10C00C(
    BuiltInId::texelFetchExt_USampler2DMS1_Int2_Int1,
    BuiltInName::texelFetchExt,
    TExtension::ANGLE_texture_multisample,
    BuiltInParameters::p00a10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00P20C00C(
    BuiltInId::texelFetch_Sampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00P20C00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00V20C00C(
    BuiltInId::texelFetch_ISampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00V20C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_texelFetch_00b20C00C(
    BuiltInId::texelFetch_USampler2DMSArray1_Int3_Int1,
    BuiltInName::texelFetch,
    TExtension::OES_texture_storage_multisample_2d_array,
    BuiltInParameters::p00b20C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00H10B(
    BuiltInId::textureGather_Sampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Q10B(
    BuiltInId::textureGather_ISampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00W10B(
    BuiltInId::textureGather_USampler2D1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00H10B00C(
    BuiltInId::textureGather_Sampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Q10B00C(
    BuiltInId::textureGather_ISampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00W10B00C(
    BuiltInId::textureGather_USampler2D1_Float2_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00K20B(
    BuiltInId::textureGather_Sampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00T20B(
    BuiltInId::textureGather_ISampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00B10C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Z20B(
    BuiltInId::textureGather_USampler2DArray1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00B10C,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00K20B00C(
    BuiltInId::textureGather_Sampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00T20B00C(
    BuiltInId::textureGather_ISampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Z20B00C(
    BuiltInId::textureGather_USampler2DArray1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00J20B(
    BuiltInId::textureGather_SamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00S20B(
    BuiltInId::textureGather_ISamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Y20B(
    BuiltInId::textureGather_USamplerCube1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B00B,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00J20B00C(
    BuiltInId::textureGather_SamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00J20B00C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00S20B00C(
    BuiltInId::textureGather_ISamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00S20B00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00Y20B00C(
    BuiltInId::textureGather_USamplerCube1_Float3_Int1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Y20B00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00c10B(
    BuiltInId::textureGather_Sampler2DShadow1_Float2,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c10B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00c10B00B(
    BuiltInId::textureGather_Sampler2DShadow1_Float2_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c10B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00e20B(
    BuiltInId::textureGather_Sampler2DArrayShadow1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e20B00B10C,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00e20B00B(
    BuiltInId::textureGather_Sampler2DArrayShadow1_Float3_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e20B00B10C,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00d20B(
    BuiltInId::textureGather_SamplerCubeShadow1_Float3,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d20B00B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGather_00d20B00B(
    BuiltInId::textureGather_SamplerCubeShadow1_Float3_Float1,
    BuiltInName::textureGather,
    TExtension::UNDEFINED,
    BuiltInParameters::p00d20B00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00H10B10C(
    BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00Q10B10C(
    BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00W10B10C(
    BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00H10B10C00C(
    BuiltInId::textureGatherOffset_Sampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00H10B10C00C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00Q10B10C00C(
    BuiltInId::textureGatherOffset_ISampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Q10B10C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00W10B10C00C(
    BuiltInId::textureGatherOffset_USampler2D1_Float2_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00W10B10C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00K20B10C(
    BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10C00B,
    3,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00T20B10C(
    BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00Z20B10C(
    BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10C00C,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00K20B10C00C(
    BuiltInId::textureGatherOffset_Sampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00K20B10C00C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00T20B10C00C(
    BuiltInId::textureGatherOffset_ISampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00T20B10C00C,
    4,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00Z20B10C00C(
    BuiltInId::textureGatherOffset_USampler2DArray1_Float3_Int2_Int1,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00Z20B10C00C,
    4,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00c10B00B10C(
    BuiltInId::textureGatherOffset_Sampler2DShadow1_Float2_Float1_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00c10B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_textureGatherOffset_00e20B00B10C(
    BuiltInId::textureGatherOffset_Sampler2DArrayShadow1_Float3_Float1_Int2,
    BuiltInName::textureGatherOffset,
    TExtension::UNDEFINED,
    BuiltInParameters::p00e20B00B10C,
    4,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_dFdx_00B(
    BuiltInId::dFdx_Float1,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_10B(
    BuiltInId::dFdx_Float2,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_20B(
    BuiltInId::dFdx_Float3,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdx_30B(
    BuiltInId::dFdx_Float4,
    BuiltInName::dFdx,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdx,
    false);
constexpr const TFunction kFunction_dFdy_00B(
    BuiltInId::dFdy_Float1,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_10B(
    BuiltInId::dFdy_Float2,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_20B(
    BuiltInId::dFdy_Float3,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_dFdy_30B(
    BuiltInId::dFdy_Float4,
    BuiltInName::dFdy,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpDFdy,
    false);
constexpr const TFunction kFunction_fwidth_00B(
    BuiltInId::fwidth_Float1,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p00B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_10B(
    BuiltInId::fwidth_Float2,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p10B30B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_20B(
    BuiltInId::fwidth_Float3,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p20B10B,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_fwidth_30B(
    BuiltInId::fwidth_Float4,
    BuiltInName::fwidth,
    TExtension::UNDEFINED,
    BuiltInParameters::p30B30B30E,
    1,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpFwidth,
    false);
constexpr const TFunction kFunction_atomicCounter_00F(
    BuiltInId::atomicCounter_AtomicCounter1,
    BuiltInName::atomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::p00F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterIncrement_00F(
    BuiltInId::atomicCounterIncrement_AtomicCounter1,
    BuiltInName::atomicCounterIncrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p00F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicCounterDecrement_00F(
    BuiltInId::atomicCounterDecrement_AtomicCounter1,
    BuiltInName::atomicCounterDecrement,
    TExtension::UNDEFINED,
    BuiltInParameters::p00F,
    1,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_atomicAdd_00D00D(
    BuiltInId::atomicAdd_UInt1_UInt1,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAdd,
    false);
constexpr const TFunction kFunction_atomicAdd_00C00C(
    BuiltInId::atomicAdd_Int1_Int1,
    BuiltInName::atomicAdd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAdd,
    false);
constexpr const TFunction kFunction_atomicMin_00D00D(
    BuiltInId::atomicMin_UInt1_UInt1,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMin,
    false);
constexpr const TFunction kFunction_atomicMin_00C00C(
    BuiltInId::atomicMin_Int1_Int1,
    BuiltInName::atomicMin,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMin,
    false);
constexpr const TFunction kFunction_atomicMax_00D00D(
    BuiltInId::atomicMax_UInt1_UInt1,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMax,
    false);
constexpr const TFunction kFunction_atomicMax_00C00C(
    BuiltInId::atomicMax_Int1_Int1,
    BuiltInName::atomicMax,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicMax,
    false);
constexpr const TFunction kFunction_atomicAnd_00D00D(
    BuiltInId::atomicAnd_UInt1_UInt1,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAnd,
    false);
constexpr const TFunction kFunction_atomicAnd_00C00C(
    BuiltInId::atomicAnd_Int1_Int1,
    BuiltInName::atomicAnd,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicAnd,
    false);
constexpr const TFunction kFunction_atomicOr_00D00D(
    BuiltInId::atomicOr_UInt1_UInt1,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicOr,
    false);
constexpr const TFunction kFunction_atomicOr_00C00C(
    BuiltInId::atomicOr_Int1_Int1,
    BuiltInName::atomicOr,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicOr,
    false);
constexpr const TFunction kFunction_atomicXor_00D00D(
    BuiltInId::atomicXor_UInt1_UInt1,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicXor,
    false);
constexpr const TFunction kFunction_atomicXor_00C00C(
    BuiltInId::atomicXor_Int1_Int1,
    BuiltInName::atomicXor,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicXor,
    false);
constexpr const TFunction kFunction_atomicExchange_00D00D(
    BuiltInId::atomicExchange_UInt1_UInt1,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicExchange,
    false);
constexpr const TFunction kFunction_atomicExchange_00C00C(
    BuiltInId::atomicExchange_Int1_Int1,
    BuiltInName::atomicExchange,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicExchange,
    false);
constexpr const TFunction kFunction_atomicCompSwap_00D00D00D(
    BuiltInId::atomicCompSwap_UInt1_UInt1_UInt1,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00D00D00D,
    3,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicCompSwap,
    false);
constexpr const TFunction kFunction_atomicCompSwap_00C00C00C(
    BuiltInId::atomicCompSwap_Int1_Int1_Int1,
    BuiltInName::atomicCompSwap,
    TExtension::UNDEFINED,
    BuiltInParameters::p_io_00C00C00C,
    3,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpAtomicCompSwap,
    false);
constexpr const TFunction kFunction_imageSize_00f(
    BuiltInId::imageSize_Image2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00f10C30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00g(
    BuiltInId::imageSize_IImage2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00g10C30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00h(
    BuiltInId::imageSize_UImage2D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00h10C30D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00i(
    BuiltInId::imageSize_Image3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00i20C30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00j(
    BuiltInId::imageSize_IImage3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00j20C30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00k(
    BuiltInId::imageSize_UImage3D1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00k20C30D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00l(
    BuiltInId::imageSize_Image2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00l20C30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00m(
    BuiltInId::imageSize_IImage2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00m20C30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00n(
    BuiltInId::imageSize_UImage2DArray1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00n20C30D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 3, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00o(
    BuiltInId::imageSize_ImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00o20C30B,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00p(
    BuiltInId::imageSize_IImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00p20C30C,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageSize_00q(
    BuiltInId::imageSize_UImageCube1,
    BuiltInName::imageSize,
    TExtension::UNDEFINED,
    BuiltInParameters::p00q20C30D,
    1,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 2, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00f10C(
    BuiltInId::imageLoad_Image2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00f10C30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00g10C(
    BuiltInId::imageLoad_IImage2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00g10C30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00h10C(
    BuiltInId::imageLoad_UImage2D1_Int2,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00h10C30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00i20C(
    BuiltInId::imageLoad_Image3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00i20C30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00j20C(
    BuiltInId::imageLoad_IImage3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00j20C30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00k20C(
    BuiltInId::imageLoad_UImage3D1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00k20C30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00l20C(
    BuiltInId::imageLoad_Image2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00l20C30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00m20C(
    BuiltInId::imageLoad_IImage2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00m20C30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00n20C(
    BuiltInId::imageLoad_UImage2DArray1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00n20C30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00o20C(
    BuiltInId::imageLoad_ImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00o20C30B,
    2,
    StaticType::Get<EbtFloat, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00p20C(
    BuiltInId::imageLoad_IImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00p20C30C,
    2,
    StaticType::Get<EbtInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageLoad_00q20C(
    BuiltInId::imageLoad_UImageCube1_Int3,
    BuiltInName::imageLoad,
    TExtension::UNDEFINED,
    BuiltInParameters::p00q20C30D,
    2,
    StaticType::Get<EbtUInt, EbpUndefined, EvqGlobal, 4, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00f10C30B(
    BuiltInId::imageStore_Image2D1_Int2_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00f10C30B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00g10C30C(
    BuiltInId::imageStore_IImage2D1_Int2_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00g10C30C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00h10C30D(
    BuiltInId::imageStore_UImage2D1_Int2_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00h10C30D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00i20C30B(
    BuiltInId::imageStore_Image3D1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00i20C30B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00j20C30C(
    BuiltInId::imageStore_IImage3D1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00j20C30C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00k20C30D(
    BuiltInId::imageStore_UImage3D1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00k20C30D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00l20C30B(
    BuiltInId::imageStore_Image2DArray1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00l20C30B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00m20C30C(
    BuiltInId::imageStore_IImage2DArray1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00m20C30C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00n20C30D(
    BuiltInId::imageStore_UImage2DArray1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00n20C30D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00o20C30B(
    BuiltInId::imageStore_ImageCube1_Int3_Float4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00o20C30B,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00p20C30C(
    BuiltInId::imageStore_IImageCube1_Int3_Int4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00p20C30C,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_imageStore_00q20C30D(
    BuiltInId::imageStore_UImageCube1_Int3_UInt4,
    BuiltInName::imageStore,
    TExtension::UNDEFINED,
    BuiltInParameters::p00q20C30D,
    3,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpCallBuiltInFunction,
    false);
constexpr const TFunction kFunction_memoryBarrier_(
    BuiltInId::memoryBarrier,
    BuiltInName::memoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierAtomicCounter_(
    BuiltInId::memoryBarrierAtomicCounter,
    BuiltInName::memoryBarrierAtomicCounter,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierAtomicCounter,
    false);
constexpr const TFunction kFunction_memoryBarrierBuffer_(
    BuiltInId::memoryBarrierBuffer,
    BuiltInName::memoryBarrierBuffer,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierBuffer,
    false);
constexpr const TFunction kFunction_memoryBarrierImage_(
    BuiltInId::memoryBarrierImage,
    BuiltInName::memoryBarrierImage,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierImage,
    false);
constexpr const TFunction kFunction_barrier_(
    BuiltInId::barrier,
    BuiltInName::barrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpBarrier,
    false);
constexpr const TFunction kFunction_memoryBarrierShared_(
    BuiltInId::memoryBarrierShared,
    BuiltInName::memoryBarrierShared,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpMemoryBarrierShared,
    false);
constexpr const TFunction kFunction_groupMemoryBarrier_(
    BuiltInId::groupMemoryBarrier,
    BuiltInName::groupMemoryBarrier,
    TExtension::UNDEFINED,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpGroupMemoryBarrier,
    false);
constexpr const TFunction kFunction_EmitVertex_(
    BuiltInId::EmitVertex,
    BuiltInName::EmitVertex,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEmitVertex,
    false);
constexpr const TFunction kFunction_EndPrimitive_(
    BuiltInId::EndPrimitive,
    BuiltInName::EndPrimitive,
    TExtension::EXT_geometry_shader,
    BuiltInParameters::empty,
    0,
    StaticType::Get<EbtVoid, EbpUndefined, EvqGlobal, 1, 1>(),
    EOpEndPrimitive,
    false);

}  // namespace BuiltInFunction

void TSymbolTable::initializeBuiltInVariables(sh::GLenum shaderType,
                                              ShShaderSpec spec,
                                              const ShBuiltInResources &resources)
{
    const TSourceLoc zeroSourceLoc             = {0, 0, 0, 0};
    TFieldList *fields_gl_DepthRangeParameters = new TFieldList();
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::near, zeroSourceLoc,
                   SymbolType::BuiltIn));
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::far, zeroSourceLoc,
                   SymbolType::BuiltIn));
    fields_gl_DepthRangeParameters->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqGlobal, 1, 1), BuiltInName::diff, zeroSourceLoc,
                   SymbolType::BuiltIn));
    TStructure *gl_DepthRangeParameters =
        new TStructure(BuiltInId::gl_DepthRangeParameters, BuiltInName::gl_DepthRangeParameters,
                       TExtension::UNDEFINED, fields_gl_DepthRangeParameters);
    mVar_gl_DepthRangeParameters = gl_DepthRangeParameters;
    TType *type_gl_DepthRange    = new TType(gl_DepthRangeParameters, false);
    type_gl_DepthRange->setQualifier(EvqUniform);
    type_gl_DepthRange->realize();
    mVar_gl_DepthRange =
        new TVariable(BuiltInId::gl_DepthRange, BuiltInName::gl_DepthRange, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, type_gl_DepthRange);
    mVar_gl_MaxVertexAttribs = new TVariable(
        BuiltInId::gl_MaxVertexAttribs, BuiltInName::gl_MaxVertexAttribs, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAttribs);
        mVar_gl_MaxVertexAttribs->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexUniformVectors =
        new TVariable(BuiltInId::gl_MaxVertexUniformVectors,
                      BuiltInName::gl_MaxVertexUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexUniformVectors);
        mVar_gl_MaxVertexUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxVertexTextureImageUnits,
                      BuiltInName::gl_MaxVertexTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexTextureImageUnits);
        mVar_gl_MaxVertexTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxCombinedTextureImageUnits,
                      BuiltInName::gl_MaxCombinedTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedTextureImageUnits);
        mVar_gl_MaxCombinedTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxTextureImageUnits, BuiltInName::gl_MaxTextureImageUnits,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxTextureImageUnits);
        mVar_gl_MaxTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentUniformVectors =
        new TVariable(BuiltInId::gl_MaxFragmentUniformVectors,
                      BuiltInName::gl_MaxFragmentUniformVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentUniformVectors);
        mVar_gl_MaxFragmentUniformVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVaryingVectors = new TVariable(
        BuiltInId::gl_MaxVaryingVectors, BuiltInName::gl_MaxVaryingVectors, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVaryingVectors);
        mVar_gl_MaxVaryingVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDrawBuffers = new TVariable(
        BuiltInId::gl_MaxDrawBuffers, BuiltInName::gl_MaxDrawBuffers, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDrawBuffers);
        mVar_gl_MaxDrawBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxDualSourceDrawBuffersEXT = new TVariable(
        BuiltInId::gl_MaxDualSourceDrawBuffersEXT, BuiltInName::gl_MaxDualSourceDrawBuffersEXT,
        SymbolType::BuiltIn, TExtension::EXT_blend_func_extended,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxDualSourceDrawBuffers);
        mVar_gl_MaxDualSourceDrawBuffersEXT->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexOutputVectors =
        new TVariable(BuiltInId::gl_MaxVertexOutputVectors, BuiltInName::gl_MaxVertexOutputVectors,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexOutputVectors);
        mVar_gl_MaxVertexOutputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentInputVectors =
        new TVariable(BuiltInId::gl_MaxFragmentInputVectors,
                      BuiltInName::gl_MaxFragmentInputVectors, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentInputVectors);
        mVar_gl_MaxFragmentInputVectors->shareConstPointer(unionArray);
    }
    mVar_gl_MinProgramTexelOffset =
        new TVariable(BuiltInId::gl_MinProgramTexelOffset, BuiltInName::gl_MinProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MinProgramTexelOffset);
        mVar_gl_MinProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxProgramTexelOffset =
        new TVariable(BuiltInId::gl_MaxProgramTexelOffset, BuiltInName::gl_MaxProgramTexelOffset,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxProgramTexelOffset);
        mVar_gl_MaxProgramTexelOffset->shareConstPointer(unionArray);
    }
    mVar_gl_MaxImageUnits = new TVariable(
        BuiltInId::gl_MaxImageUnits, BuiltInName::gl_MaxImageUnits, SymbolType::BuiltIn,
        TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxImageUnits);
        mVar_gl_MaxImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexImageUniforms =
        new TVariable(BuiltInId::gl_MaxVertexImageUniforms, BuiltInName::gl_MaxVertexImageUniforms,
                      SymbolType::BuiltIn, TExtension::UNDEFINED,
                      StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexImageUniforms);
        mVar_gl_MaxVertexImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentImageUniforms =
        new TVariable(BuiltInId::gl_MaxFragmentImageUniforms,
                      BuiltInName::gl_MaxFragmentImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentImageUniforms);
        mVar_gl_MaxFragmentImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeImageUniforms =
        new TVariable(BuiltInId::gl_MaxComputeImageUniforms,
                      BuiltInName::gl_MaxComputeImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeImageUniforms);
        mVar_gl_MaxComputeImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedImageUniforms =
        new TVariable(BuiltInId::gl_MaxCombinedImageUniforms,
                      BuiltInName::gl_MaxCombinedImageUniforms, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedImageUniforms);
        mVar_gl_MaxCombinedImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedShaderOutputResources =
        new TVariable(BuiltInId::gl_MaxCombinedShaderOutputResources,
                      BuiltInName::gl_MaxCombinedShaderOutputResources, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedShaderOutputResources);
        mVar_gl_MaxCombinedShaderOutputResources->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupCount =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupCount,
                      BuiltInName::gl_MaxComputeWorkGroupCount, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupCount[index]);
        }
        mVar_gl_MaxComputeWorkGroupCount->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeWorkGroupSize =
        new TVariable(BuiltInId::gl_MaxComputeWorkGroupSize,
                      BuiltInName::gl_MaxComputeWorkGroupSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpHigh, EvqConst, 3, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[3];
        for (size_t index = 0u; index < 3; ++index)
        {
            unionArray[index].setIConst(resources.MaxComputeWorkGroupSize[index]);
        }
        mVar_gl_MaxComputeWorkGroupSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeUniformComponents =
        new TVariable(BuiltInId::gl_MaxComputeUniformComponents,
                      BuiltInName::gl_MaxComputeUniformComponents, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeUniformComponents);
        mVar_gl_MaxComputeUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeTextureImageUnits =
        new TVariable(BuiltInId::gl_MaxComputeTextureImageUnits,
                      BuiltInName::gl_MaxComputeTextureImageUnits, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeTextureImageUnits);
        mVar_gl_MaxComputeTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounters =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounters,
                      BuiltInName::gl_MaxComputeAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounters);
        mVar_gl_MaxComputeAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxComputeAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxComputeAtomicCounterBuffers,
                      BuiltInName::gl_MaxComputeAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxComputeAtomicCounterBuffers);
        mVar_gl_MaxComputeAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounters =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounters,
                      BuiltInName::gl_MaxVertexAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounters);
        mVar_gl_MaxVertexAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounters =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounters,
                      BuiltInName::gl_MaxFragmentAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounters);
        mVar_gl_MaxFragmentAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounters =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounters,
                      BuiltInName::gl_MaxCombinedAtomicCounters, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounters);
        mVar_gl_MaxCombinedAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBindings =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBindings,
                      BuiltInName::gl_MaxAtomicCounterBindings, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBindings);
        mVar_gl_MaxAtomicCounterBindings->shareConstPointer(unionArray);
    }
    mVar_gl_MaxVertexAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxVertexAtomicCounterBuffers,
                      BuiltInName::gl_MaxVertexAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxVertexAtomicCounterBuffers);
        mVar_gl_MaxVertexAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxFragmentAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxFragmentAtomicCounterBuffers,
                      BuiltInName::gl_MaxFragmentAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxFragmentAtomicCounterBuffers);
        mVar_gl_MaxFragmentAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxCombinedAtomicCounterBuffers =
        new TVariable(BuiltInId::gl_MaxCombinedAtomicCounterBuffers,
                      BuiltInName::gl_MaxCombinedAtomicCounterBuffers, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxCombinedAtomicCounterBuffers);
        mVar_gl_MaxCombinedAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    mVar_gl_MaxAtomicCounterBufferSize =
        new TVariable(BuiltInId::gl_MaxAtomicCounterBufferSize,
                      BuiltInName::gl_MaxAtomicCounterBufferSize, SymbolType::BuiltIn,
                      TExtension::UNDEFINED, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxAtomicCounterBufferSize);
        mVar_gl_MaxAtomicCounterBufferSize->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryInputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryInputComponents, BuiltInName::gl_MaxGeometryInputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryInputComponents);
        mVar_gl_MaxGeometryInputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryOutputComponents, BuiltInName::gl_MaxGeometryOutputComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputComponents);
        mVar_gl_MaxGeometryOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryImageUniforms = new TVariable(
        BuiltInId::gl_MaxGeometryImageUniforms, BuiltInName::gl_MaxGeometryImageUniforms,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryImageUniforms);
        mVar_gl_MaxGeometryImageUniforms->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTextureImageUnits = new TVariable(
        BuiltInId::gl_MaxGeometryTextureImageUnits, BuiltInName::gl_MaxGeometryTextureImageUnits,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTextureImageUnits);
        mVar_gl_MaxGeometryTextureImageUnits->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryOutputVertices = new TVariable(
        BuiltInId::gl_MaxGeometryOutputVertices, BuiltInName::gl_MaxGeometryOutputVertices,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryOutputVertices);
        mVar_gl_MaxGeometryOutputVertices->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryTotalOutputComponents = new TVariable(
        BuiltInId::gl_MaxGeometryTotalOutputComponents,
        BuiltInName::gl_MaxGeometryTotalOutputComponents, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryTotalOutputComponents);
        mVar_gl_MaxGeometryTotalOutputComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryUniformComponents = new TVariable(
        BuiltInId::gl_MaxGeometryUniformComponents, BuiltInName::gl_MaxGeometryUniformComponents,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryUniformComponents);
        mVar_gl_MaxGeometryUniformComponents->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounters = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounters, BuiltInName::gl_MaxGeometryAtomicCounters,
        SymbolType::BuiltIn, TExtension::EXT_geometry_shader,
        StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounters);
        mVar_gl_MaxGeometryAtomicCounters->shareConstPointer(unionArray);
    }
    mVar_gl_MaxGeometryAtomicCounterBuffers = new TVariable(
        BuiltInId::gl_MaxGeometryAtomicCounterBuffers,
        BuiltInName::gl_MaxGeometryAtomicCounterBuffers, SymbolType::BuiltIn,
        TExtension::EXT_geometry_shader, StaticType::Get<EbtInt, EbpMedium, EvqConst, 1, 1>());
    {
        TConstantUnion *unionArray = new TConstantUnion[1];
        unionArray[0].setIConst(resources.MaxGeometryAtomicCounterBuffers);
        mVar_gl_MaxGeometryAtomicCounterBuffers->shareConstPointer(unionArray);
    }
    if (shaderType == GL_FRAGMENT_SHADER)
    {
        TType *type_gl_FragData = new TType(EbtFloat, EbpMedium, EvqFragData, 4);
        if (spec != SH_WEBGL2_SPEC && spec != SH_WEBGL3_SPEC)
        {
            type_gl_FragData->makeArray(resources.MaxDrawBuffers);
        }
        else
        {
            type_gl_FragData->makeArray(1u);
        }
        type_gl_FragData->realize();
        mVar_gl_FragData =
            new TVariable(BuiltInId::gl_FragData, BuiltInName::gl_FragData, SymbolType::BuiltIn,
                          TExtension::UNDEFINED, type_gl_FragData);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
    {
        TType *type_gl_SecondaryFragDataEXT =
            new TType(EbtFloat, EbpMedium, EvqSecondaryFragDataEXT, 4, 1);
        type_gl_SecondaryFragDataEXT->makeArray(resources.MaxDualSourceDrawBuffers);
        type_gl_SecondaryFragDataEXT->realize();
        mVar_gl_SecondaryFragDataEXT = new TVariable(
            BuiltInId::gl_SecondaryFragDataEXT, BuiltInName::gl_SecondaryFragDataEXT,
            SymbolType::BuiltIn, TExtension::EXT_blend_func_extended, type_gl_SecondaryFragDataEXT);
    }
    if ((shaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_frag_depth))
    {
        TType *type_gl_FragDepthEXT = new TType(
            EbtFloat, resources.FragmentPrecisionHigh ? EbpHigh : EbpMedium, EvqFragDepthEXT, 1);
        type_gl_FragDepthEXT->realize();
        mVar_gl_FragDepthEXT =
            new TVariable(BuiltInId::gl_FragDepthEXT, BuiltInName::gl_FragDepthEXT,
                          SymbolType::BuiltIn, TExtension::EXT_frag_depth, type_gl_FragDepthEXT);
    }
    TType *type_gl_LastFragData = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragData->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragData->realize();
    mVar_gl_LastFragData =
        new TVariable(BuiltInId::gl_LastFragData, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
                      TExtension::EXT_shader_framebuffer_fetch, type_gl_LastFragData);
    TType *type_gl_LastFragDataNV = new TType(EbtFloat, EbpMedium, EvqLastFragData, 4, 1);
    type_gl_LastFragDataNV->makeArray(resources.MaxDrawBuffers);
    type_gl_LastFragDataNV->realize();
    mVar_gl_LastFragDataNV = new TVariable(
        BuiltInId::gl_LastFragDataNV, BuiltInName::gl_LastFragData, SymbolType::BuiltIn,
        TExtension::NV_shader_framebuffer_fetch, type_gl_LastFragDataNV);
    TFieldList *fields_gl_PerVertex = new TFieldList();
    fields_gl_PerVertex->push_back(new TField(new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1),
                                              BuiltInName::gl_Position, zeroSourceLoc,
                                              SymbolType::BuiltIn));
    TInterfaceBlock *gl_PerVertex =
        new TInterfaceBlock(BuiltInId::gl_PerVertex, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertex);
    mVar_gl_PerVertex = gl_PerVertex;
    if (shaderType == GL_GEOMETRY_SHADER_EXT)
    {
        TType *type_gl_in = new TType(gl_PerVertex, EvqPerVertexIn, TLayoutQualifier::Create());
        type_gl_in->makeArray(0u);
        type_gl_in->realize();
        mVar_gl_in = new TVariable(BuiltInId::gl_in, BuiltInName::gl_in, SymbolType::BuiltIn,
                                   TExtension::EXT_geometry_shader, type_gl_in);
    }
    TFieldList *fields_gl_PerVertexOutBlock = new TFieldList();
    fields_gl_PerVertexOutBlock->push_back(
        new TField(new TType(EbtFloat, EbpHigh, EvqPosition, 4, 1), BuiltInName::gl_Position,
                   zeroSourceLoc, SymbolType::BuiltIn));
    TInterfaceBlock *gl_PerVertexOutBlock =
        new TInterfaceBlock(BuiltInId::gl_PerVertexOutBlock, BuiltInName::gl_PerVertex,
                            TExtension::EXT_geometry_shader, fields_gl_PerVertexOutBlock);
    TType *type_gl_PositionGS = new TType(EbtFloat, EbpHigh, EvqPosition, 4);
    type_gl_PositionGS->setInterfaceBlock(gl_PerVertexOutBlock);
    type_gl_PositionGS->realize();
    mVar_gl_PositionGS =
        new TVariable(BuiltInId::gl_PositionGS, BuiltInName::gl_Position, SymbolType::BuiltIn,
                      TExtension::EXT_geometry_shader, type_gl_PositionGS);
}

const TSymbol *TSymbolTable::findBuiltIn(const ImmutableString &name, int shaderVersion) const
{
    if (name.length() > 37)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0x00000005u:
            {
                if (name == BuiltInName::packUnorm4x8_30B)
                {
                    return &BuiltInFunction::kFunction_packUnorm4x8_30B;
                }
                break;
            }
            case 0x0000000fu:
            {
                if (name == BuiltInName::atomicOr_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicOr_00C00C;
                }
                break;
            }
            case 0x00000018u:
            {
                if (name == BuiltInName::findMSB_20C)
                {
                    return &BuiltInFunction::kFunction_findMSB_20C;
                }
                break;
            }
            case 0x00000019u:
            {
                if (name == BuiltInName::uaddCarry_30D30D30D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_30D30D30D;
                }
                break;
            }
            case 0x0000001cu:
            {
                if (name == BuiltInName::ldexp_00B00C)
                {
                    return &BuiltInFunction::kFunction_ldexp_00B00C;
                }
                break;
            }
            case 0x0000002bu:
            {
                if (name == BuiltInName::bitCount_00C)
                {
                    return &BuiltInFunction::kFunction_bitCount_00C;
                }
                break;
            }
            case 0x0000002eu:
            {
                if (name == BuiltInName::bitCount_00D)
                {
                    return &BuiltInFunction::kFunction_bitCount_00D;
                }
                break;
            }
            case 0x00000032u:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputVertices)
                {
                    return mVar_gl_MaxGeometryOutputVertices;
                }
                break;
            }
            case 0x00000038u:
            {
                if (name == BuiltInName::imageLoad_00i20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00i20C;
                }
                break;
            }
            case 0x00000039u:
            {
                if (name == BuiltInName::gl_in)
                {
                    // Only initialized if shaderType == GL_GEOMETRY_SHADER_EXT
                    return mVar_gl_in;
                }
                break;
            }
            case 0x0000003du:
            {
                if (name == BuiltInName::textureGatherOffset_00H10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00H10B10C;
                }
                break;
            }
            case 0x00000044u:
            {
                if (name == BuiltInName::textureGather_00J20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00J20B00C;
                }
                break;
            }
            case 0x00000047u:
            {
                if (name == BuiltInName::textureGatherOffset_00e20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00e20B00B10C;
                }
                break;
            }
            case 0x00000049u:
            {
                if (name == BuiltInName::textureGather_00Y20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Y20B;
                }
                break;
            }
            case 0x0000004au:
            {
                if (name == BuiltInName::imageStore_00n20C30D)
                {
                    return &BuiltInFunction::kFunction_imageStore_00n20C30D;
                }
                break;
            }
            case 0x0000004eu:
            {
                if (name == BuiltInName::atomicAdd_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicAdd_00D00D;
                }
                break;
            }
            case 0x00000051u:
            {
                if (name == BuiltInName::gl_MaxGeometryTextureImageUnits)
                {
                    return mVar_gl_MaxGeometryTextureImageUnits;
                }
                break;
            }
            case 0x00000052u:
            {
                if (name == BuiltInName::textureGather_00W10B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00W10B00C;
                }
                break;
            }
            case 0x0000005bu:
            {
                if (name == BuiltInName::textureGather_00H10B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00H10B00C;
                }
                break;
            }
            case 0x0000005cu:
            {
                if (name == BuiltInName::textureGather_00e20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00e20B;
                }
                break;
            }
            case 0x00000067u:
            {
                if (name == BuiltInName::bitfieldReverse_20D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_20D;
                }
                break;
            }
            case 0x00000068u:
            {
                if (name == BuiltInName::atomicXor_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicXor_00C00C;
                }
                break;
            }
            case 0x00000069u:
            {
                if (name == BuiltInName::bitfieldReverse_20C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_20C;
                }
                break;
            }
            case 0x00000072u:
            {
                if (name == BuiltInName::umulExtended_10D10D10D10D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_10D10D10D10D;
                }
                break;
            }
            case 0x00000074u:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounterBuffers)
                {
                    return mVar_gl_MaxVertexAtomicCounterBuffers;
                }
                break;
            }
            case 0x0000007du:
            {
                if (name == BuiltInName::memoryBarrierAtomicCounter_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierAtomicCounter_;
                }
                break;
            }
            case 0x0000007eu:
            {
                if (name == BuiltInName::textureSize_00P)
                {
                    return &BuiltInFunction::kFunction_textureSize_00P;
                }
                break;
            }
            case 0x00000084u:
            {
                if (name == BuiltInName::imageStore_00m20C30C)
                {
                    return &BuiltInFunction::kFunction_imageStore_00m20C30C;
                }
                break;
            }
            case 0x00000089u:
            {
                if (name == BuiltInName::imageLoad_00j20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00j20C;
                }
                break;
            }
            case 0x00000090u:
            {
                if (name == BuiltInName::atomicAnd_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicAnd_00D00D;
                }
                break;
            }
            case 0x00000094u:
            {
                if (name == BuiltInName::bitCount_30C)
                {
                    return &BuiltInFunction::kFunction_bitCount_30C;
                }
                break;
            }
            case 0x00000096u:
            {
                if (name == BuiltInName::bitCount_30D)
                {
                    return &BuiltInFunction::kFunction_bitCount_30D;
                }
                break;
            }
            case 0x0000009cu:
            {
                if (name == BuiltInName::textureGather_00d20B00B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00d20B00B;
                }
                break;
            }
            case 0x000000a0u:
            {
                if (name == BuiltInName::imageSize_00k)
                {
                    return &BuiltInFunction::kFunction_imageSize_00k;
                }
                break;
            }
            case 0x000000a7u:
            {
                if (name == BuiltInName::gl_MaxImageUnits)
                {
                    return mVar_gl_MaxImageUnits;
                }
                break;
            }
            case 0x000000abu:
            {
                if (name == BuiltInName::findLSB_20D)
                {
                    return &BuiltInFunction::kFunction_findLSB_20D;
                }
                break;
            }
            case 0x000000aeu:
            {
                if (name == BuiltInName::frexp_00B00C)
                {
                    return &BuiltInFunction::kFunction_frexp_00B00C;
                }
                break;
            }
            case 0x000000b5u:
            {
                if (name == BuiltInName::atomicCounterDecrement_00F)
                {
                    return &BuiltInFunction::kFunction_atomicCounterDecrement_00F;
                }
                break;
            }
            case 0x000000b7u:
            {
                if (name == BuiltInName::textureGatherOffset_00K20B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00K20B10C;
                }
                break;
            }
            case 0x000000b9u:
            {
                if (name == BuiltInName::textureGatherOffset_00W10B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00W10B10C00C;
                }
                break;
            }
            case 0x000000beu:
            {
                if (name == BuiltInName::gl_MaxFragmentImageUniforms)
                {
                    return mVar_gl_MaxFragmentImageUniforms;
                }
                break;
            }
            case 0x000000c1u:
            {
                if (name == BuiltInName::texelFetch_00U10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00U10C00C;
                }
                break;
            }
            case 0x000000c7u:
            {
                if (name == BuiltInName::gl_MaxCombinedShaderOutputResources)
                {
                    return mVar_gl_MaxCombinedShaderOutputResources;
                }
                break;
            }
            case 0x000000cbu:
            {
                if (name == BuiltInName::uaddCarry_20D20D20D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_20D20D20D;
                }
                break;
            }
            case 0x000000dcu:
            {
                if (name == BuiltInName::gl_MaxComputeImageUniforms)
                {
                    return mVar_gl_MaxComputeImageUniforms;
                }
                break;
            }
            case 0x000000e1u:
            {
                if (name == BuiltInName::textureGather_00Y20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Y20B00C;
                }
                break;
            }
            case 0x000000edu:
            {
                if (name == BuiltInName::atomicMax_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicMax_00D00D;
                }
                break;
            }
            case 0x000000f4u:
            {
                if (name == BuiltInName::imageStore_00i20C30B)
                {
                    return &BuiltInFunction::kFunction_imageStore_00i20C30B;
                }
                break;
            }
            case 0x000000f5u:
            {
                if (name == BuiltInName::textureGather_00K20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00K20B;
                }
                break;
            }
            case 0x00000102u:
            {
                if (name == BuiltInName::gl_MaxVertexImageUniforms)
                {
                    return mVar_gl_MaxVertexImageUniforms;
                }
                break;
            }
            case 0x00000103u:
            {
                if (name == BuiltInName::imageStore_00f10C30B)
                {
                    return &BuiltInFunction::kFunction_imageStore_00f10C30B;
                }
                break;
            }
            case 0x00000105u:
            {
                if (name == BuiltInName::atomicMin_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicMin_00C00C;
                }
                break;
            }
            case 0x00000107u:
            {
                if (name == BuiltInName::usubBorrow_10D10D10D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_10D10D10D;
                }
                break;
            }
            case 0x0000010fu:
            {
                if (name == BuiltInName::bitfieldExtract_30C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_30C00C00C;
                }
                break;
            }
            case 0x00000111u:
            {
                if (name == BuiltInName::findMSB_10C)
                {
                    return &BuiltInFunction::kFunction_findMSB_10C;
                }
                break;
            }
            case 0x00000116u:
            {
                if (name == BuiltInName::findMSB_10D)
                {
                    return &BuiltInFunction::kFunction_findMSB_10D;
                }
                break;
            }
            case 0x0000011du:
            {
                if (name == BuiltInName::bitfieldExtract_20C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_20C00C00C;
                }
                break;
            }
            case 0x00000121u:
            {
                if (name == BuiltInName::textureGather_00c10B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00c10B;
                }
                break;
            }
            case 0x00000124u:
            {
                if (name == BuiltInName::textureGatherOffset_00T20B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00T20B10C00C;
                }
                break;
            }
            case 0x0000012au:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounterBuffers)
                {
                    return mVar_gl_MaxComputeAtomicCounterBuffers;
                }
                break;
            }
            case 0x00000135u:
            {
                if (name == BuiltInName::gl_MaxComputeTextureImageUnits)
                {
                    return mVar_gl_MaxComputeTextureImageUnits;
                }
                break;
            }
            case 0x0000013du:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounters)
                {
                    return mVar_gl_MaxCombinedAtomicCounters;
                }
                break;
            }
            case 0x0000014du:
            {
                if (name == BuiltInName::textureGatherOffset_00Q10B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00Q10B10C00C;
                }
                break;
            }
            case 0x0000014fu:
            {
                if (name == BuiltInName::gl_MaxGeometryUniformComponents)
                {
                    return mVar_gl_MaxGeometryUniformComponents;
                }
                break;
            }
            case 0x00000159u:
            {
                if (name == BuiltInName::findMSB_20D)
                {
                    return &BuiltInFunction::kFunction_findMSB_20D;
                }
                break;
            }
            case 0x0000015au:
            {
                if (name == BuiltInName::textureGather_00S20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00S20B;
                }
                break;
            }
            case 0x0000015cu:
            {
                if (name == BuiltInName::bitfieldExtract_10D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_10D00C00C;
                }
                break;
            }
            case 0x0000015du:
            {
                if (name == BuiltInName::textureGather_00d20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00d20B;
                }
                break;
            }
            case 0x0000015eu:
            {
                if (name == BuiltInName::atomicMin_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicMin_00D00D;
                }
                break;
            }
            case 0x00000164u:
            {
                if (name == BuiltInName::unpackSnorm4x8_00D)
                {
                    return &BuiltInFunction::kFunction_unpackSnorm4x8_00D;
                }
                break;
            }
            case 0x00000165u:
            {
                if (name == BuiltInName::imageSize_00p)
                {
                    return &BuiltInFunction::kFunction_imageSize_00p;
                }
                break;
            }
            case 0x00000169u:
            {
                if (name == BuiltInName::bitfieldExtract_00C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_00C00C00C;
                }
                break;
            }
            case 0x0000016cu:
            {
                if (name == BuiltInName::imageStore_00k20C30D)
                {
                    return &BuiltInFunction::kFunction_imageStore_00k20C30D;
                }
                break;
            }
            case 0x00000176u:
            {
                if (name == BuiltInName::texelFetch_00a10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00a10C00C;
                }
                break;
            }
            case 0x0000017du:
            {
                if (name == BuiltInName::uaddCarry_00D00D00D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_00D00D00D;
                }
                break;
            }
            case 0x00000185u:
            {
                if (name == BuiltInName::umulExtended_20D20D20D20D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_20D20D20D20D;
                }
                break;
            }
            case 0x00000186u:
            {
                if (name == BuiltInName::textureGather_00e20B00B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00e20B00B;
                }
                break;
            }
            case 0x0000018bu:
            {
                if (name == BuiltInName::bitfieldExtract_30D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_30D00C00C;
                }
                break;
            }
            case 0x00000191u:
            {
                if (name == BuiltInName::bitfieldReverse_00D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_00D;
                }
                break;
            }
            case 0x00000194u:
            {
                if (name == BuiltInName::bitfieldReverse_00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_00C;
                }
                break;
            }
            case 0x00000198u:
            {
                if (name == BuiltInName::imageStore_00g10C30C)
                {
                    return &BuiltInFunction::kFunction_imageStore_00g10C30C;
                }
                break;
            }
            case 0x0000019eu:
            {
                if (name == BuiltInName::imageLoad_00n20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00n20C;
                }
                break;
            }
            case 0x000001a8u:
            {
                if (name == BuiltInName::imageSize_00h)
                {
                    return &BuiltInFunction::kFunction_imageSize_00h;
                }
                break;
            }
            case 0x000001a9u:
            {
                if (name == BuiltInName::bitfieldReverse_30D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_30D;
                }
                break;
            }
            case 0x000001aau:
            {
                if (name == BuiltInName::bitfieldReverse_30C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_30C;
                }
                break;
            }
            case 0x000001b2u:
            {
                if (name == BuiltInName::frexp_20B20C)
                {
                    return &BuiltInFunction::kFunction_frexp_20B20C;
                }
                break;
            }
            case 0x000001b3u:
            {
                if (name == BuiltInName::textureGatherOffset_00K20B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00K20B10C00C;
                }
                break;
            }
            case 0x000001c3u:
            {
                if (name == BuiltInName::atomicAnd_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicAnd_00C00C;
                }
                break;
            }
            case 0x000001d2u:
            {
                if (name == BuiltInName::memoryBarrier_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrier_;
                }
                break;
            }
            case 0x000001d6u:
            {
                if (name == BuiltInName::textureGather_00Q10B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Q10B00C;
                }
                break;
            }
            case 0x000001dcu:
            {
                if (name == BuiltInName::imageSize_00i)
                {
                    return &BuiltInFunction::kFunction_imageSize_00i;
                }
                break;
            }
            case 0x000001dfu:
            {
                if (name == BuiltInName::imageSize_00j)
                {
                    return &BuiltInFunction::kFunction_imageSize_00j;
                }
                break;
            }
            case 0x000001e0u:
            {
                if (name == BuiltInName::imageSize_00m)
                {
                    return &BuiltInFunction::kFunction_imageSize_00m;
                }
                break;
            }
            case 0x000001e1u:
            {
                if (name == BuiltInName::imageSize_00l)
                {
                    return &BuiltInFunction::kFunction_imageSize_00l;
                }
                break;
            }
            case 0x000001e5u:
            {
                if (name == BuiltInName::bitCount_20C)
                {
                    return &BuiltInFunction::kFunction_bitCount_20C;
                }
                break;
            }
            case 0x000001e6u:
            {
                if (name == BuiltInName::bitCount_20D)
                {
                    return &BuiltInFunction::kFunction_bitCount_20D;
                }
                break;
            }
            case 0x000001e9u:
            {
                if (name == BuiltInName::imageSize_00f)
                {
                    return &BuiltInFunction::kFunction_imageSize_00f;
                }
                break;
            }
            case 0x000001eau:
            {
                if (name == BuiltInName::memoryBarrierBuffer_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierBuffer_;
                }
                break;
            }
            case 0x000001f0u:
            {
                if (name == BuiltInName::imageSize_00q)
                {
                    return &BuiltInFunction::kFunction_imageSize_00q;
                }
                break;
            }
            case 0x000001f2u:
            {
                if (name == BuiltInName::gl_MaxCombinedImageUniforms)
                {
                    return mVar_gl_MaxCombinedImageUniforms;
                }
                break;
            }
            case 0x000001f9u:
            {
                if (name == BuiltInName::textureGather_00W10B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00W10B;
                }
                break;
            }
            case 0x00000200u:
            {
                if (name == BuiltInName::imageSize_00o)
                {
                    return &BuiltInFunction::kFunction_imageSize_00o;
                }
                break;
            }
            case 0x00000202u:
            {
                if (name == BuiltInName::findLSB_10C)
                {
                    return &BuiltInFunction::kFunction_findLSB_10C;
                }
                break;
            }
            case 0x00000205u:
            {
                if (name == BuiltInName::findLSB_10D)
                {
                    return &BuiltInFunction::kFunction_findLSB_10D;
                }
                break;
            }
            case 0x00000206u:
            {
                if (name == BuiltInName::gl_MaxGeometryOutputComponents)
                {
                    return mVar_gl_MaxGeometryOutputComponents;
                }
                break;
            }
            case 0x0000020bu:
            {
                if (name == BuiltInName::textureGather_00H10B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00H10B;
                }
                break;
            }
            case 0x00000213u:
            {
                if (name == BuiltInName::imageSize_00n)
                {
                    return &BuiltInFunction::kFunction_imageSize_00n;
                }
                break;
            }
            case 0x00000217u:
            {
                if (name == BuiltInName::bitfieldInsert_00D00D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_00D00D00C00C;
                }
                break;
            }
            case 0x00000219u:
            {
                if (name == BuiltInName::imageLoad_00h10C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00h10C;
                }
                break;
            }
            case 0x0000021du:
            {
                if (name == BuiltInName::umulExtended_30D30D30D30D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_30D30D30D30D;
                }
                break;
            }
            case 0x00000222u:
            {
                if (name == BuiltInName::textureGatherOffset_00Q10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00Q10B10C;
                }
                break;
            }
            case 0x00000224u:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounterBuffers)
                {
                    return mVar_gl_MaxFragmentAtomicCounterBuffers;
                }
                break;
            }
            case 0x00000229u:
            {
                if (name == BuiltInName::frexp_30B30C)
                {
                    return &BuiltInFunction::kFunction_frexp_30B30C;
                }
                break;
            }
            case 0x0000022au:
            {
                if (name == BuiltInName::imulExtended_10C10C10C10C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_10C10C10C10C;
                }
                break;
            }
            case 0x0000023cu:
            {
                if (name == BuiltInName::imulExtended_00C00C00C00C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_00C00C00C00C;
                }
                break;
            }
            case 0x0000023fu:
            {
                if (name == BuiltInName::textureGather_00J20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00J20B;
                }
                break;
            }
            case 0x0000024bu:
            {
                if (name == BuiltInName::atomicAdd_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicAdd_00C00C;
                }
                break;
            }
            case 0x00000251u:
            {
                if (name == BuiltInName::atomicExchange_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicExchange_00D00D;
                }
                break;
            }
            case 0x00000252u:
            {
                if (name == BuiltInName::imulExtended_20C20C20C20C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_20C20C20C20C;
                }
                break;
            }
            case 0x00000258u:
            {
                if (name == BuiltInName::frexp_10B10C)
                {
                    return &BuiltInFunction::kFunction_frexp_10B10C;
                }
                break;
            }
            case 0x0000025du:
            {
                if (name == BuiltInName::imageLoad_00g10C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00g10C;
                }
                break;
            }
            case 0x0000025fu:
            {
                if (name == BuiltInName::gl_MaxGeometryInputComponents)
                {
                    return mVar_gl_MaxGeometryInputComponents;
                }
                break;
            }
            case 0x00000269u:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounterBuffers)
                {
                    return mVar_gl_MaxGeometryAtomicCounterBuffers;
                }
                break;
            }
            case 0x0000026du:
            {
                if (name == BuiltInName::textureGatherOffset_00c10B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00c10B00B10C;
                }
                break;
            }
            case 0x0000026fu:
            {
                if (name == BuiltInName::bitfieldInsert_20C20C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_20C20C00C00C;
                }
                break;
            }
            case 0x00000275u:
            {
                if (name == BuiltInName::textureGather_00K20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00K20B00C;
                }
                break;
            }
            case 0x0000027du:
            {
                if (name == BuiltInName::texelFetch_00O10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00O10C00C;
                }
                break;
            }
            case 0x00000281u:
            {
                if (name == BuiltInName::imageLoad_00m20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00m20C;
                }
                break;
            }
            case 0x00000282u:
            {
                if (name == BuiltInName::textureGatherOffset_00W10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00W10B10C;
                }
                break;
            }
            case 0x00000285u:
            {
                if (name == BuiltInName::imageSize_00g)
                {
                    return &BuiltInFunction::kFunction_imageSize_00g;
                }
                break;
            }
            case 0x00000286u:
            {
                if (name == BuiltInName::textureSize_00a)
                {
                    return &BuiltInFunction::kFunction_textureSize_00a;
                }
                break;
            }
            case 0x00000288u:
            {
                if (name == BuiltInName::textureSize_00b)
                {
                    return &BuiltInFunction::kFunction_textureSize_00b;
                }
                break;
            }
            case 0x0000029eu:
            {
                if (name == BuiltInName::atomicMax_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicMax_00C00C;
                }
                break;
            }
            case 0x000002a2u:
            {
                if (name == BuiltInName::textureSize_00U)
                {
                    return &BuiltInFunction::kFunction_textureSize_00U;
                }
                break;
            }
            case 0x000002a3u:
            {
                if (name == BuiltInName::textureSize_00V)
                {
                    return &BuiltInFunction::kFunction_textureSize_00V;
                }
                break;
            }
            case 0x000002a6u:
            {
                if (name == BuiltInName::gl_MaxCombinedAtomicCounterBuffers)
                {
                    return mVar_gl_MaxCombinedAtomicCounterBuffers;
                }
                break;
            }
            case 0x000002b3u:
            {
                if (name == BuiltInName::bitfieldExtract_20D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_20D00C00C;
                }
                break;
            }
            case 0x000002b5u:
            {
                if (name == BuiltInName::textureGather_00Z20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Z20B00C;
                }
                break;
            }
            case 0x000002b6u:
            {
                if (name == BuiltInName::atomicXor_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicXor_00D00D;
                }
                break;
            }
            case 0x000002bcu:
            {
                if (name == BuiltInName::atomicCounter_00F)
                {
                    return &BuiltInFunction::kFunction_atomicCounter_00F;
                }
                break;
            }
            case 0x000002bdu:
            {
                if (name == BuiltInName::imageLoad_00f10C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00f10C;
                }
                break;
            }
            case 0x000002c0u:
            {
                if (name == BuiltInName::atomicCompSwap_00D00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_00D00D00D;
                }
                break;
            }
            case 0x000002c1u:
            {
                if (name == BuiltInName::findMSB_30C)
                {
                    return &BuiltInFunction::kFunction_findMSB_30C;
                }
                break;
            }
            case 0x000002c3u:
            {
                if (name == BuiltInName::findMSB_30D)
                {
                    return &BuiltInFunction::kFunction_findMSB_30D;
                }
                break;
            }
            case 0x000002c9u:
            {
                if (name == BuiltInName::gl_MaxVertexAtomicCounters)
                {
                    return mVar_gl_MaxVertexAtomicCounters;
                }
                break;
            }
            case 0x000002d8u:
            {
                if (name == BuiltInName::imageLoad_00l20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00l20C;
                }
                break;
            }
            case 0x000002dfu:
            {
                if (name == BuiltInName::gl_MaxGeometryImageUniforms)
                {
                    return mVar_gl_MaxGeometryImageUniforms;
                }
                break;
            }
            case 0x000002e2u:
            {
                if (name == BuiltInName::textureSize_00O)
                {
                    return &BuiltInFunction::kFunction_textureSize_00O;
                }
                break;
            }
            case 0x000002e5u:
            {
                if (name == BuiltInName::textureGather_00Z20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Z20B;
                }
                break;
            }
            case 0x000002eau:
            {
                if (name == BuiltInName::ldexp_30B30C)
                {
                    return &BuiltInFunction::kFunction_ldexp_30B30C;
                }
                break;
            }
            case 0x000002edu:
            {
                if (name == BuiltInName::textureGatherOffset_00T20B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00T20B10C;
                }
                break;
            }
            case 0x000002f7u:
            {
                if (name == BuiltInName::bitfieldReverse_10D)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_10D;
                }
                break;
            }
            case 0x000002f9u:
            {
                if (name == BuiltInName::bitfieldReverse_10C)
                {
                    return &BuiltInFunction::kFunction_bitfieldReverse_10C;
                }
                break;
            }
            case 0x00000304u:
            {
                if (name == BuiltInName::bitfieldInsert_30C30C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_30C30C00C00C;
                }
                break;
            }
            case 0x00000305u:
            {
                if (name == BuiltInName::atomicExchange_00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicExchange_00C00C;
                }
                break;
            }
            case 0x0000030bu:
            {
                if (name == BuiltInName::gl_MaxFragmentAtomicCounters)
                {
                    return mVar_gl_MaxFragmentAtomicCounters;
                }
                break;
            }
            case 0x0000030cu:
            {
                if (name == BuiltInName::imulExtended_30C30C30C30C)
                {
                    return &BuiltInFunction::kFunction_imulExtended_30C30C30C30C;
                }
                break;
            }
            case 0x00000315u:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBufferSize)
                {
                    return mVar_gl_MaxAtomicCounterBufferSize;
                }
                break;
            }
            case 0x00000317u:
            {
                if (name == BuiltInName::bitfieldInsert_20D20D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_20D20D00C00C;
                }
                break;
            }
            case 0x0000031au:
            {
                if (name == BuiltInName::bitCount_10C)
                {
                    return &BuiltInFunction::kFunction_bitCount_10C;
                }
                break;
            }
            case 0x0000031fu:
            {
                if (name == BuiltInName::bitCount_10D)
                {
                    return &BuiltInFunction::kFunction_bitCount_10D;
                }
                break;
            }
            case 0x00000324u:
            {
                if (name == BuiltInName::bitfieldInsert_10D10D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_10D10D00C00C;
                }
                break;
            }
            case 0x00000327u:
            {
                if (name == BuiltInName::findMSB_00D)
                {
                    return &BuiltInFunction::kFunction_findMSB_00D;
                }
                break;
            }
            case 0x00000328u:
            {
                if (name == BuiltInName::gl_MaxGeometryTotalOutputComponents)
                {
                    return mVar_gl_MaxGeometryTotalOutputComponents;
                }
                break;
            }
            case 0x00000329u:
            {
                if (name == BuiltInName::imageStore_00p20C30C)
                {
                    return &BuiltInFunction::kFunction_imageStore_00p20C30C;
                }
                break;
            }
            case 0x0000032eu:
            {
                if (name == BuiltInName::atomicOr_00D00D)
                {
                    return &BuiltInFunction::kFunction_atomicOr_00D00D;
                }
                break;
            }
            case 0x0000032fu:
            {
                if (name == BuiltInName::unpackUnorm4x8_00D)
                {
                    return &BuiltInFunction::kFunction_unpackUnorm4x8_00D;
                }
                break;
            }
            case 0x00000334u:
            {
                if (name == BuiltInName::texelFetch_00b20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00b20C00C;
                }
                break;
            }
            case 0x0000033cu:
            {
                if (name == BuiltInName::findLSB_30D)
                {
                    return &BuiltInFunction::kFunction_findLSB_30D;
                }
                break;
            }
            case 0x00000343u:
            {
                if (name == BuiltInName::gl_MaxComputeUniformComponents)
                {
                    return mVar_gl_MaxComputeUniformComponents;
                }
                break;
            }
            case 0x0000034cu:
            {
                if (name == BuiltInName::umulExtended_00D00D00D00D)
                {
                    return &BuiltInFunction::kFunction_umulExtended_00D00D00D00D;
                }
                break;
            }
            case 0x0000034du:
            {
                if (name == BuiltInName::findLSB_00C)
                {
                    return &BuiltInFunction::kFunction_findLSB_00C;
                }
                break;
            }
            case 0x00000350u:
            {
                if (name == BuiltInName::findLSB_00D)
                {
                    return &BuiltInFunction::kFunction_findLSB_00D;
                }
                break;
            }
            case 0x0000035bu:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupCount)
                {
                    return mVar_gl_MaxComputeWorkGroupCount;
                }
                break;
            }
            case 0x00000364u:
            {
                if (name == BuiltInName::findLSB_20C)
                {
                    return &BuiltInFunction::kFunction_findLSB_20C;
                }
                break;
            }
            case 0x00000365u:
            {
                if (name == BuiltInName::packSnorm4x8_30B)
                {
                    return &BuiltInFunction::kFunction_packSnorm4x8_30B;
                }
                break;
            }
            case 0x0000036eu:
            {
                if (name == BuiltInName::textureGather_00c10B00B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00c10B00B;
                }
                break;
            }
            case 0x00000375u:
            {
                if (name == BuiltInName::imageStore_00q20C30D)
                {
                    return &BuiltInFunction::kFunction_imageStore_00q20C30D;
                }
                break;
            }
            case 0x00000377u:
            {
                if (name == BuiltInName::textureGather_00T20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00T20B00C;
                }
                break;
            }
            case 0x0000038cu:
            {
                if (name == BuiltInName::imageStore_00l20C30B)
                {
                    return &BuiltInFunction::kFunction_imageStore_00l20C30B;
                }
                break;
            }
            case 0x00000390u:
            {
                if (name == BuiltInName::atomicCompSwap_00C00C00C)
                {
                    return &BuiltInFunction::kFunction_atomicCompSwap_00C00C00C;
                }
                break;
            }
            case 0x00000391u:
            {
                if (name == BuiltInName::ldexp_10B10C)
                {
                    return &BuiltInFunction::kFunction_ldexp_10B10C;
                }
                break;
            }
            case 0x00000396u:
            {
                if (name == BuiltInName::findLSB_30C)
                {
                    return &BuiltInFunction::kFunction_findLSB_30C;
                }
                break;
            }
            case 0x00000398u:
            {
                if (name == BuiltInName::textureGather_00S20B00C)
                {
                    return &BuiltInFunction::kFunction_textureGather_00S20B00C;
                }
                break;
            }
            case 0x0000039bu:
            {
                if (name == BuiltInName::imageLoad_00q20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00q20C;
                }
                break;
            }
            case 0x0000039cu:
            {
                if (name == BuiltInName::usubBorrow_30D30D30D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_30D30D30D;
                }
                break;
            }
            case 0x000003a6u:
            {
                if (name == BuiltInName::textureGatherOffset_00Z20B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00Z20B10C00C;
                }
                break;
            }
            case 0x000003a9u:
            {
                if (name == BuiltInName::imageLoad_00k20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00k20C;
                }
                break;
            }
            case 0x000003bcu:
            {
                if (name == BuiltInName::bitfieldExtract_00D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_00D00C00C;
                }
                break;
            }
            case 0x000003bdu:
            {
                if (name == BuiltInName::bitfieldExtract_10C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldExtract_10C00C00C;
                }
                break;
            }
            case 0x000003c5u:
            {
                if (name == BuiltInName::usubBorrow_00D00D00D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_00D00D00D;
                }
                break;
            }
            case 0x000003ceu:
            {
                if (name == BuiltInName::imageStore_00o20C30B)
                {
                    return &BuiltInFunction::kFunction_imageStore_00o20C30B;
                }
                break;
            }
            case 0x000003d1u:
            {
                if (name == BuiltInName::atomicCounterIncrement_00F)
                {
                    return &BuiltInFunction::kFunction_atomicCounterIncrement_00F;
                }
                break;
            }
            case 0x000003d3u:
            {
                if (name == BuiltInName::ldexp_20B20C)
                {
                    return &BuiltInFunction::kFunction_ldexp_20B20C;
                }
                break;
            }
            case 0x000003d9u:
            {
                if (name == BuiltInName::bitfieldInsert_00C00C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_00C00C00C00C;
                }
                break;
            }
            case 0x000003dau:
            {
                if (name == BuiltInName::imageStore_00h10C30D)
                {
                    return &BuiltInFunction::kFunction_imageStore_00h10C30D;
                }
                break;
            }
            case 0x000003deu:
            {
                if (name == BuiltInName::bitfieldInsert_30D30D00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_30D30D00C00C;
                }
                break;
            }
            case 0x000003e5u:
            {
                if (name == BuiltInName::imageLoad_00p20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00p20C;
                }
                break;
            }
            case 0x000003e6u:
            {
                if (name == BuiltInName::memoryBarrierImage_)
                {
                    return &BuiltInFunction::kFunction_memoryBarrierImage_;
                }
                break;
            }
            case 0x000003f6u:
            {
                if (name == BuiltInName::gl_MaxAtomicCounterBindings)
                {
                    return mVar_gl_MaxAtomicCounterBindings;
                }
                break;
            }
            case 0x000003fau:
            {
                if (name == BuiltInName::bitfieldInsert_10C10C00C00C)
                {
                    return &BuiltInFunction::kFunction_bitfieldInsert_10C10C00C00C;
                }
                break;
            }
            case 0x000003fdu:
            {
                if (name == BuiltInName::textureGather_00Q10B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00Q10B;
                }
                break;
            }
            case 0x000003ffu:
            {
                if (name == BuiltInName::imageStore_00j20C30C)
                {
                    return &BuiltInFunction::kFunction_imageStore_00j20C30C;
                }
                break;
            }
            case 0x0000040eu:
            {
                if (name == BuiltInName::findMSB_00C)
                {
                    return &BuiltInFunction::kFunction_findMSB_00C;
                }
                break;
            }
            case 0x0000040fu:
            {
                if (name == BuiltInName::gl_MaxComputeAtomicCounters)
                {
                    return mVar_gl_MaxComputeAtomicCounters;
                }
                break;
            }
            case 0x00000414u:
            {
                if (name == BuiltInName::usubBorrow_20D20D20D)
                {
                    return &BuiltInFunction::kFunction_usubBorrow_20D20D20D;
                }
                break;
            }
            case 0x00000417u:
            {
                if (name == BuiltInName::uaddCarry_10D10D10D)
                {
                    return &BuiltInFunction::kFunction_uaddCarry_10D10D10D;
                }
                break;
            }
            case 0x00000418u:
            {
                if (name == BuiltInName::textureGatherOffset_00H10B10C00C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00H10B10C00C;
                }
                break;
            }
            case 0x0000041du:
            {
                if (name == BuiltInName::gl_MaxComputeWorkGroupSize)
                {
                    return mVar_gl_MaxComputeWorkGroupSize;
                }
                break;
            }
            case 0x00000426u:
            {
                if (name == BuiltInName::texelFetch_00V20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00V20C00C;
                }
                break;
            }
            case 0x00000427u:
            {
                if (name == BuiltInName::gl_MaxGeometryAtomicCounters)
                {
                    return mVar_gl_MaxGeometryAtomicCounters;
                }
                break;
            }
            case 0x0000042eu:
            {
                if (name == BuiltInName::textureGather_00T20B)
                {
                    return &BuiltInFunction::kFunction_textureGather_00T20B;
                }
                break;
            }
            case 0x00000434u:
            {
                if (name == BuiltInName::texelFetch_00P20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00P20C00C;
                }
                break;
            }
            case 0x00000437u:
            {
                if (name == BuiltInName::textureGatherOffset_00Z20B10C)
                {
                    return &BuiltInFunction::kFunction_textureGatherOffset_00Z20B10C;
                }
                break;
            }
            case 0x00000439u:
            {
                if (name == BuiltInName::imageLoad_00o20C)
                {
                    return &BuiltInFunction::kFunction_imageLoad_00o20C;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000006eu:
                {
                    if (name == BuiltInName::groupMemoryBarrier_)
                    {
                        return &BuiltInFunction::kFunction_groupMemoryBarrier_;
                    }
                    break;
                }
                case 0x0000014eu:
                {
                    if (name == BuiltInName::barrier_)
                    {
                        return &BuiltInFunction::kFunction_barrier_;
                    }
                    break;
                }
                case 0x000001aeu:
                {
                    if (name == BuiltInName::gl_LocalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationID;
                    }
                    break;
                }
                case 0x000001f3u:
                {
                    if (name == BuiltInName::gl_GlobalInvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_GlobalInvocationID;
                    }
                    break;
                }
                case 0x00000225u:
                {
                    if (name == BuiltInName::gl_NumWorkGroups)
                    {
                        return &BuiltInVariable::kVar_gl_NumWorkGroups;
                    }
                    break;
                }
                case 0x00000243u:
                {
                    if (name == BuiltInName::gl_WorkGroupID)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupID;
                    }
                    break;
                }
                case 0x00000257u:
                {
                    if (name == BuiltInName::gl_WorkGroupSize)
                    {
                        return &BuiltInVariable::kVar_gl_WorkGroupSize;
                    }
                    break;
                }
                case 0x00000354u:
                {
                    if (name == BuiltInName::gl_LocalInvocationIndex)
                    {
                        return &BuiltInVariable::kVar_gl_LocalInvocationIndex;
                    }
                    break;
                }
                case 0x000003b2u:
                {
                    if (name == BuiltInName::memoryBarrierShared_)
                    {
                        return &BuiltInFunction::kFunction_memoryBarrierShared_;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0x00000007u:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDGS;
                    }
                    break;
                }
                case 0x00000015u:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_LayerGS;
                    }
                    break;
                }
                case 0x00000178u:
                {
                    if (name == BuiltInName::gl_InvocationID)
                    {
                        return &BuiltInVariable::kVar_gl_InvocationID;
                    }
                    break;
                }
                case 0x0000017cu:
                {
                    if (name == BuiltInName::EndPrimitive_)
                    {
                        return &BuiltInFunction::kFunction_EndPrimitive_;
                    }
                    break;
                }
                case 0x0000023bu:
                {
                    if (name == BuiltInName::EmitVertex_)
                    {
                        return &BuiltInFunction::kFunction_EmitVertex_;
                    }
                    break;
                }
                case 0x00000270u:
                {
                    if (name == BuiltInName::gl_PerVertex)
                    {
                        return mVar_gl_PerVertex;
                    }
                    break;
                }
                case 0x0000035eu:
                {
                    if (name == BuiltInName::gl_PrimitiveIDIn)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveIDIn;
                    }
                    break;
                }
                case 0x00000397u:
                {
                    if (name == BuiltInName::gl_Position)
                    {
                        return mVar_gl_PositionGS;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_geometry_shader))
        {
            switch (nameHash)
            {
                case 0x00000007u:
                {
                    if (name == BuiltInName::gl_PrimitiveID)
                    {
                        return &BuiltInVariable::kVar_gl_PrimitiveID;
                    }
                    break;
                }
                case 0x00000015u:
                {
                    if (name == BuiltInName::gl_Layer)
                    {
                        return &BuiltInVariable::kVar_gl_Layer;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0x00000003u:
            {
                if (name == BuiltInName::textureProjGrad_00Q20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00Q20B10B10B;
                }
                break;
            }
            case 0x00000009u:
            {
                if (name == BuiltInName::modf_00B00B)
                {
                    return &BuiltInFunction::kFunction_modf_00B00B;
                }
                break;
            }
            case 0x0000000bu:
            {
                if (name == BuiltInName::notEqual_20D20D)
                {
                    return &BuiltInFunction::kFunction_notEqual_20D20D;
                }
                break;
            }
            case 0x0000000cu:
            {
                if (name == BuiltInName::textureLod_00I20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00I20B00B;
                }
                break;
            }
            case 0x00000012u:
            {
                if (name == BuiltInName::determinant_A0B)
                {
                    return &BuiltInFunction::kFunction_determinant_A0B;
                }
                break;
            }
            case 0x00000014u:
            {
                if (name == BuiltInName::tanh_30B)
                {
                    return &BuiltInFunction::kFunction_tanh_30B;
                }
                break;
            }
            case 0x0000001au:
            {
                if (name == BuiltInName::textureProj_00W30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00W30B;
                }
                break;
            }
            case 0x0000001du:
            {
                if (name == BuiltInName::isnan_30B)
                {
                    return &BuiltInFunction::kFunction_isnan_30B;
                }
                break;
            }
            case 0x00000021u:
            {
                if (name == BuiltInName::greaterThanEqual_20D20D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_20D20D;
                }
                break;
            }
            case 0x00000023u:
            {
                if (name == BuiltInName::outerProduct_20B30B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_20B30B;
                }
                break;
            }
            case 0x00000024u:
            {
                if (name == BuiltInName::textureOffset_00Z20B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00Z20B10C;
                }
                break;
            }
            case 0x00000025u:
            {
                if (name == BuiltInName::textureOffset_00K20B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00K20B10C;
                }
                break;
            }
            case 0x00000026u:
            {
                if (name == BuiltInName::roundEven_30B)
                {
                    return &BuiltInFunction::kFunction_roundEven_30B;
                }
                break;
            }
            case 0x00000027u:
            {
                if (name == BuiltInName::acosh_20B)
                {
                    return &BuiltInFunction::kFunction_acosh_20B;
                }
                break;
            }
            case 0x00000028u:
            {
                if (name == BuiltInName::atanh_10B)
                {
                    return &BuiltInFunction::kFunction_atanh_10B;
                }
                break;
            }
            case 0x00000030u:
            {
                if (name == BuiltInName::uintBitsToFloat_30D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_30D;
                }
                break;
            }
            case 0x00000031u:
            {
                if (name == BuiltInName::textureProjOffset_00W20B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00W20B10C;
                }
                break;
            }
            case 0x00000033u:
            {
                if (name == BuiltInName::transpose_70B)
                {
                    return &BuiltInFunction::kFunction_transpose_70B;
                }
                break;
            }
            case 0x00000034u:
            {
                if (name == BuiltInName::textureSize_00K00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00K00C;
                }
                break;
            }
            case 0x00000036u:
            {
                if (name == BuiltInName::textureProj_00I30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00I30B;
                }
                break;
            }
            case 0x00000040u:
            {
                if (name == BuiltInName::textureGradOffset_00X20B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00X20B20B20B20C;
                }
                break;
            }
            case 0x00000041u:
            {
                if (name == BuiltInName::textureLod_00Y20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00Y20B00B;
                }
                break;
            }
            case 0x00000046u:
            {
                if (name == BuiltInName::min_20D00D)
                {
                    return &BuiltInFunction::kFunction_min_20D00D;
                }
                break;
            }
            case 0x0000004bu:
            {
                if (name == BuiltInName::uintBitsToFloat_00D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_00D;
                }
                break;
            }
            case 0x00000055u:
            {
                if (name == BuiltInName::texture_00Z20B)
                {
                    return &BuiltInFunction::kFunction_texture_00Z20B;
                }
                break;
            }
            case 0x00000056u:
            {
                if (name == BuiltInName::min_10D10D)
                {
                    return &BuiltInFunction::kFunction_min_10D10D;
                }
                break;
            }
            case 0x00000058u:
            {
                if (name == BuiltInName::tanh_00B)
                {
                    return &BuiltInFunction::kFunction_tanh_00B;
                }
                break;
            }
            case 0x0000005au:
            {
                if (name == BuiltInName::textureGrad_00K20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00K20B10B10B;
                }
                break;
            }
            case 0x0000005fu:
            {
                if (name == BuiltInName::min_00C00C)
                {
                    return &BuiltInFunction::kFunction_min_00C00C;
                }
                break;
            }
            case 0x00000060u:
            {
                if (name == BuiltInName::abs_20C)
                {
                    return &BuiltInFunction::kFunction_abs_20C;
                }
                break;
            }
            case 0x00000062u:
            {
                if (name == BuiltInName::max_10C00C)
                {
                    return &BuiltInFunction::kFunction_max_10C00C;
                }
                break;
            }
            case 0x00000064u:
            {
                if (name == BuiltInName::matrixCompMult_D0BD0B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_D0BD0B;
                }
                break;
            }
            case 0x0000006au:
            {
                if (name == BuiltInName::equal_10D10D)
                {
                    return &BuiltInFunction::kFunction_equal_10D10D;
                }
                break;
            }
            case 0x0000006bu:
            {
                if (name == BuiltInName::textureLodOffset_00R20B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00R20B00B20C;
                }
                break;
            }
            case 0x0000006cu:
            {
                if (name == BuiltInName::textureProjOffset_00H20B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00H20B10C;
                }
                break;
            }
            case 0x0000006du:
            {
                if (name == BuiltInName::max_30D00D)
                {
                    return &BuiltInFunction::kFunction_max_30D00D;
                }
                break;
            }
            case 0x00000070u:
            {
                if (name == BuiltInName::intBitsToFloat_30C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_30C;
                }
                break;
            }
            case 0x00000075u:
            {
                if (name == BuiltInName::texelFetchOffset_00Z20C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00Z20C00C10C;
                }
                break;
            }
            case 0x00000079u:
            {
                if (name == BuiltInName::transpose_E0B)
                {
                    return &BuiltInFunction::kFunction_transpose_E0B;
                }
                break;
            }
            case 0x0000007cu:
            {
                if (name == BuiltInName::texelFetchOffset_00I20C00C20C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00I20C00C20C;
                }
                break;
            }
            case 0x0000007fu:
            {
                if (name == BuiltInName::textureProjGradOffset_00X30B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00X30B20B20B20C;
                }
                break;
            }
            case 0x00000083u:
            {
                if (name == BuiltInName::texelFetchOffset_00X20C00C20C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00X20C00C20C;
                }
                break;
            }
            case 0x00000086u:
            {
                if (name == BuiltInName::textureGrad_00d30B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00d30B20B20B;
                }
                break;
            }
            case 0x00000087u:
            {
                if (name == BuiltInName::modf_10B10B)
                {
                    return &BuiltInFunction::kFunction_modf_10B10B;
                }
                break;
            }
            case 0x00000088u:
            {
                if (name == BuiltInName::determinant_50B)
                {
                    return &BuiltInFunction::kFunction_determinant_50B;
                }
                break;
            }
            case 0x0000008bu:
            {
                if (name == BuiltInName::clamp_20C00C00C)
                {
                    return &BuiltInFunction::kFunction_clamp_20C00C00C;
                }
                break;
            }
            case 0x0000008cu:
            {
                if (name == BuiltInName::clamp_30C30C30C)
                {
                    return &BuiltInFunction::kFunction_clamp_30C30C30C;
                }
                break;
            }
            case 0x0000008du:
            {
                if (name == BuiltInName::textureLod_00R20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00R20B00B;
                }
                break;
            }
            case 0x00000091u:
            {
                if (name == BuiltInName::textureSize_00W00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00W00C;
                }
                break;
            }
            case 0x00000097u:
            {
                if (name == BuiltInName::rgb_2_yuv_20B00G)
                {
                    return &BuiltInFunction::kFunction_rgb_2_yuv_20B00G;
                }
                break;
            }
            case 0x00000098u:
            {
                if (name == BuiltInName::unpackUnorm2x16_00D)
                {
                    return &BuiltInFunction::kFunction_unpackUnorm2x16_00D;
                }
                break;
            }
            case 0x00000099u:
            {
                if (name == BuiltInName::sign_20C)
                {
                    return &BuiltInFunction::kFunction_sign_20C;
                }
                break;
            }
            case 0x0000009bu:
            {
                if (name == BuiltInName::outerProduct_30B10B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_30B10B;
                }
                break;
            }
            case 0x0000009du:
            {
                if (name == BuiltInName::textureGrad_00Z20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00Z20B10B10B;
                }
                break;
            }
            case 0x000000a1u:
            {
                if (name == BuiltInName::textureProj_00L30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00L30B;
                }
                break;
            }
            case 0x000000a4u:
            {
                if (name == BuiltInName::texture_00T20B)
                {
                    return &BuiltInFunction::kFunction_texture_00T20B;
                }
                break;
            }
            case 0x000000a8u:
            {
                if (name == BuiltInName::textureProjLod_00Q30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00Q30B00B;
                }
                break;
            }
            case 0x000000acu:
            {
                if (name == BuiltInName::texture_00Y20B)
                {
                    return &BuiltInFunction::kFunction_texture_00Y20B;
                }
                break;
            }
            case 0x000000adu:
            {
                if (name == BuiltInName::clamp_10D00D00D)
                {
                    return &BuiltInFunction::kFunction_clamp_10D00D00D;
                }
                break;
            }
            case 0x000000b0u:
            {
                if (name == BuiltInName::textureSize_00S00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00S00C;
                }
                break;
            }
            case 0x000000b3u:
            {
                if (name == BuiltInName::clamp_10D10D10D)
                {
                    return &BuiltInFunction::kFunction_clamp_10D10D10D;
                }
                break;
            }
            case 0x000000b6u:
            {
                if (name == BuiltInName::transpose_F0B)
                {
                    return &BuiltInFunction::kFunction_transpose_F0B;
                }
                break;
            }
            case 0x000000b8u:
            {
                if (name == BuiltInName::texelFetch_00I20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00I20C00C;
                }
                break;
            }
            case 0x000000bdu:
            {
                if (name == BuiltInName::gl_MaxProgramTexelOffset)
                {
                    return mVar_gl_MaxProgramTexelOffset;
                }
                break;
            }
            case 0x000000bfu:
            {
                if (name == BuiltInName::textureSize_00R00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00R00C;
                }
                break;
            }
            case 0x000000c1u:
            {
                if (name == BuiltInName::texelFetchExt_00U10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_00U10C00C;
                }
                break;
            }
            case 0x000000c4u:
            {
                if (name == BuiltInName::clamp_10C00C00C)
                {
                    return &BuiltInFunction::kFunction_clamp_10C00C00C;
                }
                break;
            }
            case 0x000000c6u:
            {
                if (name == BuiltInName::acosh_10B)
                {
                    return &BuiltInFunction::kFunction_acosh_10B;
                }
                break;
            }
            case 0x000000d1u:
            {
                if (name == BuiltInName::lessThan_20D20D)
                {
                    return &BuiltInFunction::kFunction_lessThan_20D20D;
                }
                break;
            }
            case 0x000000d2u:
            {
                if (name == BuiltInName::texture_00I20B)
                {
                    return &BuiltInFunction::kFunction_texture_00I20B;
                }
                break;
            }
            case 0x000000d3u:
            {
                if (name == BuiltInName::clamp_20C20C20C)
                {
                    return &BuiltInFunction::kFunction_clamp_20C20C20C;
                }
                break;
            }
            case 0x000000d4u:
            {
                if (name == BuiltInName::textureProj_00H20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00H20B;
                }
                break;
            }
            case 0x000000d6u:
            {
                if (name == BuiltInName::textureGrad_00I20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00I20B20B20B;
                }
                break;
            }
            case 0x000000d7u:
            {
                if (name == BuiltInName::floatBitsToInt_20B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_20B;
                }
                break;
            }
            case 0x000000d8u:
            {
                if (name == BuiltInName::textureLod_00J20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00J20B00B;
                }
                break;
            }
            case 0x000000dau:
            {
                if (name == BuiltInName::textureProjLodOffset_00X30B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00X30B00B20C;
                }
                break;
            }
            case 0x000000deu:
            {
                if (name == BuiltInName::textureLodOffset_00T20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00T20B00B10C;
                }
                break;
            }
            case 0x000000dfu:
            {
                if (name == BuiltInName::max_20D00D)
                {
                    return &BuiltInFunction::kFunction_max_20D00D;
                }
                break;
            }
            case 0x000000e0u:
            {
                if (name == BuiltInName::textureSize_00I00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00I00C;
                }
                break;
            }
            case 0x000000e3u:
            {
                if (name == BuiltInName::textureGradOffset_00Z20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00Z20B10B10B10C;
                }
                break;
            }
            case 0x000000e9u:
            {
                if (name == BuiltInName::texture_00L10B)
                {
                    return &BuiltInFunction::kFunction_texture_00L10B;
                }
                break;
            }
            case 0x000000eau:
            {
                if (name == BuiltInName::textureProjLod_00H20B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00H20B00B;
                }
                break;
            }
            case 0x000000f1u:
            {
                if (name == BuiltInName::gl_MaxVertexOutputVectors)
                {
                    return mVar_gl_MaxVertexOutputVectors;
                }
                break;
            }
            case 0x000000f2u:
            {
                if (name == BuiltInName::round_00B)
                {
                    return &BuiltInFunction::kFunction_round_00B;
                }
                break;
            }
            case 0x000000f9u:
            {
                if (name == BuiltInName::textureProjLod_00H30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00H30B00B;
                }
                break;
            }
            case 0x000000fau:
            {
                if (name == BuiltInName::notEqual_30D30D)
                {
                    return &BuiltInFunction::kFunction_notEqual_30D30D;
                }
                break;
            }
            case 0x000000fdu:
            {
                if (name == BuiltInName::greaterThan_30D30D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_30D30D;
                }
                break;
            }
            case 0x000000ffu:
            {
                if (name == BuiltInName::greaterThan_10D10D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_10D10D;
                }
                break;
            }
            case 0x00000101u:
            {
                if (name == BuiltInName::textureGrad_00e30B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00e30B10B10B;
                }
                break;
            }
            case 0x00000106u:
            {
                if (name == BuiltInName::floatBitsToUint_10B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_10B;
                }
                break;
            }
            case 0x0000010bu:
            {
                if (name == BuiltInName::greaterThan_20D20D)
                {
                    return &BuiltInFunction::kFunction_greaterThan_20D20D;
                }
                break;
            }
            case 0x0000010cu:
            {
                if (name == BuiltInName::textureProjGrad_00Q30B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00Q30B10B10B;
                }
                break;
            }
            case 0x00000112u:
            {
                if (name == BuiltInName::trunc_00B)
                {
                    return &BuiltInFunction::kFunction_trunc_00B;
                }
                break;
            }
            case 0x00000114u:
            {
                if (name == BuiltInName::sinh_30B)
                {
                    return &BuiltInFunction::kFunction_sinh_30B;
                }
                break;
            }
            case 0x00000119u:
            {
                if (name == BuiltInName::asinh_20B)
                {
                    return &BuiltInFunction::kFunction_asinh_20B;
                }
                break;
            }
            case 0x0000011eu:
            {
                if (name == BuiltInName::textureProjLod_00Q20B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00Q20B00B;
                }
                break;
            }
            case 0x00000120u:
            {
                if (name == BuiltInName::textureLod_00T20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00T20B00B;
                }
                break;
            }
            case 0x00000123u:
            {
                if (name == BuiltInName::outerProduct_10B20B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_10B20B;
                }
                break;
            }
            case 0x00000125u:
            {
                if (name == BuiltInName::texture_00Q10B)
                {
                    return &BuiltInFunction::kFunction_texture_00Q10B;
                }
                break;
            }
            case 0x00000127u:
            {
                if (name == BuiltInName::inverse_50B)
                {
                    return &BuiltInFunction::kFunction_inverse_50B;
                }
                break;
            }
            case 0x0000012bu:
            {
                if (name == BuiltInName::unpackHalf2x16_00D)
                {
                    return &BuiltInFunction::kFunction_unpackHalf2x16_00D;
                }
                break;
            }
            case 0x0000012eu:
            {
                if (name == BuiltInName::textureGrad_00S20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00S20B20B20B;
                }
                break;
            }
            case 0x0000012fu:
            {
                if (name == BuiltInName::max_10D00D)
                {
                    return &BuiltInFunction::kFunction_max_10D00D;
                }
                break;
            }
            case 0x00000132u:
            {
                if (name == BuiltInName::round_30B)
                {
                    return &BuiltInFunction::kFunction_round_30B;
                }
                break;
            }
            case 0x00000133u:
            {
                if (name == BuiltInName::textureGradOffset_00H10B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00H10B10B10B10C;
                }
                break;
            }
            case 0x00000137u:
            {
                if (name == BuiltInName::texture_00W10B)
                {
                    return &BuiltInFunction::kFunction_texture_00W10B;
                }
                break;
            }
            case 0x0000013au:
            {
                if (name == BuiltInName::textureProj_00W20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00W20B;
                }
                break;
            }
            case 0x0000013bu:
            {
                if (name == BuiltInName::textureGrad_00Y20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00Y20B20B20B;
                }
                break;
            }
            case 0x00000140u:
            {
                if (name == BuiltInName::texelFetch_00R20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00R20C00C;
                }
                break;
            }
            case 0x00000143u:
            {
                if (name == BuiltInName::texture_00J20B)
                {
                    return &BuiltInFunction::kFunction_texture_00J20B;
                }
                break;
            }
            case 0x0000014au:
            {
                if (name == BuiltInName::textureProjGrad_00I30B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00I30B20B20B;
                }
                break;
            }
            case 0x0000014bu:
            {
                if (name == BuiltInName::textureGrad_00W10B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00W10B10B10B;
                }
                break;
            }
            case 0x0000014cu:
            {
                if (name == BuiltInName::texture_00N10B)
                {
                    return &BuiltInFunction::kFunction_texture_00N10B;
                }
                break;
            }
            case 0x00000151u:
            {
                if (name == BuiltInName::lessThan_10D10D)
                {
                    return &BuiltInFunction::kFunction_lessThan_10D10D;
                }
                break;
            }
            case 0x00000153u:
            {
                if (name == BuiltInName::textureProj_00M20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00M20B;
                }
                break;
            }
            case 0x00000157u:
            {
                if (name == BuiltInName::yuv_2_rgb_20B00G)
                {
                    return &BuiltInFunction::kFunction_yuv_2_rgb_20B00G;
                }
                break;
            }
            case 0x0000015bu:
            {
                if (name == BuiltInName::isinf_30B)
                {
                    return &BuiltInFunction::kFunction_isinf_30B;
                }
                break;
            }
            case 0x0000015fu:
            {
                if (name == BuiltInName::outerProduct_20B20B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_20B20B;
                }
                break;
            }
            case 0x00000160u:
            {
                if (name == BuiltInName::textureLodOffset_00W10B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00W10B00B10C;
                }
                break;
            }
            case 0x00000163u:
            {
                if (name == BuiltInName::floatBitsToUint_20B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_20B;
                }
                break;
            }
            case 0x0000016au:
            {
                if (name == BuiltInName::textureProjGrad_00X30B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00X30B20B20B;
                }
                break;
            }
            case 0x0000016bu:
            {
                if (name == BuiltInName::modf_30B30B)
                {
                    return &BuiltInFunction::kFunction_modf_30B30B;
                }
                break;
            }
            case 0x0000016du:
            {
                if (name == BuiltInName::isnan_20B)
                {
                    return &BuiltInFunction::kFunction_isnan_20B;
                }
                break;
            }
            case 0x0000016fu:
            {
                if (name == BuiltInName::roundEven_20B)
                {
                    return &BuiltInFunction::kFunction_roundEven_20B;
                }
                break;
            }
            case 0x00000172u:
            {
                if (name == BuiltInName::atanh_00B)
                {
                    return &BuiltInFunction::kFunction_atanh_00B;
                }
                break;
            }
            case 0x00000173u:
            {
                if (name == BuiltInName::texture_00d30B)
                {
                    return &BuiltInFunction::kFunction_texture_00d30B;
                }
                break;
            }
            case 0x00000174u:
            {
                if (name == BuiltInName::textureProj_00Q30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00Q30B;
                }
                break;
            }
            case 0x00000175u:
            {
                if (name == BuiltInName::floatBitsToInt_30B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_30B;
                }
                break;
            }
            case 0x00000176u:
            {
                if (name == BuiltInName::texelFetchExt_00a10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_00a10C00C;
                }
                break;
            }
            case 0x00000177u:
            {
                if (name == BuiltInName::textureProjLodOffset_00Q20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00Q20B00B10C;
                }
                break;
            }
            case 0x00000179u:
            {
                if (name == BuiltInName::textureSize_00d00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00d00C;
                }
                break;
            }
            case 0x00000181u:
            {
                if (name == BuiltInName::max_00D00D)
                {
                    return &BuiltInFunction::kFunction_max_00D00D;
                }
                break;
            }
            case 0x00000184u:
            {
                if (name == BuiltInName::texelFetch_00L10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00L10C00C;
                }
                break;
            }
            case 0x00000187u:
            {
                if (name == BuiltInName::textureProjLodOffset_00H20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00H20B00B10C;
                }
                break;
            }
            case 0x0000018fu:
            {
                if (name == BuiltInName::uintBitsToFloat_10D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_10D;
                }
                break;
            }
            case 0x00000190u:
            {
                if (name == BuiltInName::cosh_00B)
                {
                    return &BuiltInFunction::kFunction_cosh_00B;
                }
                break;
            }
            case 0x00000193u:
            {
                if (name == BuiltInName::matrixCompMult_70B70B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_70B70B;
                }
                break;
            }
            case 0x00000195u:
            {
                if (name == BuiltInName::greaterThanEqual_10D10D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_10D10D;
                }
                break;
            }
            case 0x00000196u:
            {
                if (name == BuiltInName::textureProjOffset_00Q20B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00Q20B10C;
                }
                break;
            }
            case 0x00000199u:
            {
                if (name == BuiltInName::textureOffset_00W10B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00W10B10C;
                }
                break;
            }
            case 0x0000019au:
            {
                if (name == BuiltInName::textureProjGradOffset_00I30B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00I30B20B20B20C;
                }
                break;
            }
            case 0x000001a0u:
            {
                if (name == BuiltInName::abs_10C)
                {
                    return &BuiltInFunction::kFunction_abs_10C;
                }
                break;
            }
            case 0x000001a2u:
            {
                if (name == BuiltInName::tanh_10B)
                {
                    return &BuiltInFunction::kFunction_tanh_10B;
                }
                break;
            }
            case 0x000001a7u:
            {
                if (name == BuiltInName::texelFetchOffset_00H10C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00H10C00C10C;
                }
                break;
            }
            case 0x000001adu:
            {
                if (name == BuiltInName::textureLodOffset_00H10B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00H10B00B10C;
                }
                break;
            }
            case 0x000001afu:
            {
                if (name == BuiltInName::textureProjGrad_00W30B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00W30B10B10B;
                }
                break;
            }
            case 0x000001b1u:
            {
                if (name == BuiltInName::intBitsToFloat_20C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_20C;
                }
                break;
            }
            case 0x000001b4u:
            {
                if (name == BuiltInName::textureProj_00R30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00R30B;
                }
                break;
            }
            case 0x000001b7u:
            {
                if (name == BuiltInName::textureProj_00Q20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00Q20B;
                }
                break;
            }
            case 0x000001c0u:
            {
                if (name == BuiltInName::gl_MinProgramTexelOffset)
                {
                    return mVar_gl_MinProgramTexelOffset;
                }
                break;
            }
            case 0x000001c1u:
            {
                if (name == BuiltInName::max_30C00C)
                {
                    return &BuiltInFunction::kFunction_max_30C00C;
                }
                break;
            }
            case 0x000001c2u:
            {
                if (name == BuiltInName::textureProjGrad_00R30B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00R30B20B20B;
                }
                break;
            }
            case 0x000001c4u:
            {
                if (name == BuiltInName::sinh_20B)
                {
                    return &BuiltInFunction::kFunction_sinh_20B;
                }
                break;
            }
            case 0x000001c5u:
            {
                if (name == BuiltInName::textureGrad_00H10B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00H10B10B10B;
                }
                break;
            }
            case 0x000001c7u:
            {
                if (name == BuiltInName::outerProduct_30B20B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_30B20B;
                }
                break;
            }
            case 0x000001c8u:
            {
                if (name == BuiltInName::clamp_10C10C10C)
                {
                    return &BuiltInFunction::kFunction_clamp_10C10C10C;
                }
                break;
            }
            case 0x000001c9u:
            {
                if (name == BuiltInName::textureProjGradOffset_00H20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00H20B10B10B10C;
                }
                break;
            }
            case 0x000001cau:
            {
                if (name == BuiltInName::outerProduct_20B10B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_20B10B;
                }
                break;
            }
            case 0x000001cfu:
            {
                if (name == BuiltInName::textureProjLodOffset_00W30B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00W30B00B10C;
                }
                break;
            }
            case 0x000001d1u:
            {
                if (name == BuiltInName::sign_30C)
                {
                    return &BuiltInFunction::kFunction_sign_30C;
                }
                break;
            }
            case 0x000001d3u:
            {
                if (name == BuiltInName::textureSize_00J00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00J00C;
                }
                break;
            }
            case 0x000001ddu:
            {
                if (name == BuiltInName::textureLod_00H10B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00H10B00B;
                }
                break;
            }
            case 0x000001deu:
            {
                if (name == BuiltInName::roundEven_10B)
                {
                    return &BuiltInFunction::kFunction_roundEven_10B;
                }
                break;
            }
            case 0x000001e2u:
            {
                if (name == BuiltInName::atanh_30B)
                {
                    return &BuiltInFunction::kFunction_atanh_30B;
                }
                break;
            }
            case 0x000001ecu:
            {
                if (name == BuiltInName::isinf_00B)
                {
                    return &BuiltInFunction::kFunction_isinf_00B;
                }
                break;
            }
            case 0x000001eeu:
            {
                if (name == BuiltInName::textureProj_00L20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00L20B;
                }
                break;
            }
            case 0x000001f1u:
            {
                if (name == BuiltInName::texelFetch_00H10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00H10C00C;
                }
                break;
            }
            case 0x000001f4u:
            {
                if (name == BuiltInName::textureSize_00c00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00c00C;
                }
                break;
            }
            case 0x000001f7u:
            {
                if (name == BuiltInName::intBitsToFloat_10C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_10C;
                }
                break;
            }
            case 0x000001fbu:
            {
                if (name == BuiltInName::textureProjGrad_00H30B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00H30B10B10B;
                }
                break;
            }
            case 0x000001fdu:
            {
                if (name == BuiltInName::min_20C20C)
                {
                    return &BuiltInFunction::kFunction_min_20C20C;
                }
                break;
            }
            case 0x00000207u:
            {
                if (name == BuiltInName::mix_10B10B10E)
                {
                    return &BuiltInFunction::kFunction_mix_10B10B10E;
                }
                break;
            }
            case 0x00000208u:
            {
                if (name == BuiltInName::min_10C00C)
                {
                    return &BuiltInFunction::kFunction_min_10C00C;
                }
                break;
            }
            case 0x00000209u:
            {
                if (name == BuiltInName::textureGradOffset_00I20B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00I20B20B20B20C;
                }
                break;
            }
            case 0x0000020cu:
            {
                if (name == BuiltInName::transpose_50B)
                {
                    return &BuiltInFunction::kFunction_transpose_50B;
                }
                break;
            }
            case 0x0000020eu:
            {
                if (name == BuiltInName::texelFetch_00X20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00X20C00C;
                }
                break;
            }
            case 0x0000020fu:
            {
                if (name == BuiltInName::transpose_D0B)
                {
                    return &BuiltInFunction::kFunction_transpose_D0B;
                }
                break;
            }
            case 0x00000210u:
            {
                if (name == BuiltInName::textureLodOffset_00Q10B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00Q10B00B10C;
                }
                break;
            }
            case 0x00000211u:
            {
                if (name == BuiltInName::texture_00c20B)
                {
                    return &BuiltInFunction::kFunction_texture_00c20B;
                }
                break;
            }
            case 0x00000215u:
            {
                if (name == BuiltInName::textureOffset_00I20B20C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00I20B20C;
                }
                break;
            }
            case 0x0000021bu:
            {
                if (name == BuiltInName::textureSize_00e00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00e00C;
                }
                break;
            }
            case 0x0000021cu:
            {
                if (name == BuiltInName::textureProjGrad_00W20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00W20B10B10B;
                }
                break;
            }
            case 0x0000021eu:
            {
                if (name == BuiltInName::textureOffset_00T20B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00T20B10C;
                }
                break;
            }
            case 0x00000221u:
            {
                if (name == BuiltInName::inverse_A0B)
                {
                    return &BuiltInFunction::kFunction_inverse_A0B;
                }
                break;
            }
            case 0x00000226u:
            {
                if (name == BuiltInName::textureSize_00Y00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00Y00C;
                }
                break;
            }
            case 0x0000022cu:
            {
                if (name == BuiltInName::textureProjGrad_00c30B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00c30B10B10B;
                }
                break;
            }
            case 0x00000230u:
            {
                if (name == BuiltInName::min_30C00C)
                {
                    return &BuiltInFunction::kFunction_min_30C00C;
                }
                break;
            }
            case 0x00000237u:
            {
                if (name == BuiltInName::textureLodOffset_00X20B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00X20B00B20C;
                }
                break;
            }
            case 0x0000023eu:
            {
                if (name == BuiltInName::texelFetch_00Q10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00Q10C00C;
                }
                break;
            }
            case 0x00000240u:
            {
                if (name == BuiltInName::textureProjOffset_00H30B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00H30B10C;
                }
                break;
            }
            case 0x00000245u:
            {
                if (name == BuiltInName::inverse_F0B)
                {
                    return &BuiltInFunction::kFunction_inverse_F0B;
                }
                break;
            }
            case 0x00000247u:
            {
                if (name == BuiltInName::textureProjLod_00R30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00R30B00B;
                }
                break;
            }
            case 0x00000248u:
            {
                if (name == BuiltInName::acosh_00B)
                {
                    return &BuiltInFunction::kFunction_acosh_00B;
                }
                break;
            }
            case 0x00000253u:
            {
                if (name == BuiltInName::textureProjGradOffset_00R30B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00R30B20B20B20C;
                }
                break;
            }
            case 0x00000254u:
            {
                if (name == BuiltInName::clamp_20D20D20D)
                {
                    return &BuiltInFunction::kFunction_clamp_20D20D20D;
                }
                break;
            }
            case 0x00000255u:
            {
                if (name == BuiltInName::textureOffset_00Q10B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00Q10B10C;
                }
                break;
            }
            case 0x00000256u:
            {
                if (name == BuiltInName::clamp_00C00C00C)
                {
                    return &BuiltInFunction::kFunction_clamp_00C00C00C;
                }
                break;
            }
            case 0x0000025cu:
            {
                if (name == BuiltInName::textureProjGradOffset_00W20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00W20B10B10B10C;
                }
                break;
            }
            case 0x0000025eu:
            {
                if (name == BuiltInName::matrixCompMult_60B60B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_60B60B;
                }
                break;
            }
            case 0x00000261u:
            {
                if (name == BuiltInName::textureGradOffset_00Q10B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00Q10B10B10B10C;
                }
                break;
            }
            case 0x00000262u:
            {
                if (name == BuiltInName::unpackSnorm2x16_00D)
                {
                    return &BuiltInFunction::kFunction_unpackSnorm2x16_00D;
                }
                break;
            }
            case 0x00000263u:
            {
                if (name == BuiltInName::lessThan_30D30D)
                {
                    return &BuiltInFunction::kFunction_lessThan_30D30D;
                }
                break;
            }
            case 0x00000264u:
            {
                if (name == BuiltInName::clamp_30C00C00C)
                {
                    return &BuiltInFunction::kFunction_clamp_30C00C00C;
                }
                break;
            }
            case 0x00000267u:
            {
                if (name == BuiltInName::textureProjLodOffset_00I30B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00I30B00B20C;
                }
                break;
            }
            case 0x0000026au:
            {
                if (name == BuiltInName::trunc_30B)
                {
                    return &BuiltInFunction::kFunction_trunc_30B;
                }
                break;
            }
            case 0x0000026bu:
            {
                if (name == BuiltInName::matrixCompMult_E0BE0B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_E0BE0B;
                }
                break;
            }
            case 0x00000272u:
            {
                if (name == BuiltInName::textureLod_00c20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00c20B00B;
                }
                break;
            }
            case 0x00000277u:
            {
                if (name == BuiltInName::textureGradOffset_00e30B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00e30B10B10B10C;
                }
                break;
            }
            case 0x00000278u:
            {
                if (name == BuiltInName::textureProjOffset_00W30B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00W30B10C;
                }
                break;
            }
            case 0x00000279u:
            {
                if (name == BuiltInName::textureProj_00H30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00H30B;
                }
                break;
            }
            case 0x0000027du:
            {
                if (name == BuiltInName::texelFetchExt_00O10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetchExt_00O10C00C;
                }
                break;
            }
            case 0x00000280u:
            {
                if (name == BuiltInName::asinh_30B)
                {
                    return &BuiltInFunction::kFunction_asinh_30B;
                }
                break;
            }
            case 0x00000283u:
            {
                if (name == BuiltInName::outerProduct_10B30B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_10B30B;
                }
                break;
            }
            case 0x00000284u:
            {
                if (name == BuiltInName::textureOffset_00c20B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00c20B10C;
                }
                break;
            }
            case 0x00000286u:
            {
                if (name == BuiltInName::textureSizeExt_00a)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_00a;
                }
                break;
            }
            case 0x0000028bu:
            {
                if (name == BuiltInName::max_20D20D)
                {
                    return &BuiltInFunction::kFunction_max_20D20D;
                }
                break;
            }
            case 0x0000028cu:
            {
                if (name == BuiltInName::texture_00S20B)
                {
                    return &BuiltInFunction::kFunction_texture_00S20B;
                }
                break;
            }
            case 0x0000028du:
            {
                if (name == BuiltInName::max_10D10D)
                {
                    return &BuiltInFunction::kFunction_max_10D10D;
                }
                break;
            }
            case 0x0000028eu:
            {
                if (name == BuiltInName::textureOffset_00R20B20C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00R20B20C;
                }
                break;
            }
            case 0x0000028fu:
            {
                if (name == BuiltInName::texelFetchOffset_00R20C00C20C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00R20C00C20C;
                }
                break;
            }
            case 0x00000292u:
            {
                if (name == BuiltInName::textureSize_00Z00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00Z00C;
                }
                break;
            }
            case 0x00000294u:
            {
                if (name == BuiltInName::texelFetch_00T20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00T20C00C;
                }
                break;
            }
            case 0x00000299u:
            {
                if (name == BuiltInName::textureLod_00Q10B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00Q10B00B;
                }
                break;
            }
            case 0x0000029fu:
            {
                if (name == BuiltInName::textureGradOffset_00W10B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00W10B10B10B10C;
                }
                break;
            }
            case 0x000002a0u:
            {
                if (name == BuiltInName::round_20B)
                {
                    return &BuiltInFunction::kFunction_round_20B;
                }
                break;
            }
            case 0x000002a1u:
            {
                if (name == BuiltInName::matrixCompMult_90B90B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_90B90B;
                }
                break;
            }
            case 0x000002a2u:
            {
                if (name == BuiltInName::textureSizeExt_00U)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_00U;
                }
                break;
            }
            case 0x000002a5u:
            {
                if (name == BuiltInName::textureGrad_00Q10B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00Q10B10B10B;
                }
                break;
            }
            case 0x000002a7u:
            {
                if (name == BuiltInName::isnan_00B)
                {
                    return &BuiltInFunction::kFunction_isnan_00B;
                }
                break;
            }
            case 0x000002a8u:
            {
                if (name == BuiltInName::mix_00B00B00E)
                {
                    return &BuiltInFunction::kFunction_mix_00B00B00E;
                }
                break;
            }
            case 0x000002adu:
            {
                if (name == BuiltInName::textureProjOffset_00R30B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00R30B20C;
                }
                break;
            }
            case 0x000002afu:
            {
                if (name == BuiltInName::texelFetchOffset_00T20C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00T20C00C10C;
                }
                break;
            }
            case 0x000002b7u:
            {
                if (name == BuiltInName::textureProjOffset_00X30B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00X30B20C;
                }
                break;
            }
            case 0x000002b8u:
            {
                if (name == BuiltInName::modf_20B20B)
                {
                    return &BuiltInFunction::kFunction_modf_20B20B;
                }
                break;
            }
            case 0x000002b9u:
            {
                if (name == BuiltInName::textureProjGradOffset_00Q20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00Q20B10B10B10C;
                }
                break;
            }
            case 0x000002bfu:
            {
                if (name == BuiltInName::min_30D30D)
                {
                    return &BuiltInFunction::kFunction_min_30D30D;
                }
                break;
            }
            case 0x000002c2u:
            {
                if (name == BuiltInName::textureProjLod_00W30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00W30B00B;
                }
                break;
            }
            case 0x000002c6u:
            {
                if (name == BuiltInName::mix_20B20B20E)
                {
                    return &BuiltInFunction::kFunction_mix_20B20B20E;
                }
                break;
            }
            case 0x000002cbu:
            {
                if (name == BuiltInName::textureProjLod_00W20B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00W20B00B;
                }
                break;
            }
            case 0x000002ccu:
            {
                if (name == BuiltInName::floatBitsToInt_10B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_10B;
                }
                break;
            }
            case 0x000002cfu:
            {
                if (name == BuiltInName::min_30C30C)
                {
                    return &BuiltInFunction::kFunction_min_30C30C;
                }
                break;
            }
            case 0x000002d1u:
            {
                if (name == BuiltInName::textureProjLodOffset_00W20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00W20B00B10C;
                }
                break;
            }
            case 0x000002d2u:
            {
                if (name == BuiltInName::textureProj_00N30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00N30B;
                }
                break;
            }
            case 0x000002d3u:
            {
                if (name == BuiltInName::textureGrad_00J20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00J20B20B20B;
                }
                break;
            }
            case 0x000002d5u:
            {
                if (name == BuiltInName::equal_30D30D)
                {
                    return &BuiltInFunction::kFunction_equal_30D30D;
                }
                break;
            }
            case 0x000002d7u:
            {
                if (name == BuiltInName::max_20C00C)
                {
                    return &BuiltInFunction::kFunction_max_20C00C;
                }
                break;
            }
            case 0x000002dbu:
            {
                if (name == BuiltInName::packSnorm2x16_10B)
                {
                    return &BuiltInFunction::kFunction_packSnorm2x16_10B;
                }
                break;
            }
            case 0x000002dcu:
            {
                if (name == BuiltInName::textureProjGrad_00H20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureProjGrad_00H20B10B10B;
                }
                break;
            }
            case 0x000002ddu:
            {
                if (name == BuiltInName::floatBitsToUint_30B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_30B;
                }
                break;
            }
            case 0x000002deu:
            {
                if (name == BuiltInName::lessThanEqual_30D30D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_30D30D;
                }
                break;
            }
            case 0x000002e1u:
            {
                if (name == BuiltInName::asinh_00B)
                {
                    return &BuiltInFunction::kFunction_asinh_00B;
                }
                break;
            }
            case 0x000002e2u:
            {
                if (name == BuiltInName::textureSizeExt_00O)
                {
                    return &BuiltInFunction::kFunction_textureSizeExt_00O;
                }
                break;
            }
            case 0x000002e4u:
            {
                if (name == BuiltInName::textureProjLod_00X30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00X30B00B;
                }
                break;
            }
            case 0x000002e7u:
            {
                if (name == BuiltInName::cosh_30B)
                {
                    return &BuiltInFunction::kFunction_cosh_30B;
                }
                break;
            }
            case 0x000002e9u:
            {
                if (name == BuiltInName::textureLod_00W10B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00W10B00B;
                }
                break;
            }
            case 0x000002f0u:
            {
                if (name == BuiltInName::min_20D20D)
                {
                    return &BuiltInFunction::kFunction_min_20D20D;
                }
                break;
            }
            case 0x000002f4u:
            {
                if (name == BuiltInName::textureLod_00X20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00X20B00B;
                }
                break;
            }
            case 0x000002f5u:
            {
                if (name == BuiltInName::textureGradOffset_00c20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00c20B10B10B10C;
                }
                break;
            }
            case 0x000002f8u:
            {
                if (name == BuiltInName::texelFetch_00W10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00W10C00C;
                }
                break;
            }
            case 0x000002fau:
            {
                if (name == BuiltInName::matrixCompMult_B0BB0B)
                {
                    return &BuiltInFunction::kFunction_matrixCompMult_B0BB0B;
                }
                break;
            }
            case 0x00000300u:
            {
                if (name == BuiltInName::tanh_20B)
                {
                    return &BuiltInFunction::kFunction_tanh_20B;
                }
                break;
            }
            case 0x00000302u:
            {
                if (name == BuiltInName::textureProjGradOffset_00Q30B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00Q30B10B10B10C;
                }
                break;
            }
            case 0x00000306u:
            {
                if (name == BuiltInName::abs_00C)
                {
                    return &BuiltInFunction::kFunction_abs_00C;
                }
                break;
            }
            case 0x00000309u:
            {
                if (name == BuiltInName::texture_00X20B)
                {
                    return &BuiltInFunction::kFunction_texture_00X20B;
                }
                break;
            }
            case 0x00000312u:
            {
                if (name == BuiltInName::sinh_00B)
                {
                    return &BuiltInFunction::kFunction_sinh_00B;
                }
                break;
            }
            case 0x00000313u:
            {
                if (name == BuiltInName::textureLodOffset_00K20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00K20B00B10C;
                }
                break;
            }
            case 0x00000314u:
            {
                if (name == BuiltInName::textureProjLodOffset_00c30B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00c30B00B10C;
                }
                break;
            }
            case 0x00000318u:
            {
                if (name == BuiltInName::textureOffset_00X20B20C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00X20B20C;
                }
                break;
            }
            case 0x00000319u:
            {
                if (name == BuiltInName::outerProduct_30B30B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_30B30B;
                }
                break;
            }
            case 0x00000320u:
            {
                if (name == BuiltInName::sign_00C)
                {
                    return &BuiltInFunction::kFunction_sign_00C;
                }
                break;
            }
            case 0x00000323u:
            {
                if (name == BuiltInName::textureLod_00Z20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00Z20B00B;
                }
                break;
            }
            case 0x00000325u:
            {
                if (name == BuiltInName::texelFetchOffset_00Q10C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00Q10C00C10C;
                }
                break;
            }
            case 0x00000326u:
            {
                if (name == BuiltInName::transpose_60B)
                {
                    return &BuiltInFunction::kFunction_transpose_60B;
                }
                break;
            }
            case 0x0000032au:
            {
                if (name == BuiltInName::acosh_30B)
                {
                    return &BuiltInFunction::kFunction_acosh_30B;
                }
                break;
            }
            case 0x0000032cu:
            {
                if (name == BuiltInName::max_30C30C)
                {
                    return &BuiltInFunction::kFunction_max_30C30C;
                }
                break;
            }
            case 0x0000032du:
            {
                if (name == BuiltInName::uintBitsToFloat_20D)
                {
                    return &BuiltInFunction::kFunction_uintBitsToFloat_20D;
                }
                break;
            }
            case 0x00000333u:
            {
                if (name == BuiltInName::notEqual_10D10D)
                {
                    return &BuiltInFunction::kFunction_notEqual_10D10D;
                }
                break;
            }
            case 0x00000335u:
            {
                if (name == BuiltInName::textureLodOffset_00Z20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00Z20B00B10C;
                }
                break;
            }
            case 0x00000336u:
            {
                if (name == BuiltInName::packUnorm2x16_10B)
                {
                    return &BuiltInFunction::kFunction_packUnorm2x16_10B;
                }
                break;
            }
            case 0x00000339u:
            {
                if (name == BuiltInName::min_20C00C)
                {
                    return &BuiltInFunction::kFunction_min_20C00C;
                }
                break;
            }
            case 0x0000033eu:
            {
                if (name == BuiltInName::equal_20D20D)
                {
                    return &BuiltInFunction::kFunction_equal_20D20D;
                }
                break;
            }
            case 0x00000340u:
            {
                if (name == BuiltInName::textureGradOffset_00R20B20B20B20C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00R20B20B20B20C;
                }
                break;
            }
            case 0x00000344u:
            {
                if (name == BuiltInName::textureSize_00L00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00L00C;
                }
                break;
            }
            case 0x00000345u:
            {
                if (name == BuiltInName::textureProjGradOffset_00H30B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00H30B10B10B10C;
                }
                break;
            }
            case 0x00000346u:
            {
                if (name == BuiltInName::min_10D00D)
                {
                    return &BuiltInFunction::kFunction_min_10D00D;
                }
                break;
            }
            case 0x00000347u:
            {
                if (name == BuiltInName::roundEven_00B)
                {
                    return &BuiltInFunction::kFunction_roundEven_00B;
                }
                break;
            }
            case 0x00000349u:
            {
                if (name == BuiltInName::atanh_20B)
                {
                    return &BuiltInFunction::kFunction_atanh_20B;
                }
                break;
            }
            case 0x0000034au:
            {
                if (name == BuiltInName::clamp_20D00D00D)
                {
                    return &BuiltInFunction::kFunction_clamp_20D00D00D;
                }
                break;
            }
            case 0x0000034bu:
            {
                if (name == BuiltInName::isinf_10B)
                {
                    return &BuiltInFunction::kFunction_isinf_10B;
                }
                break;
            }
            case 0x0000034eu:
            {
                if (name == BuiltInName::intBitsToFloat_00C)
                {
                    return &BuiltInFunction::kFunction_intBitsToFloat_00C;
                }
                break;
            }
            case 0x0000034fu:
            {
                if (name == BuiltInName::packHalf2x16_10B)
                {
                    return &BuiltInFunction::kFunction_packHalf2x16_10B;
                }
                break;
            }
            case 0x00000352u:
            {
                if (name == BuiltInName::textureGrad_00c20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00c20B10B10B;
                }
                break;
            }
            case 0x00000358u:
            {
                if (name == BuiltInName::max_10C10C)
                {
                    return &BuiltInFunction::kFunction_max_10C10C;
                }
                break;
            }
            case 0x00000361u:
            {
                if (name == BuiltInName::abs_30C)
                {
                    return &BuiltInFunction::kFunction_abs_30C;
                }
                break;
            }
            case 0x00000368u:
            {
                if (name == BuiltInName::clamp_30D30D30D)
                {
                    return &BuiltInFunction::kFunction_clamp_30D30D30D;
                }
                break;
            }
            case 0x0000036cu:
            {
                if (name == BuiltInName::textureSize_00Q00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00Q00C;
                }
                break;
            }
            case 0x00000370u:
            {
                if (name == BuiltInName::determinant_F0B)
                {
                    return &BuiltInFunction::kFunction_determinant_F0B;
                }
                break;
            }
            case 0x00000371u:
            {
                if (name == BuiltInName::mix_30B30B30E)
                {
                    return &BuiltInFunction::kFunction_mix_30B30B30E;
                }
                break;
            }
            case 0x00000373u:
            {
                if (name == BuiltInName::texelFetchOffset_00K20C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00K20C00C10C;
                }
                break;
            }
            case 0x00000379u:
            {
                if (name == BuiltInName::lessThanEqual_20D20D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_20D20D;
                }
                break;
            }
            case 0x0000037au:
            {
                if (name == BuiltInName::textureLod_00S20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00S20B00B;
                }
                break;
            }
            case 0x0000037du:
            {
                if (name == BuiltInName::cosh_10B)
                {
                    return &BuiltInFunction::kFunction_cosh_10B;
                }
                break;
            }
            case 0x0000037eu:
            {
                if (name == BuiltInName::sign_10C)
                {
                    return &BuiltInFunction::kFunction_sign_10C;
                }
                break;
            }
            case 0x00000381u:
            {
                if (name == BuiltInName::textureProj_00M30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00M30B;
                }
                break;
            }
            case 0x00000383u:
            {
                if (name == BuiltInName::max_30D30D)
                {
                    return &BuiltInFunction::kFunction_max_30D30D;
                }
                break;
            }
            case 0x00000385u:
            {
                if (name == BuiltInName::textureGrad_00R20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00R20B20B20B;
                }
                break;
            }
            case 0x00000386u:
            {
                if (name == BuiltInName::transpose_B0B)
                {
                    return &BuiltInFunction::kFunction_transpose_B0B;
                }
                break;
            }
            case 0x0000038bu:
            {
                if (name == BuiltInName::textureSize_00M00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00M00C;
                }
                break;
            }
            case 0x0000038fu:
            {
                if (name == BuiltInName::textureProjLodOffset_00R30B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00R30B00B20C;
                }
                break;
            }
            case 0x00000392u:
            {
                if (name == BuiltInName::clamp_00D00D00D)
                {
                    return &BuiltInFunction::kFunction_clamp_00D00D00D;
                }
                break;
            }
            case 0x00000394u:
            {
                if (name == BuiltInName::textureLodOffset_00c20B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00c20B00B10C;
                }
                break;
            }
            case 0x00000399u:
            {
                if (name == BuiltInName::texture_00K20B)
                {
                    return &BuiltInFunction::kFunction_texture_00K20B;
                }
                break;
            }
            case 0x0000039du:
            {
                if (name == BuiltInName::sinh_10B)
                {
                    return &BuiltInFunction::kFunction_sinh_10B;
                }
                break;
            }
            case 0x000003a1u:
            {
                if (name == BuiltInName::texture_00M10B)
                {
                    return &BuiltInFunction::kFunction_texture_00M10B;
                }
                break;
            }
            case 0x000003a4u:
            {
                if (name == BuiltInName::textureOffset_00H10B10C)
                {
                    return &BuiltInFunction::kFunction_textureOffset_00H10B10C;
                }
                break;
            }
            case 0x000003a7u:
            {
                if (name == BuiltInName::textureProjOffset_00Q30B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00Q30B10C;
                }
                break;
            }
            case 0x000003a8u:
            {
                if (name == BuiltInName::transpose_90B)
                {
                    return &BuiltInFunction::kFunction_transpose_90B;
                }
                break;
            }
            case 0x000003abu:
            {
                if (name == BuiltInName::texelFetch_00M10C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00M10C00C;
                }
                break;
            }
            case 0x000003aeu:
            {
                if (name == BuiltInName::texelFetch_00Z20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00Z20C00C;
                }
                break;
            }
            case 0x000003b1u:
            {
                if (name == BuiltInName::textureProjLod_00I30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00I30B00B;
                }
                break;
            }
            case 0x000003b4u:
            {
                if (name == BuiltInName::cosh_20B)
                {
                    return &BuiltInFunction::kFunction_cosh_20B;
                }
                break;
            }
            case 0x000003bfu:
            {
                if (name == BuiltInName::min_00D00D)
                {
                    return &BuiltInFunction::kFunction_min_00D00D;
                }
                break;
            }
            case 0x000003c0u:
            {
                if (name == BuiltInName::outerProduct_10B10B)
                {
                    return &BuiltInFunction::kFunction_outerProduct_10B10B;
                }
                break;
            }
            case 0x000003c1u:
            {
                if (name == BuiltInName::lessThanEqual_10D10D)
                {
                    return &BuiltInFunction::kFunction_lessThanEqual_10D10D;
                }
                break;
            }
            case 0x000003c2u:
            {
                if (name == BuiltInName::textureProj_00c30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00c30B;
                }
                break;
            }
            case 0x000003c3u:
            {
                if (name == BuiltInName::trunc_20B)
                {
                    return &BuiltInFunction::kFunction_trunc_20B;
                }
                break;
            }
            case 0x000003c7u:
            {
                if (name == BuiltInName::textureProjOffset_00I30B20C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00I30B20C;
                }
                break;
            }
            case 0x000003c8u:
            {
                if (name == BuiltInName::max_00C00C)
                {
                    return &BuiltInFunction::kFunction_max_00C00C;
                }
                break;
            }
            case 0x000003cdu:
            {
                if (name == BuiltInName::textureProj_00N20B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00N20B;
                }
                break;
            }
            case 0x000003d4u:
            {
                if (name == BuiltInName::textureProjOffset_00c30B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjOffset_00c30B10C;
                }
                break;
            }
            case 0x000003d5u:
            {
                if (name == BuiltInName::textureLod_00K20B00B)
                {
                    return &BuiltInFunction::kFunction_textureLod_00K20B00B;
                }
                break;
            }
            case 0x000003d6u:
            {
                if (name == BuiltInName::greaterThanEqual_30D30D)
                {
                    return &BuiltInFunction::kFunction_greaterThanEqual_30D30D;
                }
                break;
            }
            case 0x000003dbu:
            {
                if (name == BuiltInName::isinf_20B)
                {
                    return &BuiltInFunction::kFunction_isinf_20B;
                }
                break;
            }
            case 0x000003dcu:
            {
                if (name == BuiltInName::transpose_A0B)
                {
                    return &BuiltInFunction::kFunction_transpose_A0B;
                }
                break;
            }
            case 0x000003e0u:
            {
                if (name == BuiltInName::texture_00e30B)
                {
                    return &BuiltInFunction::kFunction_texture_00e30B;
                }
                break;
            }
            case 0x000003e1u:
            {
                if (name == BuiltInName::textureGrad_00T20B10B10B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00T20B10B10B;
                }
                break;
            }
            case 0x000003e4u:
            {
                if (name == BuiltInName::textureSize_00T00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00T00C;
                }
                break;
            }
            case 0x000003e9u:
            {
                if (name == BuiltInName::textureGrad_00X20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureGrad_00X20B20B20B;
                }
                break;
            }
            case 0x000003eau:
            {
                if (name == BuiltInName::round_10B)
                {
                    return &BuiltInFunction::kFunction_round_10B;
                }
                break;
            }
            case 0x000003ebu:
            {
                if (name == BuiltInName::textureProjLod_00c30B00B)
                {
                    return &BuiltInFunction::kFunction_textureProjLod_00c30B00B;
                }
                break;
            }
            case 0x000003edu:
            {
                if (name == BuiltInName::textureGradOffset_00K20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00K20B10B10B10C;
                }
                break;
            }
            case 0x000003f1u:
            {
                if (name == BuiltInName::texelFetchOffset_00W10C00C10C)
                {
                    return &BuiltInFunction::kFunction_texelFetchOffset_00W10C00C10C;
                }
                break;
            }
            case 0x000003f2u:
            {
                if (name == BuiltInName::min_10C10C)
                {
                    return &BuiltInFunction::kFunction_min_10C10C;
                }
                break;
            }
            case 0x000003f4u:
            {
                if (name == BuiltInName::gl_MaxFragmentInputVectors)
                {
                    return mVar_gl_MaxFragmentInputVectors;
                }
                break;
            }
            case 0x000003f7u:
            {
                if (name == BuiltInName::textureProjGradOffset_00W30B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00W30B10B10B10C;
                }
                break;
            }
            case 0x000003f8u:
            {
                if (name == BuiltInName::texture_00R20B)
                {
                    return &BuiltInFunction::kFunction_texture_00R20B;
                }
                break;
            }
            case 0x000003f9u:
            {
                if (name == BuiltInName::textureLodOffset_00I20B00B20C)
                {
                    return &BuiltInFunction::kFunction_textureLodOffset_00I20B00B20C;
                }
                break;
            }
            case 0x00000401u:
            {
                if (name == BuiltInName::max_20C20C)
                {
                    return &BuiltInFunction::kFunction_max_20C20C;
                }
                break;
            }
            case 0x00000403u:
            {
                if (name == BuiltInName::isnan_10B)
                {
                    return &BuiltInFunction::kFunction_isnan_10B;
                }
                break;
            }
            case 0x00000409u:
            {
                if (name == BuiltInName::textureSize_00X00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00X00C;
                }
                break;
            }
            case 0x0000040au:
            {
                if (name == BuiltInName::texelFetch_00K20C00C)
                {
                    return &BuiltInFunction::kFunction_texelFetch_00K20C00C;
                }
                break;
            }
            case 0x0000040du:
            {
                if (name == BuiltInName::trunc_10B)
                {
                    return &BuiltInFunction::kFunction_trunc_10B;
                }
                break;
            }
            case 0x00000410u:
            {
                if (name == BuiltInName::textureProj_00X30B)
                {
                    return &BuiltInFunction::kFunction_textureProj_00X30B;
                }
                break;
            }
            case 0x00000415u:
            {
                if (name == BuiltInName::clamp_30D00D00D)
                {
                    return &BuiltInFunction::kFunction_clamp_30D00D00D;
                }
                break;
            }
            case 0x0000041au:
            {
                if (name == BuiltInName::min_30D00D)
                {
                    return &BuiltInFunction::kFunction_min_30D00D;
                }
                break;
            }
            case 0x0000041bu:
            {
                if (name == BuiltInName::floatBitsToInt_00B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToInt_00B;
                }
                break;
            }
            case 0x0000041eu:
            {
                if (name == BuiltInName::textureSize_00H00C)
                {
                    return &BuiltInFunction::kFunction_textureSize_00H00C;
                }
                break;
            }
            case 0x00000422u:
            {
                if (name == BuiltInName::textureProjGradOffset_00c30B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjGradOffset_00c30B10B10B10C;
                }
                break;
            }
            case 0x00000425u:
            {
                if (name == BuiltInName::floatBitsToUint_00B)
                {
                    return &BuiltInFunction::kFunction_floatBitsToUint_00B;
                }
                break;
            }
            case 0x0000042fu:
            {
                if (name == BuiltInName::textureProjLodOffset_00Q30B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00Q30B00B10C;
                }
                break;
            }
            case 0x00000430u:
            {
                if (name == BuiltInName::textureProjLodOffset_00H30B00B10C)
                {
                    return &BuiltInFunction::kFunction_textureProjLodOffset_00H30B00B10C;
                }
                break;
            }
            case 0x00000431u:
            {
                if (name == BuiltInName::asinh_10B)
                {
                    return &BuiltInFunction::kFunction_asinh_10B;
                }
                break;
            }
            case 0x00000433u:
            {
                if (name == BuiltInName::texture_00H10B)
                {
                    return &BuiltInFunction::kFunction_texture_00H10B;
                }
                break;
            }
            case 0x00000435u:
            {
                if (name == BuiltInName::textureGradOffset_00T20B10B10B10C)
                {
                    return &BuiltInFunction::kFunction_textureGradOffset_00T20B10B10B10C;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000000eu:
                {
                    if (name == BuiltInName::textureOffset_00K20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00K20B10C00B;
                    }
                    break;
                }
                case 0x00000016u:
                {
                    if (name == BuiltInName::dFdx_30B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_30B;
                    }
                    break;
                }
                case 0x00000050u:
                {
                    if (name == BuiltInName::textureProjOffset_00W30B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00W30B10C00B;
                    }
                    break;
                }
                case 0x0000005eu:
                {
                    if (name == BuiltInName::textureProj_00L20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00L20B00B;
                    }
                    break;
                }
                case 0x00000076u:
                {
                    if (name == BuiltInName::textureProj_00R30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00R30B00B;
                    }
                    break;
                }
                case 0x0000007bu:
                {
                    if (name == BuiltInName::textureProjOffset_00W20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00W20B10C00B;
                    }
                    break;
                }
                case 0x0000008eu:
                {
                    if (name == BuiltInName::texture_00R20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00R20B00B;
                    }
                    break;
                }
                case 0x000000a3u:
                {
                    if (name == BuiltInName::textureOffset_00Q10B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00Q10B10C00B;
                    }
                    break;
                }
                case 0x000000c2u:
                {
                    if (name == BuiltInName::textureOffset_00Z20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00Z20B10C00B;
                    }
                    break;
                }
                case 0x000000c5u:
                {
                    if (name == BuiltInName::textureProj_00I30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00I30B00B;
                    }
                    break;
                }
                case 0x000000c9u:
                {
                    if (name == BuiltInName::textureOffset_00X20B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00X20B20C00B;
                    }
                    break;
                }
                case 0x000000ccu:
                {
                    if (name == BuiltInName::textureProj_00M30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00M30B00B;
                    }
                    break;
                }
                case 0x000000ceu:
                {
                    if (name == BuiltInName::textureProjOffset_00H20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00H20B10C00B;
                    }
                    break;
                }
                case 0x000000e7u:
                {
                    if (name == BuiltInName::gl_FragDepth)
                    {
                        return &BuiltInVariable::kVar_gl_FragDepth;
                    }
                    break;
                }
                case 0x000000e8u:
                {
                    if (name == BuiltInName::texture_00T20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00T20B00B;
                    }
                    break;
                }
                case 0x000000f7u:
                {
                    if (name == BuiltInName::fwidth_10B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_10B;
                    }
                    break;
                }
                case 0x0000010du:
                {
                    if (name == BuiltInName::textureProj_00Q30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00Q30B00B;
                    }
                    break;
                }
                case 0x0000010eu:
                {
                    if (name == BuiltInName::textureProj_00H30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00H30B00B;
                    }
                    break;
                }
                case 0x00000113u:
                {
                    if (name == BuiltInName::texture_00Z20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00Z20B00B;
                    }
                    break;
                }
                case 0x0000011cu:
                {
                    if (name == BuiltInName::textureProj_00W30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00W30B00B;
                    }
                    break;
                }
                case 0x0000012cu:
                {
                    if (name == BuiltInName::textureProjOffset_00I30B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00I30B20C00B;
                    }
                    break;
                }
                case 0x0000013cu:
                {
                    if (name == BuiltInName::texture_00Q10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00Q10B00B;
                    }
                    break;
                }
                case 0x00000147u:
                {
                    if (name == BuiltInName::dFdx_20B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_20B;
                    }
                    break;
                }
                case 0x00000170u:
                {
                    if (name == BuiltInName::fwidth_00B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_00B;
                    }
                    break;
                }
                case 0x00000171u:
                {
                    if (name == BuiltInName::dFdy_10B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_10B;
                    }
                    break;
                }
                case 0x000001a6u:
                {
                    if (name == BuiltInName::dFdx_10B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_10B;
                    }
                    break;
                }
                case 0x000001cdu:
                {
                    if (name == BuiltInName::textureOffset_00W10B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00W10B10C00B;
                    }
                    break;
                }
                case 0x000001d8u:
                {
                    if (name == BuiltInName::texture_00Y20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00Y20B00B;
                    }
                    break;
                }
                case 0x000001fau:
                {
                    if (name == BuiltInName::texture_00J20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00J20B00B;
                    }
                    break;
                }
                case 0x00000212u:
                {
                    if (name == BuiltInName::textureOffset_00I20B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00I20B20C00B;
                    }
                    break;
                }
                case 0x0000021fu:
                {
                    if (name == BuiltInName::textureOffset_00R20B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00R20B20C00B;
                    }
                    break;
                }
                case 0x00000223u:
                {
                    if (name == BuiltInName::textureProjOffset_00H30B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00H30B10C00B;
                    }
                    break;
                }
                case 0x00000228u:
                {
                    if (name == BuiltInName::textureProjOffset_00X30B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00X30B20C00B;
                    }
                    break;
                }
                case 0x00000231u:
                {
                    if (name == BuiltInName::texture_00c20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00c20B00B;
                    }
                    break;
                }
                case 0x00000232u:
                {
                    if (name == BuiltInName::textureProj_00W20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00W20B00B;
                    }
                    break;
                }
                case 0x00000233u:
                {
                    if (name == BuiltInName::texture_00X20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00X20B00B;
                    }
                    break;
                }
                case 0x00000242u:
                {
                    if (name == BuiltInName::textureProj_00H20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00H20B00B;
                    }
                    break;
                }
                case 0x00000271u:
                {
                    if (name == BuiltInName::textureProj_00X30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00X30B00B;
                    }
                    break;
                }
                case 0x000002bbu:
                {
                    if (name == BuiltInName::texture_00H10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00H10B00B;
                    }
                    break;
                }
                case 0x000002c7u:
                {
                    if (name == BuiltInName::fwidth_30B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_30B;
                    }
                    break;
                }
                case 0x000002dau:
                {
                    if (name == BuiltInName::textureProj_00c30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00c30B00B;
                    }
                    break;
                }
                case 0x000002e6u:
                {
                    if (name == BuiltInName::texture_00I20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00I20B00B;
                    }
                    break;
                }
                case 0x000002e8u:
                {
                    if (name == BuiltInName::texture_00W10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00W10B00B;
                    }
                    break;
                }
                case 0x00000301u:
                {
                    if (name == BuiltInName::dFdx_00B)
                    {
                        return &BuiltInFunction::kFunction_dFdx_00B;
                    }
                    break;
                }
                case 0x0000032bu:
                {
                    if (name == BuiltInName::dFdy_20B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_20B;
                    }
                    break;
                }
                case 0x00000331u:
                {
                    if (name == BuiltInName::textureOffset_00c20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00c20B10C00B;
                    }
                    break;
                }
                case 0x0000033au:
                {
                    if (name == BuiltInName::textureProjOffset_00c30B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00c30B10C00B;
                    }
                    break;
                }
                case 0x00000348u:
                {
                    if (name == BuiltInName::dFdy_30B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_30B;
                    }
                    break;
                }
                case 0x00000357u:
                {
                    if (name == BuiltInName::texture_00K20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00K20B00B;
                    }
                    break;
                }
                case 0x00000387u:
                {
                    if (name == BuiltInName::fwidth_20B)
                    {
                        return &BuiltInFunction::kFunction_fwidth_20B;
                    }
                    break;
                }
                case 0x000003a3u:
                {
                    if (name == BuiltInName::texture_00S20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00S20B00B;
                    }
                    break;
                }
                case 0x000003b9u:
                {
                    if (name == BuiltInName::textureOffset_00T20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00T20B10C00B;
                    }
                    break;
                }
                case 0x000003bau:
                {
                    if (name == BuiltInName::texture_00d30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00d30B00B;
                    }
                    break;
                }
                case 0x000003d0u:
                {
                    if (name == BuiltInName::textureProjOffset_00Q30B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00Q30B10C00B;
                    }
                    break;
                }
                case 0x000003d2u:
                {
                    if (name == BuiltInName::textureOffset_00H10B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureOffset_00H10B10C00B;
                    }
                    break;
                }
                case 0x000003e2u:
                {
                    if (name == BuiltInName::textureProjOffset_00Q20B10C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00Q20B10C00B;
                    }
                    break;
                }
                case 0x00000402u:
                {
                    if (name == BuiltInName::textureProj_00L30B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00L30B00B;
                    }
                    break;
                }
                case 0x00000404u:
                {
                    if (name == BuiltInName::textureProjOffset_00R30B20C00B)
                    {
                        return &BuiltInFunction::kFunction_textureProjOffset_00R30B20C00B;
                    }
                    break;
                }
                case 0x00000408u:
                {
                    if (name == BuiltInName::texture_00L10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00L10B00B;
                    }
                    break;
                }
                case 0x00000419u:
                {
                    if (name == BuiltInName::dFdy_00B)
                    {
                        return &BuiltInFunction::kFunction_dFdy_00B;
                    }
                    break;
                }
                case 0x00000420u:
                {
                    if (name == BuiltInName::texture_00M10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture_00M10B00B;
                    }
                    break;
                }
                case 0x00000423u:
                {
                    if (name == BuiltInName::textureProj_00Q20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00Q20B00B;
                    }
                    break;
                }
                case 0x00000424u:
                {
                    if (name == BuiltInName::textureProj_00M20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureProj_00M20B00B;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000023au:
                {
                    if (name == BuiltInName::gl_InstanceID)
                    {
                        return &BuiltInVariable::kVar_gl_InstanceID;
                    }
                    break;
                }
                case 0x00000380u:
                {
                    if (name == BuiltInName::gl_VertexID)
                    {
                        return &BuiltInVariable::kVar_gl_VertexID;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_multi_draw))
        {
            switch (nameHash)
            {
                case 0x00000436u:
                {
                    if (name == BuiltInName::gl_DrawID)
                    {
                        return &BuiltInVariable::kVar_gl_DrawID;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_base_vertex_base_instance))
        {
            switch (nameHash)
            {
                case 0x00000008u:
                {
                    if (name == BuiltInName::gl_BaseInstance)
                    {
                        return &BuiltInVariable::kVar_gl_BaseInstance;
                    }
                    break;
                }
                case 0x0000031du:
                {
                    if (name == BuiltInName::gl_BaseVertex)
                    {
                        return &BuiltInVariable::kVar_gl_BaseVertex;
                    }
                    break;
                }
            }
        }
        if (mResources.OVR_multiview && mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x000003b6u:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVR;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0x00000006u:
            {
                if (name == BuiltInName::texture2D_00L10B)
                {
                    return &BuiltInFunction::kFunction_texture2D_00L10B;
                }
                break;
            }
            case 0x0000001eu:
            {
                if (name == BuiltInName::texture2DProjGradEXT_00H20B10B10B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_00H20B10B10B;
                }
                break;
            }
            case 0x00000053u:
            {
                if (name == BuiltInName::texture2DRectProj_00N20B)
                {
                    return &BuiltInFunction::kFunction_texture2DRectProj_00N20B;
                }
                break;
            }
            case 0x00000065u:
            {
                if (name == BuiltInName::texture2DProj_00L30B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_00L30B;
                }
                break;
            }
            case 0x000000c3u:
            {
                if (name == BuiltInName::texture2DProj_00H30B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_00H30B;
                }
                break;
            }
            case 0x00000154u:
            {
                if (name == BuiltInName::texture2D_00H10B)
                {
                    return &BuiltInFunction::kFunction_texture2D_00H10B;
                }
                break;
            }
            case 0x000001a4u:
            {
                if (name == BuiltInName::gl_FragDepthEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_frag_depth)
                    return mVar_gl_FragDepthEXT;
                }
                break;
            }
            case 0x000001bbu:
            {
                if (name == BuiltInName::texture2DProj_00L20B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_00L20B;
                }
                break;
            }
            case 0x000001e4u:
            {
                if (name == BuiltInName::texture2DGradEXT_00H10B10B10B)
                {
                    return &BuiltInFunction::kFunction_texture2DGradEXT_00H10B10B10B;
                }
                break;
            }
            case 0x0000020du:
            {
                if (name == BuiltInName::gl_SecondaryFragDataEXT)
                {
                    // Only initialized if (shaderType == GL_FRAGMENT_SHADER) &&
                    // (mResources.EXT_blend_func_extended)
                    return mVar_gl_SecondaryFragDataEXT;
                }
                break;
            }
            case 0x0000024eu:
            {
                if (name == BuiltInName::texture2DRect_00N10B)
                {
                    return &BuiltInFunction::kFunction_texture2DRect_00N10B;
                }
                break;
            }
            case 0x0000025au:
            {
                if (name == BuiltInName::texture2DProj_00H20B)
                {
                    return &BuiltInFunction::kFunction_texture2DProj_00H20B;
                }
                break;
            }
            case 0x000002f3u:
            {
                if (name == BuiltInName::textureCubeGradEXT_00J20B20B20B)
                {
                    return &BuiltInFunction::kFunction_textureCubeGradEXT_00J20B20B20B;
                }
                break;
            }
            case 0x0000030fu:
            {
                if (name == BuiltInName::textureCube_00J20B)
                {
                    return &BuiltInFunction::kFunction_textureCube_00J20B;
                }
                break;
            }
            case 0x0000036bu:
            {
                if (name == BuiltInName::gl_FragData)
                {
                    // Only initialized if shaderType == GL_FRAGMENT_SHADER
                    return mVar_gl_FragData;
                }
                break;
            }
            case 0x0000037cu:
            {
                if (name == BuiltInName::texture2DProjGradEXT_00H30B10B10B)
                {
                    return &BuiltInFunction::kFunction_texture2DProjGradEXT_00H30B10B10B;
                }
                break;
            }
            case 0x0000039fu:
            {
                if (name == BuiltInName::texture2DRectProj_00N30B)
                {
                    return &BuiltInFunction::kFunction_texture2DRectProj_00N30B;
                }
                break;
            }
            case 0x000003c4u:
            {
                if (name == BuiltInName::gl_MaxVaryingVectors)
                {
                    return mVar_gl_MaxVaryingVectors;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000000au:
                {
                    if (name == BuiltInName::texture3DProj_00I30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProj_00I30B00B;
                    }
                    break;
                }
                case 0x00000016u:
                {
                    if (name == BuiltInName::dFdxExt_30B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_30B;
                    }
                    break;
                }
                case 0x000000b4u:
                {
                    if (name == BuiltInName::textureCube_00J20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureCube_00J20B00B;
                    }
                    break;
                }
                case 0x000000f7u:
                {
                    if (name == BuiltInName::fwidthExt_10B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_10B;
                    }
                    break;
                }
                case 0x00000147u:
                {
                    if (name == BuiltInName::dFdxExt_20B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_20B;
                    }
                    break;
                }
                case 0x00000170u:
                {
                    if (name == BuiltInName::fwidthExt_00B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_00B;
                    }
                    break;
                }
                case 0x00000171u:
                {
                    if (name == BuiltInName::dFdyExt_10B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_10B;
                    }
                    break;
                }
                case 0x0000019cu:
                {
                    if (name == BuiltInName::texture3DProj_00I30B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProj_00I30B;
                    }
                    break;
                }
                case 0x000001a6u:
                {
                    if (name == BuiltInName::dFdxExt_10B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_10B;
                    }
                    break;
                }
                case 0x000001bfu:
                {
                    if (name == BuiltInName::texture3DProjLod_00I30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture3DProjLod_00I30B00B;
                    }
                    break;
                }
                case 0x00000201u:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_00H30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_00H30B00B;
                    }
                    break;
                }
                case 0x0000022fu:
                {
                    if (name == BuiltInName::texture2D_00H10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2D_00H10B00B;
                    }
                    break;
                }
                case 0x00000234u:
                {
                    if (name == BuiltInName::texture2DLodEXT_00H10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLodEXT_00H10B00B;
                    }
                    break;
                }
                case 0x0000024cu:
                {
                    if (name == BuiltInName::texture2DProjLodEXT_00H20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLodEXT_00H20B00B;
                    }
                    break;
                }
                case 0x000002c7u:
                {
                    if (name == BuiltInName::fwidthExt_30B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_30B;
                    }
                    break;
                }
                case 0x00000301u:
                {
                    if (name == BuiltInName::dFdxExt_00B)
                    {
                        return &BuiltInFunction::kFunction_dFdxExt_00B;
                    }
                    break;
                }
                case 0x00000311u:
                {
                    if (name == BuiltInName::textureCubeLodEXT_00J20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLodEXT_00J20B00B;
                    }
                    break;
                }
                case 0x0000032bu:
                {
                    if (name == BuiltInName::dFdyExt_20B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_20B;
                    }
                    break;
                }
                case 0x00000348u:
                {
                    if (name == BuiltInName::dFdyExt_30B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_30B;
                    }
                    break;
                }
                case 0x0000036fu:
                {
                    if (name == BuiltInName::texture2DProj_00H30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_00H30B00B;
                    }
                    break;
                }
                case 0x00000387u:
                {
                    if (name == BuiltInName::fwidthExt_20B)
                    {
                        return &BuiltInFunction::kFunction_fwidthExt_20B;
                    }
                    break;
                }
                case 0x00000389u:
                {
                    if (name == BuiltInName::texture3DLod_00I20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture3DLod_00I20B00B;
                    }
                    break;
                }
                case 0x000003aau:
                {
                    if (name == BuiltInName::gl_FragColor)
                    {
                        return &BuiltInVariable::kVar_gl_FragColor;
                    }
                    break;
                }
                case 0x000003d7u:
                {
                    if (name == BuiltInName::texture2DProj_00H20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProj_00H20B00B;
                    }
                    break;
                }
                case 0x000003f0u:
                {
                    if (name == BuiltInName::texture3D_00I20B)
                    {
                        return &BuiltInFunction::kFunction_texture3D_00I20B;
                    }
                    break;
                }
                case 0x00000406u:
                {
                    if (name == BuiltInName::texture3D_00I20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture3D_00I20B00B;
                    }
                    break;
                }
                case 0x00000419u:
                {
                    if (name == BuiltInName::dFdyExt_00B)
                    {
                        return &BuiltInFunction::kFunction_dFdyExt_00B;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000144u:
                {
                    if (name == BuiltInName::texture2DProjLod_00H20B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_00H20B00B;
                    }
                    break;
                }
                case 0x000001a5u:
                {
                    if (name == BuiltInName::texture2DProjLod_00H30B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DProjLod_00H30B00B;
                    }
                    break;
                }
                case 0x00000204u:
                {
                    if (name == BuiltInName::texture2DLod_00H10B00B)
                    {
                        return &BuiltInFunction::kFunction_texture2DLod_00H10B00B;
                    }
                    break;
                }
                case 0x00000359u:
                {
                    if (name == BuiltInName::textureCubeLod_00J20B00B)
                    {
                        return &BuiltInFunction::kFunction_textureCubeLod_00J20B00B;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_blend_func_extended))
        {
            switch (nameHash)
            {
                case 0x00000356u:
                {
                    if (name == BuiltInName::gl_SecondaryFragColorEXT)
                    {
                        return &BuiltInVariable::kVar_gl_SecondaryFragColorEXT;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.EXT_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x00000182u:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragData;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.NV_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x0000001fu:
                {
                    if (name == BuiltInName::gl_LastFragColor)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColor;
                    }
                    break;
                }
                case 0x00000182u:
                {
                    if (name == BuiltInName::gl_LastFragData)
                    {
                        return mVar_gl_LastFragDataNV;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_FRAGMENT_SHADER) && (mResources.ARM_shader_framebuffer_fetch))
        {
            switch (nameHash)
            {
                case 0x00000376u:
                {
                    if (name == BuiltInName::gl_LastFragColorARM)
                    {
                        return &BuiltInVariable::kVar_gl_LastFragColorARM;
                    }
                    break;
                }
            }
        }
        if ((mShaderType == GL_VERTEX_SHADER) && (mResources.ANGLE_multi_draw))
        {
            switch (nameHash)
            {
                case 0x00000436u:
                {
                    if (name == BuiltInName::gl_DrawID)
                    {
                        return &BuiltInVariable::kVar_gl_DrawIDESSL1;
                    }
                    break;
                }
            }
        }
        if (mResources.OVR_multiview && mShaderType != GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x000003b6u:
                {
                    if (name == BuiltInName::gl_ViewID_OVR)
                    {
                        return &BuiltInVariable::kVar_gl_ViewID_OVRESSL1;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0x00000013u:
        {
            if (name == BuiltInName::greaterThanEqual_10C10C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_10C10C;
            }
            break;
        }
        case 0x0000001bu:
        {
            if (name == BuiltInName::notFunc_10E)
            {
                return &BuiltInFunction::kFunction_notFunc_10E;
            }
            break;
        }
        case 0x00000020u:
        {
            if (name == BuiltInName::lessThanEqual_30B30B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_30B30B;
            }
            break;
        }
        case 0x00000022u:
        {
            if (name == BuiltInName::asin_20B)
            {
                return &BuiltInFunction::kFunction_asin_20B;
            }
            break;
        }
        case 0x00000029u:
        {
            if (name == BuiltInName::mix_20B20B00B)
            {
                return &BuiltInFunction::kFunction_mix_20B20B00B;
            }
            break;
        }
        case 0x0000002au:
        {
            if (name == BuiltInName::clamp_10B10B10B)
            {
                return &BuiltInFunction::kFunction_clamp_10B10B10B;
            }
            break;
        }
        case 0x0000002fu:
        {
            if (name == BuiltInName::step_00B20B)
            {
                return &BuiltInFunction::kFunction_step_00B20B;
            }
            break;
        }
        case 0x0000003au:
        {
            if (name == BuiltInName::atan_10B10B)
            {
                return &BuiltInFunction::kFunction_atan_10B10B;
            }
            break;
        }
        case 0x0000003cu:
        {
            if (name == BuiltInName::max_20B00B)
            {
                return &BuiltInFunction::kFunction_max_20B00B;
            }
            break;
        }
        case 0x0000003fu:
        {
            if (name == BuiltInName::clamp_30B30B30B)
            {
                return &BuiltInFunction::kFunction_clamp_30B30B30B;
            }
            break;
        }
        case 0x00000042u:
        {
            if (name == BuiltInName::greaterThan_20C20C)
            {
                return &BuiltInFunction::kFunction_greaterThan_20C20C;
            }
            break;
        }
        case 0x0000004cu:
        {
            if (name == BuiltInName::lessThanEqual_20B20B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_20B20B;
            }
            break;
        }
        case 0x0000004du:
        {
            if (name == BuiltInName::min_10B00B)
            {
                return &BuiltInFunction::kFunction_min_10B00B;
            }
            break;
        }
        case 0x00000057u:
        {
            if (name == BuiltInName::degrees_20B)
            {
                return &BuiltInFunction::kFunction_degrees_20B;
            }
            break;
        }
        case 0x0000005du:
        {
            if (name == BuiltInName::notEqual_30E30E)
            {
                return &BuiltInFunction::kFunction_notEqual_30E30E;
            }
            break;
        }
        case 0x00000061u:
        {
            if (name == BuiltInName::abs_20B)
            {
                return &BuiltInFunction::kFunction_abs_20B;
            }
            break;
        }
        case 0x00000063u:
        {
            if (name == BuiltInName::inversesqrt_00B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_00B;
            }
            break;
        }
        case 0x00000066u:
        {
            if (name == BuiltInName::lessThanEqual_10B10B)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_10B10B;
            }
            break;
        }
        case 0x00000073u:
        {
            if (name == BuiltInName::min_30B30B)
            {
                return &BuiltInFunction::kFunction_min_30B30B;
            }
            break;
        }
        case 0x00000077u:
        {
            if (name == BuiltInName::acos_00B)
            {
                return &BuiltInFunction::kFunction_acos_00B;
            }
            break;
        }
        case 0x00000078u:
        {
            if (name == BuiltInName::fract_10B)
            {
                return &BuiltInFunction::kFunction_fract_10B;
            }
            break;
        }
        case 0x0000007au:
        {
            if (name == BuiltInName::greaterThanEqual_30C30C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_30C30C;
            }
            break;
        }
        case 0x00000085u:
        {
            if (name == BuiltInName::atan_10B)
            {
                return &BuiltInFunction::kFunction_atan_10B;
            }
            break;
        }
        case 0x0000008au:
        {
            if (name == BuiltInName::min_30B00B)
            {
                return &BuiltInFunction::kFunction_min_30B00B;
            }
            break;
        }
        case 0x0000008fu:
        {
            if (name == BuiltInName::lessThan_20B20B)
            {
                return &BuiltInFunction::kFunction_lessThan_20B20B;
            }
            break;
        }
        case 0x00000093u:
        {
            if (name == BuiltInName::exp_10B)
            {
                return &BuiltInFunction::kFunction_exp_10B;
            }
            break;
        }
        case 0x00000095u:
        {
            if (name == BuiltInName::step_00B10B)
            {
                return &BuiltInFunction::kFunction_step_00B10B;
            }
            break;
        }
        case 0x0000009au:
        {
            if (name == BuiltInName::sign_20B)
            {
                return &BuiltInFunction::kFunction_sign_20B;
            }
            break;
        }
        case 0x0000009eu:
        {
            if (name == BuiltInName::lessThan_30C30C)
            {
                return &BuiltInFunction::kFunction_lessThan_30C30C;
            }
            break;
        }
        case 0x0000009fu:
        {
            if (name == BuiltInName::gl_DepthRange)
            {
                return mVar_gl_DepthRange;
            }
            break;
        }
        case 0x000000a2u:
        {
            if (name == BuiltInName::atan_20B)
            {
                return &BuiltInFunction::kFunction_atan_20B;
            }
            break;
        }
        case 0x000000a5u:
        {
            if (name == BuiltInName::log2_10B)
            {
                return &BuiltInFunction::kFunction_log2_10B;
            }
            break;
        }
        case 0x000000a6u:
        {
            if (name == BuiltInName::min_10B10B)
            {
                return &BuiltInFunction::kFunction_min_10B10B;
            }
            break;
        }
        case 0x000000a9u:
        {
            if (name == BuiltInName::pow_10B10B)
            {
                return &BuiltInFunction::kFunction_pow_10B10B;
            }
            break;
        }
        case 0x000000b1u:
        {
            if (name == BuiltInName::greaterThan_10C10C)
            {
                return &BuiltInFunction::kFunction_greaterThan_10C10C;
            }
            break;
        }
        case 0x000000b2u:
        {
            if (name == BuiltInName::ceil_20B)
            {
                return &BuiltInFunction::kFunction_ceil_20B;
            }
            break;
        }
        case 0x000000bcu:
        {
            if (name == BuiltInName::equal_20C20C)
            {
                return &BuiltInFunction::kFunction_equal_20C20C;
            }
            break;
        }
        case 0x000000c0u:
        {
            if (name == BuiltInName::normalize_00B)
            {
                return &BuiltInFunction::kFunction_normalize_00B;
            }
            break;
        }
        case 0x000000cau:
        {
            if (name == BuiltInName::min_20B00B)
            {
                return &BuiltInFunction::kFunction_min_20B00B;
            }
            break;
        }
        case 0x000000cfu:
        {
            if (name == BuiltInName::reflect_00B00B)
            {
                return &BuiltInFunction::kFunction_reflect_00B00B;
            }
            break;
        }
        case 0x000000d0u:
        {
            if (name == BuiltInName::mod_20B00B)
            {
                return &BuiltInFunction::kFunction_mod_20B00B;
            }
            break;
        }
        case 0x000000d9u:
        {
            if (name == BuiltInName::sqrt_10B)
            {
                return &BuiltInFunction::kFunction_sqrt_10B;
            }
            break;
        }
        case 0x000000dbu:
        {
            if (name == BuiltInName::matrixCompMult_A0BA0B)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_A0BA0B;
            }
            break;
        }
        case 0x000000e5u:
        {
            if (name == BuiltInName::all_10E)
            {
                return &BuiltInFunction::kFunction_all_10E;
            }
            break;
        }
        case 0x000000eeu:
        {
            if (name == BuiltInName::log_30B)
            {
                return &BuiltInFunction::kFunction_log_30B;
            }
            break;
        }
        case 0x000000f3u:
        {
            if (name == BuiltInName::smoothstep_00B00B20B)
            {
                return &BuiltInFunction::kFunction_smoothstep_00B00B20B;
            }
            break;
        }
        case 0x000000f8u:
        {
            if (name == BuiltInName::reflect_10B10B)
            {
                return &BuiltInFunction::kFunction_reflect_10B10B;
            }
            break;
        }
        case 0x000000fcu:
        {
            if (name == BuiltInName::refract_10B10B00B)
            {
                return &BuiltInFunction::kFunction_refract_10B10B00B;
            }
            break;
        }
        case 0x000000feu:
        {
            if (name == BuiltInName::refract_20B20B00B)
            {
                return &BuiltInFunction::kFunction_refract_20B20B00B;
            }
            break;
        }
        case 0x0000010au:
        {
            if (name == BuiltInName::distance_30B30B)
            {
                return &BuiltInFunction::kFunction_distance_30B30B;
            }
            break;
        }
        case 0x00000110u:
        {
            if (name == BuiltInName::greaterThan_30B30B)
            {
                return &BuiltInFunction::kFunction_greaterThan_30B30B;
            }
            break;
        }
        case 0x00000115u:
        {
            if (name == BuiltInName::length_10B)
            {
                return &BuiltInFunction::kFunction_length_10B;
            }
            break;
        }
        case 0x00000118u:
        {
            if (name == BuiltInName::dot_00B00B)
            {
                return &BuiltInFunction::kFunction_dot_00B00B;
            }
            break;
        }
        case 0x0000011au:
        {
            if (name == BuiltInName::dot_30B30B)
            {
                return &BuiltInFunction::kFunction_dot_30B30B;
            }
            break;
        }
        case 0x0000011fu:
        {
            if (name == BuiltInName::tan_30B)
            {
                return &BuiltInFunction::kFunction_tan_30B;
            }
            break;
        }
        case 0x00000122u:
        {
            if (name == BuiltInName::exp2_10B)
            {
                return &BuiltInFunction::kFunction_exp2_10B;
            }
            break;
        }
        case 0x00000126u:
        {
            if (name == BuiltInName::clamp_30B00B00B)
            {
                return &BuiltInFunction::kFunction_clamp_30B00B00B;
            }
            break;
        }
        case 0x00000128u:
        {
            if (name == BuiltInName::greaterThanEqual_20C20C)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_20C20C;
            }
            break;
        }
        case 0x00000129u:
        {
            if (name == BuiltInName::dot_10B10B)
            {
                return &BuiltInFunction::kFunction_dot_10B10B;
            }
            break;
        }
        case 0x0000012du:
        {
            if (name == BuiltInName::radians_20B)
            {
                return &BuiltInFunction::kFunction_radians_20B;
            }
            break;
        }
        case 0x00000138u:
        {
            if (name == BuiltInName::sin_30B)
            {
                return &BuiltInFunction::kFunction_sin_30B;
            }
            break;
        }
        case 0x00000139u:
        {
            if (name == BuiltInName::floor_30B)
            {
                return &BuiltInFunction::kFunction_floor_30B;
            }
            break;
        }
        case 0x00000141u:
        {
            if (name == BuiltInName::gl_MaxVertexUniformVectors)
            {
                return mVar_gl_MaxVertexUniformVectors;
            }
            break;
        }
        case 0x00000149u:
        {
            if (name == BuiltInName::clamp_10B00B00B)
            {
                return &BuiltInFunction::kFunction_clamp_10B00B00B;
            }
            break;
        }
        case 0x00000158u:
        {
            if (name == BuiltInName::notFunc_20E)
            {
                return &BuiltInFunction::kFunction_notFunc_20E;
            }
            break;
        }
        case 0x00000161u:
        {
            if (name == BuiltInName::atan_30B30B)
            {
                return &BuiltInFunction::kFunction_atan_30B30B;
            }
            break;
        }
        case 0x00000166u:
        {
            if (name == BuiltInName::log_20B)
            {
                return &BuiltInFunction::kFunction_log_20B;
            }
            break;
        }
        case 0x00000168u:
        {
            if (name == BuiltInName::asin_30B)
            {
                return &BuiltInFunction::kFunction_asin_30B;
            }
            break;
        }
        case 0x0000016eu:
        {
            if (name == BuiltInName::max_00B00B)
            {
                return &BuiltInFunction::kFunction_max_00B00B;
            }
            break;
        }
        case 0x0000017au:
        {
            if (name == BuiltInName::exp2_20B)
            {
                return &BuiltInFunction::kFunction_exp2_20B;
            }
            break;
        }
        case 0x0000017fu:
        {
            if (name == BuiltInName::gl_MaxDualSourceDrawBuffersEXT)
            {
                return mVar_gl_MaxDualSourceDrawBuffersEXT;
            }
            break;
        }
        case 0x00000183u:
        {
            if (name == BuiltInName::gl_MaxCombinedTextureImageUnits)
            {
                return mVar_gl_MaxCombinedTextureImageUnits;
            }
            break;
        }
        case 0x00000188u:
        {
            if (name == BuiltInName::distance_10B10B)
            {
                return &BuiltInFunction::kFunction_distance_10B10B;
            }
            break;
        }
        case 0x00000189u:
        {
            if (name == BuiltInName::reflect_20B20B)
            {
                return &BuiltInFunction::kFunction_reflect_20B20B;
            }
            break;
        }
        case 0x0000018au:
        {
            if (name == BuiltInName::mod_10B00B)
            {
                return &BuiltInFunction::kFunction_mod_10B00B;
            }
            break;
        }
        case 0x0000018du:
        {
            if (name == BuiltInName::equal_30E30E)
            {
                return &BuiltInFunction::kFunction_equal_30E30E;
            }
            break;
        }
        case 0x00000192u:
        {
            if (name == BuiltInName::max_30B30B)
            {
                return &BuiltInFunction::kFunction_max_30B30B;
            }
            break;
        }
        case 0x0000019bu:
        {
            if (name == BuiltInName::lessThanEqual_20C20C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_20C20C;
            }
            break;
        }
        case 0x0000019du:
        {
            if (name == BuiltInName::log2_00B)
            {
                return &BuiltInFunction::kFunction_log2_00B;
            }
            break;
        }
        case 0x0000019fu:
        {
            if (name == BuiltInName::abs_10B)
            {
                return &BuiltInFunction::kFunction_abs_10B;
            }
            break;
        }
        case 0x000001a1u:
        {
            if (name == BuiltInName::acos_30B)
            {
                return &BuiltInFunction::kFunction_acos_30B;
            }
            break;
        }
        case 0x000001a3u:
        {
            if (name == BuiltInName::degrees_30B)
            {
                return &BuiltInFunction::kFunction_degrees_30B;
            }
            break;
        }
        case 0x000001acu:
        {
            if (name == BuiltInName::inversesqrt_30B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_30B;
            }
            break;
        }
        case 0x000001b0u:
        {
            if (name == BuiltInName::clamp_00B00B00B)
            {
                return &BuiltInFunction::kFunction_clamp_00B00B00B;
            }
            break;
        }
        case 0x000001b5u:
        {
            if (name == BuiltInName::fract_00B)
            {
                return &BuiltInFunction::kFunction_fract_00B;
            }
            break;
        }
        case 0x000001b8u:
        {
            if (name == BuiltInName::exp_20B)
            {
                return &BuiltInFunction::kFunction_exp_20B;
            }
            break;
        }
        case 0x000001bau:
        {
            if (name == BuiltInName::equal_20B20B)
            {
                return &BuiltInFunction::kFunction_equal_20B20B;
            }
            break;
        }
        case 0x000001beu:
        {
            if (name == BuiltInName::log_10B)
            {
                return &BuiltInFunction::kFunction_log_10B;
            }
            break;
        }
        case 0x000001c6u:
        {
            if (name == BuiltInName::reflect_30B30B)
            {
                return &BuiltInFunction::kFunction_reflect_30B30B;
            }
            break;
        }
        case 0x000001cbu:
        {
            if (name == BuiltInName::equal_30C30C)
            {
                return &BuiltInFunction::kFunction_equal_30C30C;
            }
            break;
        }
        case 0x000001ceu:
        {
            if (name == BuiltInName::mod_30B30B)
            {
                return &BuiltInFunction::kFunction_mod_30B30B;
            }
            break;
        }
        case 0x000001d0u:
        {
            if (name == BuiltInName::sign_30B)
            {
                return &BuiltInFunction::kFunction_sign_30B;
            }
            break;
        }
        case 0x000001d5u:
        {
            if (name == BuiltInName::pow_00B00B)
            {
                return &BuiltInFunction::kFunction_pow_00B00B;
            }
            break;
        }
        case 0x000001d7u:
        {
            if (name == BuiltInName::mod_00B00B)
            {
                return &BuiltInFunction::kFunction_mod_00B00B;
            }
            break;
        }
        case 0x000001dau:
        {
            if (name == BuiltInName::notEqual_30B30B)
            {
                return &BuiltInFunction::kFunction_notEqual_30B30B;
            }
            break;
        }
        case 0x000001e7u:
        {
            if (name == BuiltInName::step_00B00B)
            {
                return &BuiltInFunction::kFunction_step_00B00B;
            }
            break;
        }
        case 0x000001edu:
        {
            if (name == BuiltInName::distance_20B20B)
            {
                return &BuiltInFunction::kFunction_distance_20B20B;
            }
            break;
        }
        case 0x000001efu:
        {
            if (name == BuiltInName::mod_30B00B)
            {
                return &BuiltInFunction::kFunction_mod_30B00B;
            }
            break;
        }
        case 0x000001fcu:
        {
            if (name == BuiltInName::ceil_30B)
            {
                return &BuiltInFunction::kFunction_ceil_30B;
            }
            break;
        }
        case 0x00000203u:
        {
            if (name == BuiltInName::refract_00B00B00B)
            {
                return &BuiltInFunction::kFunction_refract_00B00B00B;
            }
            break;
        }
        case 0x0000020au:
        {
            if (name == BuiltInName::mix_10B10B10B)
            {
                return &BuiltInFunction::kFunction_mix_10B10B10B;
            }
            break;
        }
        case 0x00000216u:
        {
            if (name == BuiltInName::log2_30B)
            {
                return &BuiltInFunction::kFunction_log2_30B;
            }
            break;
        }
        case 0x00000218u:
        {
            if (name == BuiltInName::fract_30B)
            {
                return &BuiltInFunction::kFunction_fract_30B;
            }
            break;
        }
        case 0x00000220u:
        {
            if (name == BuiltInName::notEqual_20E20E)
            {
                return &BuiltInFunction::kFunction_notEqual_20E20E;
            }
            break;
        }
        case 0x00000227u:
        {
            if (name == BuiltInName::atan_20B20B)
            {
                return &BuiltInFunction::kFunction_atan_20B20B;
            }
            break;
        }
        case 0x0000022eu:
        {
            if (name == BuiltInName::all_30E)
            {
                return &BuiltInFunction::kFunction_all_30E;
            }
            break;
        }
        case 0x00000235u:
        {
            if (name == BuiltInName::lessThan_10C10C)
            {
                return &BuiltInFunction::kFunction_lessThan_10C10C;
            }
            break;
        }
        case 0x00000239u:
        {
            if (name == BuiltInName::min_00B00B)
            {
                return &BuiltInFunction::kFunction_min_00B00B;
            }
            break;
        }
        case 0x0000023du:
        {
            if (name == BuiltInName::sqrt_00B)
            {
                return &BuiltInFunction::kFunction_sqrt_00B;
            }
            break;
        }
        case 0x00000241u:
        {
            if (name == BuiltInName::normalize_20B)
            {
                return &BuiltInFunction::kFunction_normalize_20B;
            }
            break;
        }
        case 0x00000244u:
        {
            if (name == BuiltInName::degrees_00B)
            {
                return &BuiltInFunction::kFunction_degrees_00B;
            }
            break;
        }
        case 0x0000024au:
        {
            if (name == BuiltInName::gl_MaxDrawBuffers)
            {
                return mVar_gl_MaxDrawBuffers;
            }
            break;
        }
        case 0x00000250u:
        {
            if (name == BuiltInName::atan_00B)
            {
                return &BuiltInFunction::kFunction_atan_00B;
            }
            break;
        }
        case 0x00000259u:
        {
            if (name == BuiltInName::smoothstep_00B00B10B)
            {
                return &BuiltInFunction::kFunction_smoothstep_00B00B10B;
            }
            break;
        }
        case 0x00000260u:
        {
            if (name == BuiltInName::normalize_10B)
            {
                return &BuiltInFunction::kFunction_normalize_10B;
            }
            break;
        }
        case 0x00000265u:
        {
            if (name == BuiltInName::atan_00B00B)
            {
                return &BuiltInFunction::kFunction_atan_00B00B;
            }
            break;
        }
        case 0x00000268u:
        {
            if (name == BuiltInName::notEqual_10B10B)
            {
                return &BuiltInFunction::kFunction_notEqual_10B10B;
            }
            break;
        }
        case 0x0000026cu:
        {
            if (name == BuiltInName::length_00B)
            {
                return &BuiltInFunction::kFunction_length_00B;
            }
            break;
        }
        case 0x0000026eu:
        {
            if (name == BuiltInName::any_20E)
            {
                return &BuiltInFunction::kFunction_any_20E;
            }
            break;
        }
        case 0x00000274u:
        {
            if (name == BuiltInName::floor_10B)
            {
                return &BuiltInFunction::kFunction_floor_10B;
            }
            break;
        }
        case 0x00000276u:
        {
            if (name == BuiltInName::sin_10B)
            {
                return &BuiltInFunction::kFunction_sin_10B;
            }
            break;
        }
        case 0x0000027au:
        {
            if (name == BuiltInName::tan_00B)
            {
                return &BuiltInFunction::kFunction_tan_00B;
            }
            break;
        }
        case 0x0000027bu:
        {
            if (name == BuiltInName::mod_20B20B)
            {
                return &BuiltInFunction::kFunction_mod_20B20B;
            }
            break;
        }
        case 0x0000027eu:
        {
            if (name == BuiltInName::any_30E)
            {
                return &BuiltInFunction::kFunction_any_30E;
            }
            break;
        }
        case 0x00000289u:
        {
            if (name == BuiltInName::cos_00B)
            {
                return &BuiltInFunction::kFunction_cos_00B;
            }
            break;
        }
        case 0x0000028au:
        {
            if (name == BuiltInName::min_20B20B)
            {
                return &BuiltInFunction::kFunction_min_20B20B;
            }
            break;
        }
        case 0x00000290u:
        {
            if (name == BuiltInName::pow_30B30B)
            {
                return &BuiltInFunction::kFunction_pow_30B30B;
            }
            break;
        }
        case 0x00000291u:
        {
            if (name == BuiltInName::smoothstep_10B10B10B)
            {
                return &BuiltInFunction::kFunction_smoothstep_10B10B10B;
            }
            break;
        }
        case 0x00000293u:
        {
            if (name == BuiltInName::refract_30B30B00B)
            {
                return &BuiltInFunction::kFunction_refract_30B30B00B;
            }
            break;
        }
        case 0x00000296u:
        {
            if (name == BuiltInName::floor_20B)
            {
                return &BuiltInFunction::kFunction_floor_20B;
            }
            break;
        }
        case 0x00000297u:
        {
            if (name == BuiltInName::equal_20E20E)
            {
                return &BuiltInFunction::kFunction_equal_20E20E;
            }
            break;
        }
        case 0x00000298u:
        {
            if (name == BuiltInName::mix_00B00B00B)
            {
                return &BuiltInFunction::kFunction_mix_00B00B00B;
            }
            break;
        }
        case 0x0000029au:
        {
            if (name == BuiltInName::greaterThanEqual_20B20B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_20B20B;
            }
            break;
        }
        case 0x0000029du:
        {
            if (name == BuiltInName::sin_20B)
            {
                return &BuiltInFunction::kFunction_sin_20B;
            }
            break;
        }
        case 0x000002aau:
        {
            if (name == BuiltInName::faceforward_30B30B30B)
            {
                return &BuiltInFunction::kFunction_faceforward_30B30B30B;
            }
            break;
        }
        case 0x000002abu:
        {
            if (name == BuiltInName::gl_DepthRangeParameters)
            {
                return mVar_gl_DepthRangeParameters;
            }
            break;
        }
        case 0x000002b0u:
        {
            if (name == BuiltInName::asin_00B)
            {
                return &BuiltInFunction::kFunction_asin_00B;
            }
            break;
        }
        case 0x000002b2u:
        {
            if (name == BuiltInName::ceil_00B)
            {
                return &BuiltInFunction::kFunction_ceil_00B;
            }
            break;
        }
        case 0x000002b4u:
        {
            if (name == BuiltInName::distance_00B00B)
            {
                return &BuiltInFunction::kFunction_distance_00B00B;
            }
            break;
        }
        case 0x000002bau:
        {
            if (name == BuiltInName::notFunc_30E)
            {
                return &BuiltInFunction::kFunction_notFunc_30E;
            }
            break;
        }
        case 0x000002c5u:
        {
            if (name == BuiltInName::length_30B)
            {
                return &BuiltInFunction::kFunction_length_30B;
            }
            break;
        }
        case 0x000002cau:
        {
            if (name == BuiltInName::mix_20B20B20B)
            {
                return &BuiltInFunction::kFunction_mix_20B20B20B;
            }
            break;
        }
        case 0x000002cdu:
        {
            if (name == BuiltInName::max_10B00B)
            {
                return &BuiltInFunction::kFunction_max_10B00B;
            }
            break;
        }
        case 0x000002ceu:
        {
            if (name == BuiltInName::any_10E)
            {
                return &BuiltInFunction::kFunction_any_10E;
            }
            break;
        }
        case 0x000002d4u:
        {
            if (name == BuiltInName::exp2_30B)
            {
                return &BuiltInFunction::kFunction_exp2_30B;
            }
            break;
        }
        case 0x000002d6u:
        {
            if (name == BuiltInName::all_20E)
            {
                return &BuiltInFunction::kFunction_all_20E;
            }
            break;
        }
        case 0x000002ebu:
        {
            if (name == BuiltInName::notEqual_10C10C)
            {
                return &BuiltInFunction::kFunction_notEqual_10C10C;
            }
            break;
        }
        case 0x000002ecu:
        {
            if (name == BuiltInName::radians_00B)
            {
                return &BuiltInFunction::kFunction_radians_00B;
            }
            break;
        }
        case 0x000002eeu:
        {
            if (name == BuiltInName::greaterThan_20B20B)
            {
                return &BuiltInFunction::kFunction_greaterThan_20B20B;
            }
            break;
        }
        case 0x000002efu:
        {
            if (name == BuiltInName::max_30B00B)
            {
                return &BuiltInFunction::kFunction_max_30B00B;
            }
            break;
        }
        case 0x000002f2u:
        {
            if (name == BuiltInName::step_10B10B)
            {
                return &BuiltInFunction::kFunction_step_10B10B;
            }
            break;
        }
        case 0x000002f6u:
        {
            if (name == BuiltInName::step_30B30B)
            {
                return &BuiltInFunction::kFunction_step_30B30B;
            }
            break;
        }
        case 0x000002fbu:
        {
            if (name == BuiltInName::lessThan_30B30B)
            {
                return &BuiltInFunction::kFunction_lessThan_30B30B;
            }
            break;
        }
        case 0x000002fcu:
        {
            if (name == BuiltInName::cross_20B20B)
            {
                return &BuiltInFunction::kFunction_cross_20B20B;
            }
            break;
        }
        case 0x000002ffu:
        {
            if (name == BuiltInName::clamp_20B00B00B)
            {
                return &BuiltInFunction::kFunction_clamp_20B00B00B;
            }
            break;
        }
        case 0x00000303u:
        {
            if (name == BuiltInName::matrixCompMult_F0BF0B)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_F0BF0B;
            }
            break;
        }
        case 0x00000307u:
        {
            if (name == BuiltInName::abs_00B)
            {
                return &BuiltInFunction::kFunction_abs_00B;
            }
            break;
        }
        case 0x0000030au:
        {
            if (name == BuiltInName::step_20B20B)
            {
                return &BuiltInFunction::kFunction_step_20B20B;
            }
            break;
        }
        case 0x0000030du:
        {
            if (name == BuiltInName::faceforward_20B20B20B)
            {
                return &BuiltInFunction::kFunction_faceforward_20B20B20B;
            }
            break;
        }
        case 0x00000310u:
        {
            if (name == BuiltInName::acos_20B)
            {
                return &BuiltInFunction::kFunction_acos_20B;
            }
            break;
        }
        case 0x00000316u:
        {
            if (name == BuiltInName::max_20B20B)
            {
                return &BuiltInFunction::kFunction_max_20B20B;
            }
            break;
        }
        case 0x0000031bu:
        {
            if (name == BuiltInName::lessThan_20C20C)
            {
                return &BuiltInFunction::kFunction_lessThan_20C20C;
            }
            break;
        }
        case 0x0000031cu:
        {
            if (name == BuiltInName::exp_30B)
            {
                return &BuiltInFunction::kFunction_exp_30B;
            }
            break;
        }
        case 0x0000031eu:
        {
            if (name == BuiltInName::step_00B30B)
            {
                return &BuiltInFunction::kFunction_step_00B30B;
            }
            break;
        }
        case 0x00000321u:
        {
            if (name == BuiltInName::sign_00B)
            {
                return &BuiltInFunction::kFunction_sign_00B;
            }
            break;
        }
        case 0x00000322u:
        {
            if (name == BuiltInName::log_00B)
            {
                return &BuiltInFunction::kFunction_log_00B;
            }
            break;
        }
        case 0x00000332u:
        {
            if (name == BuiltInName::mod_10B10B)
            {
                return &BuiltInFunction::kFunction_mod_10B10B;
            }
            break;
        }
        case 0x00000337u:
        {
            if (name == BuiltInName::faceforward_00B00B00B)
            {
                return &BuiltInFunction::kFunction_faceforward_00B00B00B;
            }
            break;
        }
        case 0x0000033bu:
        {
            if (name == BuiltInName::cos_30B)
            {
                return &BuiltInFunction::kFunction_cos_30B;
            }
            break;
        }
        case 0x0000033du:
        {
            if (name == BuiltInName::acos_10B)
            {
                return &BuiltInFunction::kFunction_acos_10B;
            }
            break;
        }
        case 0x0000033fu:
        {
            if (name == BuiltInName::notEqual_30C30C)
            {
                return &BuiltInFunction::kFunction_notEqual_30C30C;
            }
            break;
        }
        case 0x00000341u:
        {
            if (name == BuiltInName::faceforward_10B10B10B)
            {
                return &BuiltInFunction::kFunction_faceforward_10B10B10B;
            }
            break;
        }
        case 0x00000342u:
        {
            if (name == BuiltInName::gl_MaxTextureImageUnits)
            {
                return mVar_gl_MaxTextureImageUnits;
            }
            break;
        }
        case 0x00000351u:
        {
            if (name == BuiltInName::gl_MaxVertexTextureImageUnits)
            {
                return mVar_gl_MaxVertexTextureImageUnits;
            }
            break;
        }
        case 0x00000353u:
        {
            if (name == BuiltInName::greaterThanEqual_30B30B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_30B30B;
            }
            break;
        }
        case 0x0000035au:
        {
            if (name == BuiltInName::inversesqrt_10B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_10B;
            }
            break;
        }
        case 0x0000035du:
        {
            if (name == BuiltInName::gl_MaxFragmentUniformVectors)
            {
                return mVar_gl_MaxFragmentUniformVectors;
            }
            break;
        }
        case 0x0000035fu:
        {
            if (name == BuiltInName::fract_20B)
            {
                return &BuiltInFunction::kFunction_fract_20B;
            }
            break;
        }
        case 0x00000360u:
        {
            if (name == BuiltInName::abs_30B)
            {
                return &BuiltInFunction::kFunction_abs_30B;
            }
            break;
        }
        case 0x00000362u:
        {
            if (name == BuiltInName::equal_10C10C)
            {
                return &BuiltInFunction::kFunction_equal_10C10C;
            }
            break;
        }
        case 0x00000363u:
        {
            if (name == BuiltInName::lessThan_10B10B)
            {
                return &BuiltInFunction::kFunction_lessThan_10B10B;
            }
            break;
        }
        case 0x00000366u:
        {
            if (name == BuiltInName::mix_10B10B00B)
            {
                return &BuiltInFunction::kFunction_mix_10B10B00B;
            }
            break;
        }
        case 0x0000036au:
        {
            if (name == BuiltInName::radians_10B)
            {
                return &BuiltInFunction::kFunction_radians_10B;
            }
            break;
        }
        case 0x0000036du:
        {
            if (name == BuiltInName::lessThanEqual_10C10C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_10C10C;
            }
            break;
        }
        case 0x00000372u:
        {
            if (name == BuiltInName::pow_20B20B)
            {
                return &BuiltInFunction::kFunction_pow_20B20B;
            }
            break;
        }
        case 0x00000374u:
        {
            if (name == BuiltInName::notEqual_20C20C)
            {
                return &BuiltInFunction::kFunction_notEqual_20C20C;
            }
            break;
        }
        case 0x0000037fu:
        {
            if (name == BuiltInName::sqrt_30B)
            {
                return &BuiltInFunction::kFunction_sqrt_30B;
            }
            break;
        }
        case 0x00000382u:
        {
            if (name == BuiltInName::exp_00B)
            {
                return &BuiltInFunction::kFunction_exp_00B;
            }
            break;
        }
        case 0x00000384u:
        {
            if (name == BuiltInName::gl_MaxVertexAttribs)
            {
                return mVar_gl_MaxVertexAttribs;
            }
            break;
        }
        case 0x0000038au:
        {
            if (name == BuiltInName::smoothstep_00B00B30B)
            {
                return &BuiltInFunction::kFunction_smoothstep_00B00B30B;
            }
            break;
        }
        case 0x0000038du:
        {
            if (name == BuiltInName::greaterThan_30C30C)
            {
                return &BuiltInFunction::kFunction_greaterThan_30C30C;
            }
            break;
        }
        case 0x0000038eu:
        {
            if (name == BuiltInName::log2_20B)
            {
                return &BuiltInFunction::kFunction_log2_20B;
            }
            break;
        }
        case 0x00000393u:
        {
            if (name == BuiltInName::mix_30B30B00B)
            {
                return &BuiltInFunction::kFunction_mix_30B30B00B;
            }
            break;
        }
        case 0x00000395u:
        {
            if (name == BuiltInName::degrees_10B)
            {
                return &BuiltInFunction::kFunction_degrees_10B;
            }
            break;
        }
        case 0x0000039eu:
        {
            if (name == BuiltInName::atan_30B)
            {
                return &BuiltInFunction::kFunction_atan_30B;
            }
            break;
        }
        case 0x000003a0u:
        {
            if (name == BuiltInName::ceil_10B)
            {
                return &BuiltInFunction::kFunction_ceil_10B;
            }
            break;
        }
        case 0x000003a2u:
        {
            if (name == BuiltInName::greaterThanEqual_10B10B)
            {
                return &BuiltInFunction::kFunction_greaterThanEqual_10B10B;
            }
            break;
        }
        case 0x000003a5u:
        {
            if (name == BuiltInName::dot_20B20B)
            {
                return &BuiltInFunction::kFunction_dot_20B20B;
            }
            break;
        }
        case 0x000003afu:
        {
            if (name == BuiltInName::sqrt_20B)
            {
                return &BuiltInFunction::kFunction_sqrt_20B;
            }
            break;
        }
        case 0x000003b0u:
        {
            if (name == BuiltInName::smoothstep_00B00B00B)
            {
                return &BuiltInFunction::kFunction_smoothstep_00B00B00B;
            }
            break;
        }
        case 0x000003b5u:
        {
            if (name == BuiltInName::normalize_30B)
            {
                return &BuiltInFunction::kFunction_normalize_30B;
            }
            break;
        }
        case 0x000003b7u:
        {
            if (name == BuiltInName::smoothstep_30B30B30B)
            {
                return &BuiltInFunction::kFunction_smoothstep_30B30B30B;
            }
            break;
        }
        case 0x000003b8u:
        {
            if (name == BuiltInName::clamp_20B20B20B)
            {
                return &BuiltInFunction::kFunction_clamp_20B20B20B;
            }
            break;
        }
        case 0x000003c9u:
        {
            if (name == BuiltInName::sin_00B)
            {
                return &BuiltInFunction::kFunction_sin_00B;
            }
            break;
        }
        case 0x000003ccu:
        {
            if (name == BuiltInName::inversesqrt_20B)
            {
                return &BuiltInFunction::kFunction_inversesqrt_20B;
            }
            break;
        }
        case 0x000003cfu:
        {
            if (name == BuiltInName::tan_10B)
            {
                return &BuiltInFunction::kFunction_tan_10B;
            }
            break;
        }
        case 0x000003d8u:
        {
            if (name == BuiltInName::notEqual_20B20B)
            {
                return &BuiltInFunction::kFunction_notEqual_20B20B;
            }
            break;
        }
        case 0x000003ddu:
        {
            if (name == BuiltInName::cos_10B)
            {
                return &BuiltInFunction::kFunction_cos_10B;
            }
            break;
        }
        case 0x000003dfu:
        {
            if (name == BuiltInName::mix_30B30B30B)
            {
                return &BuiltInFunction::kFunction_mix_30B30B30B;
            }
            break;
        }
        case 0x000003e3u:
        {
            if (name == BuiltInName::equal_10E10E)
            {
                return &BuiltInFunction::kFunction_equal_10E10E;
            }
            break;
        }
        case 0x000003e8u:
        {
            if (name == BuiltInName::lessThanEqual_30C30C)
            {
                return &BuiltInFunction::kFunction_lessThanEqual_30C30C;
            }
            break;
        }
        case 0x000003efu:
        {
            if (name == BuiltInName::notEqual_10E10E)
            {
                return &BuiltInFunction::kFunction_notEqual_10E10E;
            }
            break;
        }
        case 0x000003f3u:
        {
            if (name == BuiltInName::matrixCompMult_50B50B)
            {
                return &BuiltInFunction::kFunction_matrixCompMult_50B50B;
            }
            break;
        }
        case 0x000003f5u:
        {
            if (name == BuiltInName::equal_30B30B)
            {
                return &BuiltInFunction::kFunction_equal_30B30B;
            }
            break;
        }
        case 0x000003fbu:
        {
            if (name == BuiltInName::equal_10B10B)
            {
                return &BuiltInFunction::kFunction_equal_10B10B;
            }
            break;
        }
        case 0x00000405u:
        {
            if (name == BuiltInName::max_10B10B)
            {
                return &BuiltInFunction::kFunction_max_10B10B;
            }
            break;
        }
        case 0x0000040bu:
        {
            if (name == BuiltInName::greaterThan_10B10B)
            {
                return &BuiltInFunction::kFunction_greaterThan_10B10B;
            }
            break;
        }
        case 0x0000040cu:
        {
            if (name == BuiltInName::asin_10B)
            {
                return &BuiltInFunction::kFunction_asin_10B;
            }
            break;
        }
        case 0x00000411u:
        {
            if (name == BuiltInName::length_20B)
            {
                return &BuiltInFunction::kFunction_length_20B;
            }
            break;
        }
        case 0x0000041cu:
        {
            if (name == BuiltInName::sign_10B)
            {
                return &BuiltInFunction::kFunction_sign_10B;
            }
            break;
        }
        case 0x00000421u:
        {
            if (name == BuiltInName::smoothstep_20B20B20B)
            {
                return &BuiltInFunction::kFunction_smoothstep_20B20B20B;
            }
            break;
        }
        case 0x00000429u:
        {
            if (name == BuiltInName::cos_20B)
            {
                return &BuiltInFunction::kFunction_cos_20B;
            }
            break;
        }
        case 0x0000042au:
        {
            if (name == BuiltInName::exp2_00B)
            {
                return &BuiltInFunction::kFunction_exp2_00B;
            }
            break;
        }
        case 0x0000042bu:
        {
            if (name == BuiltInName::radians_30B)
            {
                return &BuiltInFunction::kFunction_radians_30B;
            }
            break;
        }
        case 0x0000042du:
        {
            if (name == BuiltInName::tan_20B)
            {
                return &BuiltInFunction::kFunction_tan_20B;
            }
            break;
        }
        case 0x00000432u:
        {
            if (name == BuiltInName::floor_00B)
            {
                return &BuiltInFunction::kFunction_floor_00B;
            }
            break;
        }
    }
    if (mShaderType == GL_FRAGMENT_SHADER)
    {
        switch (nameHash)
        {
            case 0x000000bau:
            {
                if (name == BuiltInName::gl_FragCoord)
                {
                    return &BuiltInVariable::kVar_gl_FragCoord;
                }
                break;
            }
            case 0x00000145u:
            {
                if (name == BuiltInName::gl_PointCoord)
                {
                    return &BuiltInVariable::kVar_gl_PointCoord;
                }
                break;
            }
            case 0x00000146u:
            {
                if (name == BuiltInName::gl_FrontFacing)
                {
                    return &BuiltInVariable::kVar_gl_FrontFacing;
                }
                break;
            }
        }
    }
    if (mShaderType == GL_VERTEX_SHADER)
    {
        switch (nameHash)
        {
            case 0x00000397u:
            {
                if (name == BuiltInName::gl_Position)
                {
                    return &BuiltInVariable::kVar_gl_Position;
                }
                break;
            }
            case 0x00000407u:
            {
                if (name == BuiltInName::gl_PointSize)
                {
                    return &BuiltInVariable::kVar_gl_PointSize;
                }
                break;
            }
        }
    }
    return nullptr;
}

const UnmangledBuiltIn *TSymbolTable::getUnmangledBuiltInForShaderVersion(
    const ImmutableString &name,
    int shaderVersion)
{
    if (name.length() > 26)
    {
        return nullptr;
    }
    uint32_t nameHash = name.mangledNameHash();
    if (shaderVersion >= 310)
    {
        switch (nameHash)
        {
            case 0x00000002u:
            {
                if (name == BuiltInName::bitfieldInsert)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000004u:
            {
                if (name == BuiltInName::textureGatherOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000043u:
            {
                if (name == BuiltInName::findLSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000048u:
            {
                if (name == BuiltInName::uaddCarry)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000081u:
            {
                if (name == BuiltInName::unpackUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000afu:
            {
                if (name == BuiltInName::imulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000ebu:
            {
                if (name == BuiltInName::atomicCompSwap)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000108u:
            {
                if (name == BuiltInName::atomicCounterIncrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000152u:
            {
                if (name == BuiltInName::bitfieldReverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000017eu:
            {
                if (name == BuiltInName::textureSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000180u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000018cu:
            {
                if (name == BuiltInName::ldexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001abu:
            {
                if (name == BuiltInName::textureGather)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001b6u:
            {
                if (name == BuiltInName::memoryBarrierImage)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001bcu:
            {
                if (name == BuiltInName::imageSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001d4u:
            {
                if (name == BuiltInName::memoryBarrierBuffer)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001dbu:
            {
                if (name == BuiltInName::atomicXor)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001f5u:
            {
                if (name == BuiltInName::atomicMax)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001ffu:
            {
                if (name == BuiltInName::umulExtended)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000022du:
            {
                if (name == BuiltInName::packSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000238u:
            {
                if (name == BuiltInName::frexp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000024du:
            {
                if (name == BuiltInName::memoryBarrierAtomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000266u:
            {
                if (name == BuiltInName::findMSB)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000027fu:
            {
                if (name == BuiltInName::atomicCounterDecrement)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002a4u:
            {
                if (name == BuiltInName::atomicMin)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002b1u:
            {
                if (name == BuiltInName::imageStore)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002d9u:
            {
                if (name == BuiltInName::packUnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002feu:
            {
                if (name == BuiltInName::usubBorrow)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000030eu:
            {
                if (name == BuiltInName::atomicAnd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000369u:
            {
                if (name == BuiltInName::unpackSnorm4x8)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000378u:
            {
                if (name == BuiltInName::imageLoad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003b3u:
            {
                if (name == BuiltInName::atomicExchange)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003cbu:
            {
                if (name == BuiltInName::bitCount)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003eeu:
            {
                if (name == BuiltInName::memoryBarrier)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003fcu:
            {
                if (name == BuiltInName::atomicCounter)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003feu:
            {
                if (name == BuiltInName::bitfieldExtract)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000400u:
            {
                if (name == BuiltInName::atomicAdd)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000428u:
            {
                if (name == BuiltInName::atomicOr)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_COMPUTE_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000148u:
                {
                    if (name == BuiltInName::barrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x000001f8u:
                {
                    if (name == BuiltInName::groupMemoryBarrier)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000416u:
                {
                    if (name == BuiltInName::memoryBarrierShared)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_GEOMETRY_SHADER_EXT)
        {
            switch (nameHash)
            {
                case 0x000000ecu:
                {
                    if (name == BuiltInName::EndPrimitive)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
                case 0x00000355u:
                {
                    if (name == BuiltInName::EmitVertex)
                    {
                        return &UnmangledBuiltIns::EXT_geometry_shader;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion >= 300)
    {
        switch (nameHash)
        {
            case 0x0000000du:
            {
                if (name == BuiltInName::acosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000011u:
            {
                if (name == BuiltInName::inverse)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000017u:
            {
                if (name == BuiltInName::textureProjGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000035u:
            {
                if (name == BuiltInName::textureProjGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000037u:
            {
                if (name == BuiltInName::lessThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000003bu:
            {
                if (name == BuiltInName::round)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000003eu:
            {
                if (name == BuiltInName::unpackHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000045u:
            {
                if (name == BuiltInName::cosh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000059u:
            {
                if (name == BuiltInName::abs)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000006fu:
            {
                if (name == BuiltInName::sinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000071u:
            {
                if (name == BuiltInName::trunc)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000080u:
            {
                if (name == BuiltInName::packUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000082u:
            {
                if (name == BuiltInName::matrixCompMult)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000092u:
            {
                if (name == BuiltInName::textureGrad)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000aau:
            {
                if (name == BuiltInName::greaterThan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000d5u:
            {
                if (name == BuiltInName::atanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000e4u:
            {
                if (name == BuiltInName::max)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000efu:
            {
                if (name == BuiltInName::outerProduct)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000f0u:
            {
                if (name == BuiltInName::uintBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000fbu:
            {
                if (name == BuiltInName::packHalf2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000100u:
            {
                if (name == BuiltInName::rgb_2_yuv)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0x00000134u:
            {
                if (name == BuiltInName::textureProjLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000136u:
            {
                if (name == BuiltInName::modf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000013eu:
            {
                if (name == BuiltInName::textureOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000013fu:
            {
                if (name == BuiltInName::clamp)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000150u:
            {
                if (name == BuiltInName::lessThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000155u:
            {
                if (name == BuiltInName::textureLod)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000167u:
            {
                if (name == BuiltInName::unpackSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000017eu:
            {
                if (name == BuiltInName::textureSize)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000180u:
            {
                if (name == BuiltInName::texelFetch)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000018eu:
            {
                if (name == BuiltInName::floatBitsToUint)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001b9u:
            {
                if (name == BuiltInName::sign)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001e3u:
            {
                if (name == BuiltInName::min)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001ebu:
            {
                if (name == BuiltInName::mix)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000001f6u:
            {
                if (name == BuiltInName::unpackUnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000236u:
            {
                if (name == BuiltInName::texture)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000246u:
            {
                if (name == BuiltInName::roundEven)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000249u:
            {
                if (name == BuiltInName::yuv_2_rgb)
                {
                    return &UnmangledBuiltIns::EXT_YUV_target;
                }
                break;
            }
            case 0x0000025bu:
            {
                if (name == BuiltInName::texelFetchOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000273u:
            {
                if (name == BuiltInName::isnan)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000287u:
            {
                if (name == BuiltInName::transpose)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000029bu:
            {
                if (name == BuiltInName::equal)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002acu:
            {
                if (name == BuiltInName::textureProjOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002aeu:
            {
                if (name == BuiltInName::textureLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002c8u:
            {
                if (name == BuiltInName::asinh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002d0u:
            {
                if (name == BuiltInName::greaterThanEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002e3u:
            {
                if (name == BuiltInName::tanh)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002f1u:
            {
                if (name == BuiltInName::intBitsToFloat)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000002fdu:
            {
                if (name == BuiltInName::floatBitsToInt)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000330u:
            {
                if (name == BuiltInName::packSnorm2x16)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000338u:
            {
                if (name == BuiltInName::textureProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000037bu:
            {
                if (name == BuiltInName::determinant)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003acu:
            {
                if (name == BuiltInName::isinf)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000003c6u:
            {
                if (name == BuiltInName::textureProjLodOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000041fu:
            {
                if (name == BuiltInName::textureGradOffset)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x0000042cu:
            {
                if (name == BuiltInName::notEqual)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000104u:
                {
                    if (name == BuiltInName::fwidth)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000367u:
                {
                    if (name == BuiltInName::dFdx)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000388u:
                {
                    if (name == BuiltInName::dFdy)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    if (shaderVersion == 100)
    {
        switch (nameHash)
        {
            case 0x00000010u:
            {
                if (name == BuiltInName::textureCubeGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0x0000002du:
            {
                if (name == BuiltInName::texture2DRectProj)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0x00000054u:
            {
                if (name == BuiltInName::texture2DGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
            case 0x000000bbu:
            {
                if (name == BuiltInName::texture2D)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x000000f6u:
            {
                if (name == BuiltInName::textureCube)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000109u:
            {
                if (name == BuiltInName::texture2DProj)
                {
                    return &UnmangledBuiltIns::UNDEFINED;
                }
                break;
            }
            case 0x00000142u:
            {
                if (name == BuiltInName::texture2DRect)
                {
                    return &UnmangledBuiltIns::ARB_texture_rectangle;
                }
                break;
            }
            case 0x000002e0u:
            {
                if (name == BuiltInName::texture2DProjGradEXT)
                {
                    return &UnmangledBuiltIns::EXT_shader_texture_lod;
                }
                break;
            }
        }
        if (mShaderType == GL_FRAGMENT_SHADER)
        {
            switch (nameHash)
            {
                case 0x00000104u:
                {
                    if (name == BuiltInName::fwidthExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x000001ccu:
                {
                    if (name == BuiltInName::texture3DProj)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x000001e8u:
                {
                    if (name == BuiltInName::texture3DProjLod)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x000001feu:
                {
                    if (name == BuiltInName::texture3D)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x0000022bu:
                {
                    if (name == BuiltInName::texture3DLod)
                    {
                        return &UnmangledBuiltIns::OES_texture_3D;
                    }
                    break;
                }
                case 0x0000027cu:
                {
                    if (name == BuiltInName::texture2DProjLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0x0000029cu:
                {
                    if (name == BuiltInName::texture2DLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
                case 0x00000367u:
                {
                    if (name == BuiltInName::dFdxExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x00000388u:
                {
                    if (name == BuiltInName::dFdyExt)
                    {
                        return &UnmangledBuiltIns::OES_standard_derivatives;
                    }
                    break;
                }
                case 0x000003beu:
                {
                    if (name == BuiltInName::textureCubeLodEXT)
                    {
                        return &UnmangledBuiltIns::EXT_shader_texture_lod;
                    }
                    break;
                }
            }
        }
        if (mShaderType == GL_VERTEX_SHADER)
        {
            switch (nameHash)
            {
                case 0x0000002cu:
                {
                    if (name == BuiltInName::textureCubeLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x000003bbu:
                {
                    if (name == BuiltInName::texture2DProjLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
                case 0x00000438u:
                {
                    if (name == BuiltInName::texture2DLod)
                    {
                        return &UnmangledBuiltIns::UNDEFINED;
                    }
                    break;
                }
            }
        }
    }
    switch (nameHash)
    {
        case 0x00000001u:
        {
            if (name == BuiltInName::all)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000037u:
        {
            if (name == BuiltInName::lessThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000004fu:
        {
            if (name == BuiltInName::asin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000059u:
        {
            if (name == BuiltInName::abs)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000082u:
        {
            if (name == BuiltInName::matrixCompMult)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000aau:
        {
            if (name == BuiltInName::greaterThan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000c8u:
        {
            if (name == BuiltInName::tan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000cdu:
        {
            if (name == BuiltInName::normalize)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000ddu:
        {
            if (name == BuiltInName::sin)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000e2u:
        {
            if (name == BuiltInName::atan)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000e4u:
        {
            if (name == BuiltInName::max)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000000e6u:
        {
            if (name == BuiltInName::reflect)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000117u:
        {
            if (name == BuiltInName::degrees)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000011bu:
        {
            if (name == BuiltInName::cross)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000130u:
        {
            if (name == BuiltInName::radians)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000131u:
        {
            if (name == BuiltInName::smoothstep)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000013fu:
        {
            if (name == BuiltInName::clamp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000150u:
        {
            if (name == BuiltInName::lessThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000156u:
        {
            if (name == BuiltInName::faceforward)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000162u:
        {
            if (name == BuiltInName::log2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000017bu:
        {
            if (name == BuiltInName::length)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000197u:
        {
            if (name == BuiltInName::exp2)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001b9u:
        {
            if (name == BuiltInName::sign)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001bdu:
        {
            if (name == BuiltInName::distance)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001d9u:
        {
            if (name == BuiltInName::any)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001e3u:
        {
            if (name == BuiltInName::min)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000001ebu:
        {
            if (name == BuiltInName::mix)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000214u:
        {
            if (name == BuiltInName::exp)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000021au:
        {
            if (name == BuiltInName::dot)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000024fu:
        {
            if (name == BuiltInName::ceil)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000295u:
        {
            if (name == BuiltInName::cos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000029bu:
        {
            if (name == BuiltInName::equal)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002a9u:
        {
            if (name == BuiltInName::pow)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002beu:
        {
            if (name == BuiltInName::fract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000002d0u:
        {
            if (name == BuiltInName::greaterThanEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000308u:
        {
            if (name == BuiltInName::sqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000035cu:
        {
            if (name == BuiltInName::mod)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000039au:
        {
            if (name == BuiltInName::step)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003adu:
        {
            if (name == BuiltInName::acos)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003cau:
        {
            if (name == BuiltInName::log)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003e7u:
        {
            if (name == BuiltInName::inversesqrt)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x000003ecu:
        {
            if (name == BuiltInName::refract)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000412u:
        {
            if (name == BuiltInName::floor)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x00000413u:
        {
            if (name == BuiltInName::notFunc)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
        case 0x0000042cu:
        {
            if (name == BuiltInName::notEqual)
            {
                return &UnmangledBuiltIns::UNDEFINED;
            }
            break;
        }
    }
    return nullptr;
}

}  // namespace sh
